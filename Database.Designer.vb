'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8745
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Public Class GroupSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'GroupSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.[Group] (["& _ 
            "GroupId], [GroupName], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate],"& _ 
            " [RecordStatus]) VALUES (@GroupId, @GroupName, @CreatedBy, @CreatedDate, @Modifi"& _ 
            "edBy, @ModifiedDate, @RecordStatus) SET @sync_row_count = @@rowcount; IF CHANGE_"& _ 
            "TRACKING_MIN_VALID_VERSION(object_id(N'dbo.[Group]')) > @sync_last_received_anch"& _ 
            "or RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information f"& _ 
            "or table ''%s''. To recover from this error, the client must reinitialize its lo"& _ 
            "cal database and try again',16,3,N'dbo.[Group]') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GroupId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GroupName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'GroupSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.[Group] FROM db"& _ 
            "o.[Group] JOIN CHANGETABLE(VERSION dbo.[Group], ([GroupId]), (@GroupId)) CT  ON "& _ 
            "CT.[GroupId] = dbo.[Group].[GroupId] WHERE (@sync_force_write = 1 OR CT.SYS_CHAN"& _ 
            "GE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT"& _ 
            ".SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_bina"& _ 
            "ry)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(obje"& _ 
            "ct_id(N'dbo.[Group]')) > @sync_last_received_anchor RAISERROR (N'SQL Server Chan"& _ 
            "ge Tracking has cleaned up tracking information for table ''%s''. To recover fro"& _ 
            "m this error, the client must reinitialize its local database and try again',16,"& _ 
            "3,N'dbo.[Group]') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GroupId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'GroupSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.[Group] SET [Gr"& _ 
            "oupName] = @GroupName, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, ["& _ 
            "ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, [RecordStatus] = @Rec"& _ 
            "ordStatus FROM dbo.[Group]  JOIN CHANGETABLE(VERSION dbo.[Group], ([GroupId]), ("& _ 
            "@GroupId)) CT  ON CT.[GroupId] = dbo.[Group].[GroupId] WHERE (@sync_force_write "& _ 
            "= 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_rece"& _ 
            "ived_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @s"& _ 
            "ync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_"& _ 
            "VALID_VERSION(object_id(N'dbo.[Group]')) > @sync_last_received_anchor RAISERROR "& _ 
            "(N'SQL Server Change Tracking has cleaned up tracking information for table ''%s"& _ 
            "''. To recover from this error, the client must reinitialize its local database "& _ 
            "and try again',16,3,N'dbo.[Group]') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GroupName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GroupId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'GroupSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[GroupId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETABL"& _ 
            "E(CHANGES dbo.[Group], @sync_last_received_anchor) CT WHERE (CT.[GroupId] = @Gro"& _ 
            "upId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GroupId", System.Data.SqlDbType.UniqueIdentifier))
        'GroupSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.[Group].[GroupId], [GroupName], [CreatedBy], [CreatedDate], [ModifiedB"& _ 
            "y], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION"& _ 
            " FROM dbo.[Group] JOIN CHANGETABLE(VERSION dbo.[Group], ([GroupId]), (@GroupId))"& _ 
            " CT  ON CT.[GroupId] = dbo.[Group].[GroupId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GroupId", System.Data.SqlDbType.UniqueIdentifier))
        'GroupSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.[Group].[GroupId], [GroupName], [CreatedBy], "& _ 
            "[CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.[Group] LEF"& _ 
            "T OUTER JOIN CHANGETABLE(CHANGES dbo.[Group], @sync_last_received_anchor) CT ON "& _ 
            "CT.[GroupId] = dbo.[Group].[GroupId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT."& _ 
            "SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.[Group].[Gr"& _ 
            "oupId], [GroupName], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], ["& _ 
            "RecordStatus] FROM dbo.[Group] JOIN CHANGETABLE(CHANGES dbo.[Group], @sync_last_"& _ 
            "received_anchor) CT ON CT.[GroupId] = dbo.[Group].[GroupId] WHERE (CT.SYS_CHANGE"& _ 
            "_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_ancho"& _ 
            "r AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id"& _ 
            "_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.[Group]')) > @sy"& _ 
            "nc_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up t"& _ 
            "racking information for table ''%s''. To recover from this error, the client mus"& _ 
            "t reinitialize its local database and try again',16,3,N'dbo.[Group]')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'GroupSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[GroupId] FROM CHANGETABLE(CHANGES dbo."& _ 
            "[Group], @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D' AND"& _ 
            " CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT I"& _ 
            "S NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_"& _ 
            "MIN_VALID_VERSION(object_id(N'dbo.[Group]')) > @sync_last_received_anchor RAISER"& _ 
            "ROR (N'SQL Server Change Tracking has cleaned up tracking information for table "& _ 
            "''%s''. To recover from this error, the client must reinitialize its local datab"& _ 
            "ase and try again',16,3,N'dbo.[Group]')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'GroupSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.[Group].[GroupId], [GroupName], [Creat"& _ 
            "edBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.[Gro"& _ 
            "up] JOIN CHANGETABLE(CHANGES dbo.[Group], @sync_last_received_anchor) CT ON CT.["& _ 
            "GroupId] = dbo.[Group].[GroupId] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS"& _ 
            "_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL "& _ 
            "OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VAL"& _ 
            "ID_VERSION(object_id(N'dbo.[Group]')) > @sync_last_received_anchor RAISERROR (N'"& _ 
            "SQL Server Change Tracking has cleaned up tracking information for table ''%s''."& _ 
            " To recover from this error, the client must reinitialize its local database and"& _ 
            " try again',16,3,N'dbo.[Group]')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Group"
    End Sub
End Class

Partial Public Class UserSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'UserSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.[User] ([U"& _ 
            "serId], [UserName], [PasswordHash], [SaltHash], [EmployeeId], [LastLoginDate], ["& _ 
            "LastPasswordChange], [OldPassword], [CreatedBy], [CreatedDate], [ModifiedBy], [M"& _ 
            "odifiedDate], [RecordStatus]) VALUES (@UserId, @UserName, @PasswordHash, @SaltHa"& _ 
            "sh, @EmployeeId, @LastLoginDate, @LastPasswordChange, @OldPassword, @CreatedBy, "& _ 
            "@CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_row_count = @"& _ 
            "@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.[User]')) > @syn"& _ 
            "c_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tr"& _ 
            "acking information for table ''%s''. To recover from this error, the client must"& _ 
            " reinitialize its local database and try again',16,3,N'dbo.[User]') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@UserId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@UserName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PasswordHash", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SaltHash", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EmployeeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastLoginDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastPasswordChange", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OldPassword", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'UserSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.[User] FROM dbo"& _ 
            ".[User] JOIN CHANGETABLE(VERSION dbo.[User], ([UserId]), (@UserId)) CT  ON CT.[U"& _ 
            "serId] = dbo.[User].[UserId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSI"& _ 
            "ON IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHA"& _ 
            "NGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET"& _ 
            " @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'"& _ 
            "dbo.[User]')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracki"& _ 
            "ng has cleaned up tracking information for table ''%s''. To recover from this er"& _ 
            "ror, the client must reinitialize its local database and try again',16,3,N'dbo.["& _ 
            "User]') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@UserId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'UserSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.[User] SET [Use"& _ 
            "rName] = @UserName, [PasswordHash] = @PasswordHash, [SaltHash] = @SaltHash, [Emp"& _ 
            "loyeeId] = @EmployeeId, [LastLoginDate] = @LastLoginDate, [LastPasswordChange] ="& _ 
            " @LastPasswordChange, [OldPassword] = @OldPassword, [CreatedBy] = @CreatedBy, [C"& _ 
            "reatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @Modifi"& _ 
            "edDate, [RecordStatus] = @RecordStatus FROM dbo.[User]  JOIN CHANGETABLE(VERSION"& _ 
            " dbo.[User], ([UserId]), (@UserId)) CT  ON CT.[UserId] = dbo.[User].[UserId] WHE"& _ 
            "RE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERS"& _ 
            "ION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.S"& _ 
            "YS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; I"& _ 
            "F CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.[User]')) > @sync_last_recei"& _ 
            "ved_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking infor"& _ 
            "mation for table ''%s''. To recover from this error, the client must reinitializ"& _ 
            "e its local database and try again',16,3,N'dbo.[User]') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@UserName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PasswordHash", System.Data.SqlDbType.VarBinary))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SaltHash", System.Data.SqlDbType.VarBinary))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EmployeeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastLoginDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastPasswordChange", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OldPassword", System.Data.SqlDbType.VarBinary))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@UserId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'UserSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[UserId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETABLE"& _ 
            "(CHANGES dbo.[User], @sync_last_received_anchor) CT WHERE (CT.[UserId] = @UserId"& _ 
            " AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@UserId", System.Data.SqlDbType.UniqueIdentifier))
        'UserSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.[User].[UserId], [UserName], [PasswordHash], [SaltHash], [EmployeeId],"& _ 
            " [LastLoginDate], [LastPasswordChange], [OldPassword], [CreatedBy], [CreatedDate"& _ 
            "], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_C"& _ 
            "HANGE_VERSION FROM dbo.[User] JOIN CHANGETABLE(VERSION dbo.[User], ([UserId]), ("& _ 
            "@UserId)) CT  ON CT.[UserId] = dbo.[User].[UserId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@UserId", System.Data.SqlDbType.UniqueIdentifier))
        'UserSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_User_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'UserSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_User_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'UserSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_User_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "User"
    End Sub
End Class

Partial Public Class ApplicableRateSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'ApplicableRateSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Applicable"& _ 
            "Rate ([ApplicableRateId], [ApplicableRateName], [CommodityTypeId], [ServiceModeI"& _ 
            "d], [ServiceTypeId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], ["& _ 
            "RecordStatus], [Description]) VALUES (@ApplicableRateId, @ApplicableRateName, @C"& _ 
            "ommodityTypeId, @ServiceModeId, @ServiceTypeId, @CreatedBy, @CreatedDate, @Modif"& _ 
            "iedBy, @ModifiedDate, @RecordStatus, @Description) SET @sync_row_count = @@rowco"& _ 
            "unt; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.ApplicableRate')) > @s"& _ 
            "ync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up "& _ 
            "tracking information for table ''%s''. To recover from this error, the client mu"& _ 
            "st reinitialize its local database and try again',16,3,N'dbo.ApplicableRate') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplicableRateId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplicableRateName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'ApplicableRateSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.ApplicableRate "& _ 
            "FROM dbo.ApplicableRate JOIN CHANGETABLE(VERSION dbo.ApplicableRate, ([Applicabl"& _ 
            "eRateId]), (@ApplicableRateId)) CT  ON CT.[ApplicableRateId] = dbo.ApplicableRat"& _ 
            "e.[ApplicableRateId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NU"& _ 
            "LL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONT"& _ 
            "EXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_r"& _ 
            "ow_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Appl"& _ 
            "icableRate')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracki"& _ 
            "ng has cleaned up tracking information for table ''%s''. To recover from this er"& _ 
            "ror, the client must reinitialize its local database and try again',16,3,N'dbo.A"& _ 
            "pplicableRate') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplicableRateId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'ApplicableRateSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.ApplicableRate "& _ 
            "SET [ApplicableRateName] = @ApplicableRateName, [CommodityTypeId] = @CommodityTy"& _ 
            "peId, [ServiceModeId] = @ServiceModeId, [ServiceTypeId] = @ServiceTypeId, [Creat"& _ 
            "edBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [M"& _ 
            "odifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus, [Description] = @D"& _ 
            "escription FROM dbo.ApplicableRate  JOIN CHANGETABLE(VERSION dbo.ApplicableRate,"& _ 
            " ([ApplicableRateId]), (@ApplicableRateId)) CT  ON CT.[ApplicableRateId] = dbo.A"& _ 
            "pplicableRate.[ApplicableRateId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_V"& _ 
            "ERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS"& _ 
            "_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary))"& _ 
            " SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_i"& _ 
            "d(N'dbo.ApplicableRate')) > @sync_last_received_anchor RAISERROR (N'SQL Server C"& _ 
            "hange Tracking has cleaned up tracking information for table ''%s''. To recover "& _ 
            "from this error, the client must reinitialize its local database and try again',"& _ 
            "16,3,N'dbo.ApplicableRate') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplicableRateName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplicableRateId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'ApplicableRateSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[ApplicableRateId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM C"& _ 
            "HANGETABLE(CHANGES dbo.ApplicableRate, @sync_last_received_anchor) CT WHERE (CT."& _ 
            "[ApplicableRateId] = @ApplicableRateId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplicableRateId", System.Data.SqlDbType.UniqueIdentifier))
        'ApplicableRateSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.ApplicableRate.[ApplicableRateId], [ApplicableRateName], [CommodityTyp"& _ 
            "eId], [ServiceModeId], [ServiceTypeId], [CreatedBy], [CreatedDate], [ModifiedBy]"& _ 
            ", [ModifiedDate], [RecordStatus], [Description], CT.SYS_CHANGE_CONTEXT, CT.SYS_C"& _ 
            "HANGE_VERSION FROM dbo.ApplicableRate JOIN CHANGETABLE(VERSION dbo.ApplicableRat"& _ 
            "e, ([ApplicableRateId]), (@ApplicableRateId)) CT  ON CT.[ApplicableRateId] = dbo"& _ 
            ".ApplicableRate.[ApplicableRateId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplicableRateId", System.Data.SqlDbType.UniqueIdentifier))
        'ApplicableRateSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.ApplicableRate.[ApplicableRateId], [Applicabl"& _ 
            "eRateName], [CommodityTypeId], [ServiceModeId], [ServiceTypeId], [CreatedBy], [C"& _ 
            "reatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], [Description] FROM db"& _ 
            "o.ApplicableRate LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.ApplicableRate, @sync_l"& _ 
            "ast_received_anchor) CT ON CT.[ApplicableRateId] = dbo.ApplicableRate.[Applicabl"& _ 
            "eRateId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_"& _ 
            "client_id_binary) ELSE  BEGIN SELECT dbo.ApplicableRate.[ApplicableRateId], [App"& _ 
            "licableRateName], [CommodityTypeId], [ServiceModeId], [ServiceTypeId], [CreatedB"& _ 
            "y], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], [Description] F"& _ 
            "ROM dbo.ApplicableRate JOIN CHANGETABLE(CHANGES dbo.ApplicableRate, @sync_last_r"& _ 
            "eceived_anchor) CT ON CT.[ApplicableRateId] = dbo.ApplicableRate.[ApplicableRate"& _ 
            "Id] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= "& _ 
            "@sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CO"& _ 
            "NTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_i"& _ 
            "d(N'dbo.ApplicableRate')) > @sync_last_received_anchor RAISERROR (N'SQL Server C"& _ 
            "hange Tracking has cleaned up tracking information for table ''%s''. To recover "& _ 
            "from this error, the client must reinitialize its local database and try again',"& _ 
            "16,3,N'dbo.ApplicableRate')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'ApplicableRateSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[ApplicableRateId] FROM CHANGETABLE(CHA"& _ 
            "NGES dbo.ApplicableRate, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPE"& _ 
            "RATION = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_"& _ 
            "CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF "& _ 
            "CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.ApplicableRate')) > @sync_last"& _ 
            "_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking"& _ 
            " information for table ''%s''. To recover from this error, the client must reini"& _ 
            "tialize its local database and try again',16,3,N'dbo.ApplicableRate')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'ApplicableRateSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.ApplicableRate.[ApplicableRateId], [Ap"& _ 
            "plicableRateName], [CommodityTypeId], [ServiceModeId], [ServiceTypeId], [Created"& _ 
            "By], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], [Description] "& _ 
            "FROM dbo.ApplicableRate JOIN CHANGETABLE(CHANGES dbo.ApplicableRate, @sync_last_"& _ 
            "received_anchor) CT ON CT.[ApplicableRateId] = dbo.ApplicableRate.[ApplicableRat"& _ 
            "eId] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new"& _ 
            "_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> "& _ 
            "@sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.A"& _ 
            "pplicableRate')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tra"& _ 
            "cking has cleaned up tracking information for table ''%s''. To recover from this"& _ 
            " error, the client must reinitialize its local database and try again',16,3,N'db"& _ 
            "o.ApplicableRate')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "ApplicableRate"
    End Sub
End Class

Partial Public Class ApplicationSettingSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'ApplicationSettingSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Applicatio"& _ 
            "nSetting ([ApplicationSettingId], [SettingName], [SettingValue], [Description], "& _ 
            "[CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus]) VALUES"& _ 
            " (@ApplicationSettingId, @SettingName, @SettingValue, @Description, @CreatedBy, "& _ 
            "@CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_row_count = @"& _ 
            "@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.ApplicationSetti"& _ 
            "ng')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has c"& _ 
            "leaned up tracking information for table ''%s''. To recover from this error, the"& _ 
            " client must reinitialize its local database and try again',16,3,N'dbo.Applicati"& _ 
            "onSetting') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplicationSettingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SettingName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SettingValue", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'ApplicationSettingSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.ApplicationSett"& _ 
            "ing FROM dbo.ApplicationSetting JOIN CHANGETABLE(VERSION dbo.ApplicationSetting,"& _ 
            " ([ApplicationSettingId]), (@ApplicationSettingId)) CT  ON CT.[ApplicationSettin"& _ 
            "gId] = dbo.ApplicationSetting.[ApplicationSettingId] WHERE (@sync_force_write = "& _ 
            "1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_receiv"& _ 
            "ed_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @syn"& _ 
            "c_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VA"& _ 
            "LID_VERSION(object_id(N'dbo.ApplicationSetting')) > @sync_last_received_anchor R"& _ 
            "AISERROR (N'SQL Server Change Tracking has cleaned up tracking information for t"& _ 
            "able ''%s''. To recover from this error, the client must reinitialize its local "& _ 
            "database and try again',16,3,N'dbo.ApplicationSetting') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplicationSettingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'ApplicationSettingSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.ApplicationSett"& _ 
            "ing SET [SettingName] = @SettingName, [SettingValue] = @SettingValue, [Descripti"& _ 
            "on] = @Description, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [Mod"& _ 
            "ifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, [RecordStatus] = @Record"& _ 
            "Status FROM dbo.ApplicationSetting  JOIN CHANGETABLE(VERSION dbo.ApplicationSett"& _ 
            "ing, ([ApplicationSettingId]), (@ApplicationSettingId)) CT  ON CT.[ApplicationSe"& _ 
            "ttingId] = dbo.ApplicationSetting.[ApplicationSettingId] WHERE (@sync_force_writ"& _ 
            "e = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_re"& _ 
            "ceived_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = "& _ 
            "@sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MI"& _ 
            "N_VALID_VERSION(object_id(N'dbo.ApplicationSetting')) > @sync_last_received_anch"& _ 
            "or RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information f"& _ 
            "or table ''%s''. To recover from this error, the client must reinitialize its lo"& _ 
            "cal database and try again',16,3,N'dbo.ApplicationSetting') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SettingName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SettingValue", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplicationSettingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'ApplicationSettingSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[ApplicationSettingId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FR"& _ 
            "OM CHANGETABLE(CHANGES dbo.ApplicationSetting, @sync_last_received_anchor) CT WH"& _ 
            "ERE (CT.[ApplicationSettingId] = @ApplicationSettingId AND CT.SYS_CHANGE_OPERATI"& _ 
            "ON = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplicationSettingId", System.Data.SqlDbType.UniqueIdentifier))
        'ApplicationSettingSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.ApplicationSetting.[ApplicationSettingId], [SettingName], [SettingValu"& _ 
            "e], [Description], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [Re"& _ 
            "cordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.ApplicationSe"& _ 
            "tting JOIN CHANGETABLE(VERSION dbo.ApplicationSetting, ([ApplicationSettingId]),"& _ 
            " (@ApplicationSettingId)) CT  ON CT.[ApplicationSettingId] = dbo.ApplicationSett"& _ 
            "ing.[ApplicationSettingId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplicationSettingId", System.Data.SqlDbType.UniqueIdentifier))
        'ApplicationSettingSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.ApplicationSetting.[ApplicationSettingId], [S"& _ 
            "ettingName], [SettingValue], [Description], [CreatedBy], [CreatedDate], [Modifie"& _ 
            "dBy], [ModifiedDate], [RecordStatus] FROM dbo.ApplicationSetting LEFT OUTER JOIN"& _ 
            " CHANGETABLE(CHANGES dbo.ApplicationSetting, @sync_last_received_anchor) CT ON C"& _ 
            "T.[ApplicationSettingId] = dbo.ApplicationSetting.[ApplicationSettingId] WHERE ("& _ 
            "CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary"& _ 
            ") ELSE  BEGIN SELECT dbo.ApplicationSetting.[ApplicationSettingId], [SettingName"& _ 
            "], [SettingValue], [Description], [CreatedBy], [CreatedDate], [ModifiedBy], [Mod"& _ 
            "ifiedDate], [RecordStatus] FROM dbo.ApplicationSetting JOIN CHANGETABLE(CHANGES "& _ 
            "dbo.ApplicationSetting, @sync_last_received_anchor) CT ON CT.[ApplicationSetting"& _ 
            "Id] = dbo.ApplicationSetting.[ApplicationSettingId] WHERE (CT.SYS_CHANGE_OPERATI"& _ 
            "ON = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anchor AND (C"& _ 
            "T.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)"& _ 
            "); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.ApplicationSetting')) > "& _ 
            "@sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned u"& _ 
            "p tracking information for table ''%s''. To recover from this error, the client "& _ 
            "must reinitialize its local database and try again',16,3,N'dbo.ApplicationSettin"& _ 
            "g')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'ApplicationSettingSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[ApplicationSettingId] FROM CHANGETABLE"& _ 
            "(CHANGES dbo.ApplicationSetting, @sync_last_received_anchor) CT WHERE (CT.SYS_CH"& _ 
            "ANGE_OPERATION = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND "& _ 
            "(CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binar"& _ 
            "y)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.ApplicationSetting')) "& _ 
            "> @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned"& _ 
            " up tracking information for table ''%s''. To recover from this error, the clien"& _ 
            "t must reinitialize its local database and try again',16,3,N'dbo.ApplicationSett"& _ 
            "ing')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'ApplicationSettingSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.ApplicationSetting.[ApplicationSetting"& _ 
            "Id], [SettingName], [SettingValue], [Description], [CreatedBy], [CreatedDate], ["& _ 
            "ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.ApplicationSetting JOIN CHA"& _ 
            "NGETABLE(CHANGES dbo.ApplicationSetting, @sync_last_received_anchor) CT ON CT.[A"& _ 
            "pplicationSettingId] = dbo.ApplicationSetting.[ApplicationSettingId] WHERE (CT.S"& _ 
            "YS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor"& _ 
            " AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_"& _ 
            "binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.ApplicationSettin"& _ 
            "g')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cl"& _ 
            "eaned up tracking information for table ''%s''. To recover from this error, the "& _ 
            "client must reinitialize its local database and try again',16,3,N'dbo.Applicatio"& _ 
            "nSetting')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "ApplicationSetting"
    End Sub
End Class

Partial Public Class BillingPeriodSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'BillingPeriodSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.BillingPer"& _ 
            "iod ([BillingPeriodId], [BillingPeriodName], [NumberOfDays], [Description], [Lis"& _ 
            "tOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus"& _ 
            "]) VALUES (@BillingPeriodId, @BillingPeriodName, @NumberOfDays, @Description, @L"& _ 
            "istOrder, @CreatedBy, @CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus) S"& _ 
            "ET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id("& _ 
            "N'dbo.BillingPeriod')) > @sync_last_received_anchor RAISERROR (N'SQL Server Chan"& _ 
            "ge Tracking has cleaned up tracking information for table ''%s''. To recover fro"& _ 
            "m this error, the client must reinitialize its local database and try again',16,"& _ 
            "3,N'dbo.BillingPeriod') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingPeriodId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingPeriodName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@NumberOfDays", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'BillingPeriodSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.BillingPeriod F"& _ 
            "ROM dbo.BillingPeriod JOIN CHANGETABLE(VERSION dbo.BillingPeriod, ([BillingPerio"& _ 
            "dId]), (@BillingPeriodId)) CT  ON CT.[BillingPeriodId] = dbo.BillingPeriod.[Bill"& _ 
            "ingPeriodId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT"& _ 
            ".SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS N"& _ 
            "OT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count"& _ 
            " = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.BillingPerio"& _ 
            "d')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cl"& _ 
            "eaned up tracking information for table ''%s''. To recover from this error, the "& _ 
            "client must reinitialize its local database and try again',16,3,N'dbo.BillingPer"& _ 
            "iod') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingPeriodId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'BillingPeriodSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.BillingPeriod S"& _ 
            "ET [BillingPeriodName] = @BillingPeriodName, [NumberOfDays] = @NumberOfDays, [De"& _ 
            "scription] = @Description, [ListOrder] = @ListOrder, [CreatedBy] = @CreatedBy, ["& _ 
            "CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @Modif"& _ 
            "iedDate, [RecordStatus] = @RecordStatus FROM dbo.BillingPeriod  JOIN CHANGETABLE"& _ 
            "(VERSION dbo.BillingPeriod, ([BillingPeriodId]), (@BillingPeriodId)) CT  ON CT.["& _ 
            "BillingPeriodId] = dbo.BillingPeriod.[BillingPeriodId] WHERE (@sync_force_write "& _ 
            "= 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_rece"& _ 
            "ived_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @s"& _ 
            "ync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_"& _ 
            "VALID_VERSION(object_id(N'dbo.BillingPeriod')) > @sync_last_received_anchor RAIS"& _ 
            "ERROR (N'SQL Server Change Tracking has cleaned up tracking information for tabl"& _ 
            "e ''%s''. To recover from this error, the client must reinitialize its local dat"& _ 
            "abase and try again',16,3,N'dbo.BillingPeriod') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingPeriodName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@NumberOfDays", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingPeriodId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'BillingPeriodSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[BillingPeriodId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CH"& _ 
            "ANGETABLE(CHANGES dbo.BillingPeriod, @sync_last_received_anchor) CT WHERE (CT.[B"& _ 
            "illingPeriodId] = @BillingPeriodId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingPeriodId", System.Data.SqlDbType.UniqueIdentifier))
        'BillingPeriodSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.BillingPeriod.[BillingPeriodId], [BillingPeriodName], [NumberOfDays], "& _ 
            "[Description], [ListOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedD"& _ 
            "ate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.Bill"& _ 
            "ingPeriod JOIN CHANGETABLE(VERSION dbo.BillingPeriod, ([BillingPeriodId]), (@Bil"& _ 
            "lingPeriodId)) CT  ON CT.[BillingPeriodId] = dbo.BillingPeriod.[BillingPeriodId]"& _ 
            ""
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingPeriodId", System.Data.SqlDbType.UniqueIdentifier))
        'BillingPeriodSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.BillingPeriod.[BillingPeriodId], [BillingPeri"& _ 
            "odName], [NumberOfDays], [Description], [ListOrder], [CreatedBy], [CreatedDate],"& _ 
            " [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.BillingPeriod LEFT OUTER "& _ 
            "JOIN CHANGETABLE(CHANGES dbo.BillingPeriod, @sync_last_received_anchor) CT ON CT"& _ 
            ".[BillingPeriodId] = dbo.BillingPeriod.[BillingPeriodId] WHERE (CT.SYS_CHANGE_CO"& _ 
            "NTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SE"& _ 
            "LECT dbo.BillingPeriod.[BillingPeriodId], [BillingPeriodName], [NumberOfDays], ["& _ 
            "Description], [ListOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDa"& _ 
            "te], [RecordStatus] FROM dbo.BillingPeriod JOIN CHANGETABLE(CHANGES dbo.BillingP"& _ 
            "eriod, @sync_last_received_anchor) CT ON CT.[BillingPeriodId] = dbo.BillingPerio"& _ 
            "d.[BillingPeriodId] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CREAT"& _ 
            "ION_VERSION  <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR "& _ 
            "CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_"& _ 
            "VERSION(object_id(N'dbo.BillingPeriod')) > @sync_last_received_anchor RAISERROR "& _ 
            "(N'SQL Server Change Tracking has cleaned up tracking information for table ''%s"& _ 
            "''. To recover from this error, the client must reinitialize its local database "& _ 
            "and try again',16,3,N'dbo.BillingPeriod')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'BillingPeriodSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[BillingPeriodId] FROM CHANGETABLE(CHAN"& _ 
            "GES dbo.BillingPeriod, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERA"& _ 
            "TION = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CH"& _ 
            "ANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CH"& _ 
            "ANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.BillingPeriod')) > @sync_last_re"& _ 
            "ceived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking in"& _ 
            "formation for table ''%s''. To recover from this error, the client must reinitia"& _ 
            "lize its local database and try again',16,3,N'dbo.BillingPeriod')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'BillingPeriodSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.BillingPeriod.[BillingPeriodId], [Bill"& _ 
            "ingPeriodName], [NumberOfDays], [Description], [ListOrder], [CreatedBy], [Create"& _ 
            "dDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.BillingPeriod JOIN"& _ 
            " CHANGETABLE(CHANGES dbo.BillingPeriod, @sync_last_received_anchor) CT ON CT.[Bi"& _ 
            "llingPeriodId] = dbo.BillingPeriod.[BillingPeriodId] WHERE (CT.SYS_CHANGE_OPERAT"& _ 
            "ION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHA"& _ 
            "NGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHA"& _ 
            "NGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.BillingPeriod')) > @sync_last_rec"& _ 
            "eived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking inf"& _ 
            "ormation for table ''%s''. To recover from this error, the client must reinitial"& _ 
            "ize its local database and try again',16,3,N'dbo.BillingPeriod')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "BillingPeriod"
    End Sub
End Class

Partial Public Class BookingRemarkSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'BookingRemarkSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.BookingRem"& _ 
            "ark ([BookingRemarkId], [BookingRemarkName], [ListOrder], [CreatedBy], [CreatedD"& _ 
            "ate], [ModifiedBy], [ModifiedDate], [RecordStatus]) VALUES (@BookingRemarkId, @B"& _ 
            "ookingRemarkName, @ListOrder, @CreatedBy, @CreatedDate, @ModifiedBy, @ModifiedDa"& _ 
            "te, @RecordStatus) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALI"& _ 
            "D_VERSION(object_id(N'dbo.BookingRemark')) > @sync_last_received_anchor RAISERRO"& _ 
            "R (N'SQL Server Change Tracking has cleaned up tracking information for table ''"& _ 
            "%s''. To recover from this error, the client must reinitialize its local databas"& _ 
            "e and try again',16,3,N'dbo.BookingRemark') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingRemarkId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingRemarkName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'BookingRemarkSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.BookingRemark F"& _ 
            "ROM dbo.BookingRemark JOIN CHANGETABLE(VERSION dbo.BookingRemark, ([BookingRemar"& _ 
            "kId]), (@BookingRemarkId)) CT  ON CT.[BookingRemarkId] = dbo.BookingRemark.[Book"& _ 
            "ingRemarkId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT"& _ 
            ".SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS N"& _ 
            "OT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count"& _ 
            " = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.BookingRemar"& _ 
            "k')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cl"& _ 
            "eaned up tracking information for table ''%s''. To recover from this error, the "& _ 
            "client must reinitialize its local database and try again',16,3,N'dbo.BookingRem"& _ 
            "ark') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingRemarkId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'BookingRemarkSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.BookingRemark S"& _ 
            "ET [BookingRemarkName] = @BookingRemarkName, [ListOrder] = @ListOrder, [CreatedB"& _ 
            "y] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [Modi"& _ 
            "fiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus FROM dbo.BookingRemark"& _ 
            "  JOIN CHANGETABLE(VERSION dbo.BookingRemark, ([BookingRemarkId]), (@BookingRema"& _ 
            "rkId)) CT  ON CT.[BookingRemarkId] = dbo.BookingRemark.[BookingRemarkId] WHERE ("& _ 
            "@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION "& _ 
            "<= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_C"& _ 
            "HANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CH"& _ 
            "ANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.BookingRemark')) > @sync_last_re"& _ 
            "ceived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking in"& _ 
            "formation for table ''%s''. To recover from this error, the client must reinitia"& _ 
            "lize its local database and try again',16,3,N'dbo.BookingRemark') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingRemarkName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingRemarkId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'BookingRemarkSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[BookingRemarkId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CH"& _ 
            "ANGETABLE(CHANGES dbo.BookingRemark, @sync_last_received_anchor) CT WHERE (CT.[B"& _ 
            "ookingRemarkId] = @BookingRemarkId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingRemarkId", System.Data.SqlDbType.UniqueIdentifier))
        'BookingRemarkSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.BookingRemark.[BookingRemarkId], [BookingRemarkName], [ListOrder], [Cr"& _ 
            "eatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CH"& _ 
            "ANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.BookingRemark JOIN CHANGETABLE(VERS"& _ 
            "ION dbo.BookingRemark, ([BookingRemarkId]), (@BookingRemarkId)) CT  ON CT.[Booki"& _ 
            "ngRemarkId] = dbo.BookingRemark.[BookingRemarkId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingRemarkId", System.Data.SqlDbType.UniqueIdentifier))
        'BookingRemarkSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.BookingRemark.[BookingRemarkId], [BookingRema"& _ 
            "rkName], [ListOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], "& _ 
            "[RecordStatus] FROM dbo.BookingRemark LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.Bo"& _ 
            "okingRemark, @sync_last_received_anchor) CT ON CT.[BookingRemarkId] = dbo.Bookin"& _ 
            "gRemark.[BookingRemarkId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_"& _ 
            "CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.BookingRemark.[Booking"& _ 
            "RemarkId], [BookingRemarkName], [ListOrder], [CreatedBy], [CreatedDate], [Modifi"& _ 
            "edBy], [ModifiedDate], [RecordStatus] FROM dbo.BookingRemark JOIN CHANGETABLE(CH"& _ 
            "ANGES dbo.BookingRemark, @sync_last_received_anchor) CT ON CT.[BookingRemarkId] "& _ 
            "= dbo.BookingRemark.[BookingRemarkId] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND C"& _ 
            "T.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anchor AND (CT.SYS_CHANGE_C"& _ 
            "ONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_T"& _ 
            "RACKING_MIN_VALID_VERSION(object_id(N'dbo.BookingRemark')) > @sync_last_received"& _ 
            "_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking informat"& _ 
            "ion for table ''%s''. To recover from this error, the client must reinitialize i"& _ 
            "ts local database and try again',16,3,N'dbo.BookingRemark')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'BookingRemarkSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[BookingRemarkId] FROM CHANGETABLE(CHAN"& _ 
            "GES dbo.BookingRemark, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERA"& _ 
            "TION = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CH"& _ 
            "ANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CH"& _ 
            "ANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.BookingRemark')) > @sync_last_re"& _ 
            "ceived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking in"& _ 
            "formation for table ''%s''. To recover from this error, the client must reinitia"& _ 
            "lize its local database and try again',16,3,N'dbo.BookingRemark')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'BookingRemarkSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.BookingRemark.[BookingRemarkId], [Book"& _ 
            "ingRemarkName], [ListOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [Modified"& _ 
            "Date], [RecordStatus] FROM dbo.BookingRemark JOIN CHANGETABLE(CHANGES dbo.Bookin"& _ 
            "gRemark, @sync_last_received_anchor) CT ON CT.[BookingRemarkId] = dbo.BookingRem"& _ 
            "ark.[BookingRemarkId] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VER"& _ 
            "SION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_C"& _ 
            "HANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION("& _ 
            "object_id(N'dbo.BookingRemark')) > @sync_last_received_anchor RAISERROR (N'SQL S"& _ 
            "erver Change Tracking has cleaned up tracking information for table ''%s''. To r"& _ 
            "ecover from this error, the client must reinitialize its local database and try "& _ 
            "again',16,3,N'dbo.BookingRemark')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "BookingRemark"
    End Sub
End Class

Partial Public Class BookingStatusSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'BookingStatusSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.BookingSta"& _ 
            "tus ([BookingStatusId], [BookingStatusName], [ListOrder], [CreatedBy], [CreatedD"& _ 
            "ate], [ModifiedBy], [ModifiedDate], [RecordStatus]) VALUES (@BookingStatusId, @B"& _ 
            "ookingStatusName, @ListOrder, @CreatedBy, @CreatedDate, @ModifiedBy, @ModifiedDa"& _ 
            "te, @RecordStatus) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALI"& _ 
            "D_VERSION(object_id(N'dbo.BookingStatus')) > @sync_last_received_anchor RAISERRO"& _ 
            "R (N'SQL Server Change Tracking has cleaned up tracking information for table ''"& _ 
            "%s''. To recover from this error, the client must reinitialize its local databas"& _ 
            "e and try again',16,3,N'dbo.BookingStatus') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingStatusId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingStatusName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'BookingStatusSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.BookingStatus F"& _ 
            "ROM dbo.BookingStatus JOIN CHANGETABLE(VERSION dbo.BookingStatus, ([BookingStatu"& _ 
            "sId]), (@BookingStatusId)) CT  ON CT.[BookingStatusId] = dbo.BookingStatus.[Book"& _ 
            "ingStatusId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT"& _ 
            ".SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS N"& _ 
            "OT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count"& _ 
            " = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.BookingStatu"& _ 
            "s')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cl"& _ 
            "eaned up tracking information for table ''%s''. To recover from this error, the "& _ 
            "client must reinitialize its local database and try again',16,3,N'dbo.BookingSta"& _ 
            "tus') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingStatusId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'BookingStatusSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.BookingStatus S"& _ 
            "ET [BookingStatusName] = @BookingStatusName, [ListOrder] = @ListOrder, [CreatedB"& _ 
            "y] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [Modi"& _ 
            "fiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus FROM dbo.BookingStatus"& _ 
            "  JOIN CHANGETABLE(VERSION dbo.BookingStatus, ([BookingStatusId]), (@BookingStat"& _ 
            "usId)) CT  ON CT.[BookingStatusId] = dbo.BookingStatus.[BookingStatusId] WHERE ("& _ 
            "@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION "& _ 
            "<= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_C"& _ 
            "HANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CH"& _ 
            "ANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.BookingStatus')) > @sync_last_re"& _ 
            "ceived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking in"& _ 
            "formation for table ''%s''. To recover from this error, the client must reinitia"& _ 
            "lize its local database and try again',16,3,N'dbo.BookingStatus') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingStatusName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingStatusId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'BookingStatusSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[BookingStatusId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CH"& _ 
            "ANGETABLE(CHANGES dbo.BookingStatus, @sync_last_received_anchor) CT WHERE (CT.[B"& _ 
            "ookingStatusId] = @BookingStatusId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingStatusId", System.Data.SqlDbType.UniqueIdentifier))
        'BookingStatusSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.BookingStatus.[BookingStatusId], [BookingStatusName], [ListOrder], [Cr"& _ 
            "eatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CH"& _ 
            "ANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.BookingStatus JOIN CHANGETABLE(VERS"& _ 
            "ION dbo.BookingStatus, ([BookingStatusId]), (@BookingStatusId)) CT  ON CT.[Booki"& _ 
            "ngStatusId] = dbo.BookingStatus.[BookingStatusId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingStatusId", System.Data.SqlDbType.UniqueIdentifier))
        'BookingStatusSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.BookingStatus.[BookingStatusId], [BookingStat"& _ 
            "usName], [ListOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], "& _ 
            "[RecordStatus] FROM dbo.BookingStatus LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.Bo"& _ 
            "okingStatus, @sync_last_received_anchor) CT ON CT.[BookingStatusId] = dbo.Bookin"& _ 
            "gStatus.[BookingStatusId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_"& _ 
            "CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.BookingStatus.[Booking"& _ 
            "StatusId], [BookingStatusName], [ListOrder], [CreatedBy], [CreatedDate], [Modifi"& _ 
            "edBy], [ModifiedDate], [RecordStatus] FROM dbo.BookingStatus JOIN CHANGETABLE(CH"& _ 
            "ANGES dbo.BookingStatus, @sync_last_received_anchor) CT ON CT.[BookingStatusId] "& _ 
            "= dbo.BookingStatus.[BookingStatusId] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND C"& _ 
            "T.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anchor AND (CT.SYS_CHANGE_C"& _ 
            "ONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_T"& _ 
            "RACKING_MIN_VALID_VERSION(object_id(N'dbo.BookingStatus')) > @sync_last_received"& _ 
            "_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking informat"& _ 
            "ion for table ''%s''. To recover from this error, the client must reinitialize i"& _ 
            "ts local database and try again',16,3,N'dbo.BookingStatus')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'BookingStatusSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[BookingStatusId] FROM CHANGETABLE(CHAN"& _ 
            "GES dbo.BookingStatus, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERA"& _ 
            "TION = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CH"& _ 
            "ANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CH"& _ 
            "ANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.BookingStatus')) > @sync_last_re"& _ 
            "ceived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking in"& _ 
            "formation for table ''%s''. To recover from this error, the client must reinitia"& _ 
            "lize its local database and try again',16,3,N'dbo.BookingStatus')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'BookingStatusSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.BookingStatus.[BookingStatusId], [Book"& _ 
            "ingStatusName], [ListOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [Modified"& _ 
            "Date], [RecordStatus] FROM dbo.BookingStatus JOIN CHANGETABLE(CHANGES dbo.Bookin"& _ 
            "gStatus, @sync_last_received_anchor) CT ON CT.[BookingStatusId] = dbo.BookingSta"& _ 
            "tus.[BookingStatusId] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VER"& _ 
            "SION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_C"& _ 
            "HANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION("& _ 
            "object_id(N'dbo.BookingStatus')) > @sync_last_received_anchor RAISERROR (N'SQL S"& _ 
            "erver Change Tracking has cleaned up tracking information for table ''%s''. To r"& _ 
            "ecover from this error, the client must reinitialize its local database and try "& _ 
            "again',16,3,N'dbo.BookingStatus')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "BookingStatus"
    End Sub
End Class

Partial Public Class BranchCorpOfficeSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'BranchCorpOfficeSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.BranchCorp"& _ 
            "Office ([BranchCorpOfficeId], [BranchCorpOfficeCode], [BranchCorpOfficeName], [P"& _ 
            "rovinceID], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordSta"& _ 
            "tus]) VALUES (@BranchCorpOfficeId, @BranchCorpOfficeCode, @BranchCorpOfficeName,"& _ 
            " @ProvinceID, @CreatedBy, @CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatu"& _ 
            "s) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object"& _ 
            "_id(N'dbo.BranchCorpOffice')) > @sync_last_received_anchor RAISERROR (N'SQL Serv"& _ 
            "er Change Tracking has cleaned up tracking information for table ''%s''. To reco"& _ 
            "ver from this error, the client must reinitialize its local database and try aga"& _ 
            "in',16,3,N'dbo.BranchCorpOffice') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BranchCorpOfficeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BranchCorpOfficeCode", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BranchCorpOfficeName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ProvinceID", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'BranchCorpOfficeSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.BranchCorpOffic"& _ 
            "e FROM dbo.BranchCorpOffice JOIN CHANGETABLE(VERSION dbo.BranchCorpOffice, ([Bra"& _ 
            "nchCorpOfficeId]), (@BranchCorpOfficeId)) CT  ON CT.[BranchCorpOfficeId] = dbo.B"& _ 
            "ranchCorpOffice.[BranchCorpOfficeId] WHERE (@sync_force_write = 1 OR CT.SYS_CHAN"& _ 
            "GE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT"& _ 
            ".SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_bina"& _ 
            "ry)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(obje"& _ 
            "ct_id(N'dbo.BranchCorpOffice')) > @sync_last_received_anchor RAISERROR (N'SQL Se"& _ 
            "rver Change Tracking has cleaned up tracking information for table ''%s''. To re"& _ 
            "cover from this error, the client must reinitialize its local database and try a"& _ 
            "gain',16,3,N'dbo.BranchCorpOffice') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BranchCorpOfficeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'BranchCorpOfficeSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.BranchCorpOffic"& _ 
            "e SET [BranchCorpOfficeCode] = @BranchCorpOfficeCode, [BranchCorpOfficeName] = @"& _ 
            "BranchCorpOfficeName, [ProvinceID] = @ProvinceID, [CreatedBy] = @CreatedBy, [Cre"& _ 
            "atedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @Modified"& _ 
            "Date, [RecordStatus] = @RecordStatus FROM dbo.BranchCorpOffice  JOIN CHANGETABLE"& _ 
            "(VERSION dbo.BranchCorpOffice, ([BranchCorpOfficeId]), (@BranchCorpOfficeId)) CT"& _ 
            "  ON CT.[BranchCorpOfficeId] = dbo.BranchCorpOffice.[BranchCorpOfficeId] WHERE ("& _ 
            "@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION "& _ 
            "<= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_C"& _ 
            "HANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CH"& _ 
            "ANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.BranchCorpOffice')) > @sync_last"& _ 
            "_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking"& _ 
            " information for table ''%s''. To recover from this error, the client must reini"& _ 
            "tialize its local database and try again',16,3,N'dbo.BranchCorpOffice') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BranchCorpOfficeCode", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BranchCorpOfficeName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ProvinceID", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BranchCorpOfficeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'BranchCorpOfficeSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[BranchCorpOfficeId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM"& _ 
            " CHANGETABLE(CHANGES dbo.BranchCorpOffice, @sync_last_received_anchor) CT WHERE "& _ 
            "(CT.[BranchCorpOfficeId] = @BranchCorpOfficeId AND CT.SYS_CHANGE_OPERATION = 'D'"& _ 
            ")"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BranchCorpOfficeId", System.Data.SqlDbType.UniqueIdentifier))
        'BranchCorpOfficeSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.BranchCorpOffice.[BranchCorpOfficeId], [BranchCorpOfficeCode], [Branch"& _ 
            "CorpOfficeName], [ProvinceID], [CreatedBy], [CreatedDate], [ModifiedBy], [Modifi"& _ 
            "edDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.B"& _ 
            "ranchCorpOffice JOIN CHANGETABLE(VERSION dbo.BranchCorpOffice, ([BranchCorpOffic"& _ 
            "eId]), (@BranchCorpOfficeId)) CT  ON CT.[BranchCorpOfficeId] = dbo.BranchCorpOff"& _ 
            "ice.[BranchCorpOfficeId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BranchCorpOfficeId", System.Data.SqlDbType.UniqueIdentifier))
        'BranchCorpOfficeSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.BranchCorpOffice.[BranchCorpOfficeId], [Branc"& _ 
            "hCorpOfficeCode], [BranchCorpOfficeName], [ProvinceID], [CreatedBy], [CreatedDat"& _ 
            "e], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.BranchCorpOffice LEFT "& _ 
            "OUTER JOIN CHANGETABLE(CHANGES dbo.BranchCorpOffice, @sync_last_received_anchor)"& _ 
            " CT ON CT.[BranchCorpOfficeId] = dbo.BranchCorpOffice.[BranchCorpOfficeId] WHERE"& _ 
            " (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_bina"& _ 
            "ry) ELSE  BEGIN SELECT dbo.BranchCorpOffice.[BranchCorpOfficeId], [BranchCorpOff"& _ 
            "iceCode], [BranchCorpOfficeName], [ProvinceID], [CreatedBy], [CreatedDate], [Mod"& _ 
            "ifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.BranchCorpOffice JOIN CHANGETA"& _ 
            "BLE(CHANGES dbo.BranchCorpOffice, @sync_last_received_anchor) CT ON CT.[BranchCo"& _ 
            "rpOfficeId] = dbo.BranchCorpOffice.[BranchCorpOfficeId] WHERE (CT.SYS_CHANGE_OPE"& _ 
            "RATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anchor AN"& _ 
            "D (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_bin"& _ 
            "ary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.BranchCorpOffice')) "& _ 
            "> @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned"& _ 
            " up tracking information for table ''%s''. To recover from this error, the clien"& _ 
            "t must reinitialize its local database and try again',16,3,N'dbo.BranchCorpOffic"& _ 
            "e')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'BranchCorpOfficeSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[BranchCorpOfficeId] FROM CHANGETABLE(C"& _ 
            "HANGES dbo.BranchCorpOffice, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE"& _ 
            "_OPERATION = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT."& _ 
            "SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary));"& _ 
            " IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.BranchCorpOffice')) > @syn"& _ 
            "c_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tr"& _ 
            "acking information for table ''%s''. To recover from this error, the client must"& _ 
            " reinitialize its local database and try again',16,3,N'dbo.BranchCorpOffice')  E"& _ 
            "ND "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'BranchCorpOfficeSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.BranchCorpOffice.[BranchCorpOfficeId],"& _ 
            " [BranchCorpOfficeCode], [BranchCorpOfficeName], [ProvinceID], [CreatedBy], [Cre"& _ 
            "atedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.BranchCorpOffic"& _ 
            "e JOIN CHANGETABLE(CHANGES dbo.BranchCorpOffice, @sync_last_received_anchor) CT "& _ 
            "ON CT.[BranchCorpOfficeId] = dbo.BranchCorpOffice.[BranchCorpOfficeId] WHERE (CT"& _ 
            ".SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anch"& _ 
            "or AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_i"& _ 
            "d_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.BranchCorpOffic"& _ 
            "e')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cl"& _ 
            "eaned up tracking information for table ''%s''. To recover from this error, the "& _ 
            "client must reinitialize its local database and try again',16,3,N'dbo.BranchCorp"& _ 
            "Office')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "BranchCorpOffice"
    End Sub
End Class

Partial Public Class BusinessTypeSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'BusinessTypeSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.BusinessTy"& _ 
            "pe ([BusinessTypeId], [BusinessTypeName], [ListOrder], [CreatedBy], [CreatedDate"& _ 
            "], [ModifiedBy], [ModifiedDate], [RecordStatus]) VALUES (@BusinessTypeId, @Busin"& _ 
            "essTypeName, @ListOrder, @CreatedBy, @CreatedDate, @ModifiedBy, @ModifiedDate, @"& _ 
            "RecordStatus) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VER"& _ 
            "SION(object_id(N'dbo.BusinessType')) > @sync_last_received_anchor RAISERROR (N'S"& _ 
            "QL Server Change Tracking has cleaned up tracking information for table ''%s''. "& _ 
            "To recover from this error, the client must reinitialize its local database and "& _ 
            "try again',16,3,N'dbo.BusinessType') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BusinessTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BusinessTypeName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'BusinessTypeSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.BusinessType FR"& _ 
            "OM dbo.BusinessType JOIN CHANGETABLE(VERSION dbo.BusinessType, ([BusinessTypeId]"& _ 
            "), (@BusinessTypeId)) CT  ON CT.[BusinessTypeId] = dbo.BusinessType.[BusinessTyp"& _ 
            "eId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHA"& _ 
            "NGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL "& _ 
            "AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@row"& _ 
            "count; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.BusinessType')) > @s"& _ 
            "ync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up "& _ 
            "tracking information for table ''%s''. To recover from this error, the client mu"& _ 
            "st reinitialize its local database and try again',16,3,N'dbo.BusinessType') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BusinessTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'BusinessTypeSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.BusinessType SE"& _ 
            "T [BusinessTypeName] = @BusinessTypeName, [ListOrder] = @ListOrder, [CreatedBy] "& _ 
            "= @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [Modifie"& _ 
            "dDate] = @ModifiedDate, [RecordStatus] = @RecordStatus FROM dbo.BusinessType  JO"& _ 
            "IN CHANGETABLE(VERSION dbo.BusinessType, ([BusinessTypeId]), (@BusinessTypeId)) "& _ 
            "CT  ON CT.[BusinessTypeId] = dbo.BusinessType.[BusinessTypeId] WHERE (@sync_forc"& _ 
            "e_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_l"& _ 
            "ast_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONT"& _ 
            "EXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACK"& _ 
            "ING_MIN_VALID_VERSION(object_id(N'dbo.BusinessType')) > @sync_last_received_anch"& _ 
            "or RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information f"& _ 
            "or table ''%s''. To recover from this error, the client must reinitialize its lo"& _ 
            "cal database and try again',16,3,N'dbo.BusinessType') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BusinessTypeName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BusinessTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'BusinessTypeSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[BusinessTypeId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHA"& _ 
            "NGETABLE(CHANGES dbo.BusinessType, @sync_last_received_anchor) CT WHERE (CT.[Bus"& _ 
            "inessTypeId] = @BusinessTypeId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BusinessTypeId", System.Data.SqlDbType.UniqueIdentifier))
        'BusinessTypeSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.BusinessType.[BusinessTypeId], [BusinessTypeName], [ListOrder], [Creat"& _ 
            "edBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANG"& _ 
            "E_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.BusinessType JOIN CHANGETABLE(VERSION "& _ 
            "dbo.BusinessType, ([BusinessTypeId]), (@BusinessTypeId)) CT  ON CT.[BusinessType"& _ 
            "Id] = dbo.BusinessType.[BusinessTypeId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BusinessTypeId", System.Data.SqlDbType.UniqueIdentifier))
        'BusinessTypeSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.BusinessType.[BusinessTypeId], [BusinessTypeN"& _ 
            "ame], [ListOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [Re"& _ 
            "cordStatus] FROM dbo.BusinessType LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.Busine"& _ 
            "ssType, @sync_last_received_anchor) CT ON CT.[BusinessTypeId] = dbo.BusinessType"& _ 
            ".[BusinessTypeId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT "& _ 
            "<> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.BusinessType.[BusinessTypeId],"& _ 
            " [BusinessTypeName], [ListOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [Mod"& _ 
            "ifiedDate], [RecordStatus] FROM dbo.BusinessType JOIN CHANGETABLE(CHANGES dbo.Bu"& _ 
            "sinessType, @sync_last_received_anchor) CT ON CT.[BusinessTypeId] = dbo.Business"& _ 
            "Type.[BusinessTypeId] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CRE"& _ 
            "ATION_VERSION  <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL O"& _ 
            "R CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALI"& _ 
            "D_VERSION(object_id(N'dbo.BusinessType')) > @sync_last_received_anchor RAISERROR"& _ 
            " (N'SQL Server Change Tracking has cleaned up tracking information for table ''%"& _ 
            "s''. To recover from this error, the client must reinitialize its local database"& _ 
            " and try again',16,3,N'dbo.BusinessType')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'BusinessTypeSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[BusinessTypeId] FROM CHANGETABLE(CHANG"& _ 
            "ES dbo.BusinessType, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATI"& _ 
            "ON = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHAN"& _ 
            "GE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHAN"& _ 
            "GE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.BusinessType')) > @sync_last_recei"& _ 
            "ved_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking infor"& _ 
            "mation for table ''%s''. To recover from this error, the client must reinitializ"& _ 
            "e its local database and try again',16,3,N'dbo.BusinessType')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'BusinessTypeSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.BusinessType.[BusinessTypeId], [Busine"& _ 
            "ssTypeName], [ListOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDat"& _ 
            "e], [RecordStatus] FROM dbo.BusinessType JOIN CHANGETABLE(CHANGES dbo.BusinessTy"& _ 
            "pe, @sync_last_received_anchor) CT ON CT.[BusinessTypeId] = dbo.BusinessType.[Bu"& _ 
            "sinessTypeId] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= "& _ 
            "@sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CO"& _ 
            "NTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_i"& _ 
            "d(N'dbo.BusinessType')) > @sync_last_received_anchor RAISERROR (N'SQL Server Cha"& _ 
            "nge Tracking has cleaned up tracking information for table ''%s''. To recover fr"& _ 
            "om this error, the client must reinitialize its local database and try again',16"& _ 
            ",3,N'dbo.BusinessType')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "BusinessType"
    End Sub
End Class

Partial Public Class CitySyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'CitySyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.City ([Cit"& _ 
            "yId], [BranchCorpOfficeId], [CityCode], [CityName], [StreetAddress], [ContactNo1"& _ 
            "], [ContactNo2], [Fax], [ZipCode], [CreatedBy], [CreatedDate], [ModifiedBy], [Mo"& _ 
            "difiedDate], [RecordStatus]) VALUES (@CityId, @BranchCorpOfficeId, @CityCode, @C"& _ 
            "ityName, @StreetAddress, @ContactNo1, @ContactNo2, @Fax, @ZipCode, @CreatedBy, @"& _ 
            "CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_row_count = @@"& _ 
            "rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.City')) > @sync_l"& _ 
            "ast_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up track"& _ 
            "ing information for table ''%s''. To recover from this error, the client must re"& _ 
            "initialize its local database and try again',16,3,N'dbo.City') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BranchCorpOfficeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CityCode", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CityName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StreetAddress", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactNo1", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactNo2", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Fax", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ZipCode", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'CitySyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.City FROM dbo.C"& _ 
            "ity JOIN CHANGETABLE(VERSION dbo.City, ([CityId]), (@CityId)) CT  ON CT.[CityId]"& _ 
            " = dbo.City.[CityId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NU"& _ 
            "LL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONT"& _ 
            "EXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_r"& _ 
            "ow_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.City"& _ 
            "')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cle"& _ 
            "aned up tracking information for table ''%s''. To recover from this error, the c"& _ 
            "lient must reinitialize its local database and try again',16,3,N'dbo.City') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'CitySyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.City SET [Branc"& _ 
            "hCorpOfficeId] = @BranchCorpOfficeId, [CityCode] = @CityCode, [CityName] = @City"& _ 
            "Name, [StreetAddress] = @StreetAddress, [ContactNo1] = @ContactNo1, [ContactNo2]"& _ 
            " = @ContactNo2, [Fax] = @Fax, [ZipCode] = @ZipCode, [CreatedBy] = @CreatedBy, [C"& _ 
            "reatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @Modifi"& _ 
            "edDate, [RecordStatus] = @RecordStatus FROM dbo.City  JOIN CHANGETABLE(VERSION d"& _ 
            "bo.City, ([CityId]), (@CityId)) CT  ON CT.[CityId] = dbo.City.[CityId] WHERE (@s"& _ 
            "ync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <="& _ 
            " @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHA"& _ 
            "NGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHAN"& _ 
            "GE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.City')) > @sync_last_received_anch"& _ 
            "or RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information f"& _ 
            "or table ''%s''. To recover from this error, the client must reinitialize its lo"& _ 
            "cal database and try again',16,3,N'dbo.City') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BranchCorpOfficeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CityCode", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CityName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StreetAddress", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactNo1", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactNo2", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Fax", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ZipCode", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'CitySyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[CityId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETABLE"& _ 
            "(CHANGES dbo.City, @sync_last_received_anchor) CT WHERE (CT.[CityId] = @CityId A"& _ 
            "ND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CityId", System.Data.SqlDbType.UniqueIdentifier))
        'CitySyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.City.[CityId], [BranchCorpOfficeId], [CityCode], [CityName], [StreetAd"& _ 
            "dress], [ContactNo1], [ContactNo2], [Fax], [ZipCode], [CreatedBy], [CreatedDate]"& _ 
            ", [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CH"& _ 
            "ANGE_VERSION FROM dbo.City JOIN CHANGETABLE(VERSION dbo.City, ([CityId]), (@City"& _ 
            "Id)) CT  ON CT.[CityId] = dbo.City.[CityId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CityId", System.Data.SqlDbType.UniqueIdentifier))
        'CitySyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.City.[CityId], [BranchCorpOfficeId], [CityCod"& _ 
            "e], [CityName], [StreetAddress], [ContactNo1], [ContactNo2], [Fax], [ZipCode], ["& _ 
            "CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo"& _ 
            ".City LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.City, @sync_last_received_anchor) "& _ 
            "CT ON CT.[CityId] = dbo.City.[CityId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT"& _ 
            ".SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.City.[City"& _ 
            "Id], [BranchCorpOfficeId], [CityCode], [CityName], [StreetAddress], [ContactNo1]"& _ 
            ", [ContactNo2], [Fax], [ZipCode], [CreatedBy], [CreatedDate], [ModifiedBy], [Mod"& _ 
            "ifiedDate], [RecordStatus] FROM dbo.City JOIN CHANGETABLE(CHANGES dbo.City, @syn"& _ 
            "c_last_received_anchor) CT ON CT.[CityId] = dbo.City.[CityId] WHERE (CT.SYS_CHAN"& _ 
            "GE_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anc"& _ 
            "hor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_"& _ 
            "id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.City')) > @syn"& _ 
            "c_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tr"& _ 
            "acking information for table ''%s''. To recover from this error, the client must"& _ 
            " reinitialize its local database and try again',16,3,N'dbo.City')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'CitySyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[CityId] FROM CHANGETABLE(CHANGES dbo.C"& _ 
            "ity, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D' AND CT."& _ 
            "SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NU"& _ 
            "LL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_"& _ 
            "VALID_VERSION(object_id(N'dbo.City')) > @sync_last_received_anchor RAISERROR (N'"& _ 
            "SQL Server Change Tracking has cleaned up tracking information for table ''%s''."& _ 
            " To recover from this error, the client must reinitialize its local database and"& _ 
            " try again',16,3,N'dbo.City')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'CitySyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.City.[CityId], [BranchCorpOfficeId], ["& _ 
            "CityCode], [CityName], [StreetAddress], [ContactNo1], [ContactNo2], [Fax], [ZipC"& _ 
            "ode], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] F"& _ 
            "ROM dbo.City JOIN CHANGETABLE(CHANGES dbo.City, @sync_last_received_anchor) CT O"& _ 
            "N CT.[CityId] = dbo.City.[CityId] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SY"& _ 
            "S_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL"& _ 
            " OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VA"& _ 
            "LID_VERSION(object_id(N'dbo.City')) > @sync_last_received_anchor RAISERROR (N'SQ"& _ 
            "L Server Change Tracking has cleaned up tracking information for table ''%s''. T"& _ 
            "o recover from this error, the client must reinitialize its local database and t"& _ 
            "ry again',16,3,N'dbo.City')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "City"
    End Sub
End Class

Partial Public Class ClusterSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'ClusterSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Cluster (["& _ 
            "ClusterId], [ClusterName], [BranchCorpOfficeId], [CreatedBy], [CreatedDate], [Mo"& _ 
            "difiedBy], [ModifiedDate], [RecordStatus]) VALUES (@ClusterId, @ClusterName, @Br"& _ 
            "anchCorpOfficeId, @CreatedBy, @CreatedDate, @ModifiedBy, @ModifiedDate, @RecordS"& _ 
            "tatus) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(ob"& _ 
            "ject_id(N'dbo.Cluster')) > @sync_last_received_anchor RAISERROR (N'SQL Server Ch"& _ 
            "ange Tracking has cleaned up tracking information for table ''%s''. To recover f"& _ 
            "rom this error, the client must reinitialize its local database and try again',1"& _ 
            "6,3,N'dbo.Cluster') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ClusterId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ClusterName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BranchCorpOfficeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'ClusterSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Cluster FROM db"& _ 
            "o.Cluster JOIN CHANGETABLE(VERSION dbo.Cluster, ([ClusterId]), (@ClusterId)) CT "& _ 
            " ON CT.[ClusterId] = dbo.Cluster.[ClusterId] WHERE (@sync_force_write = 1 OR CT."& _ 
            "SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_ancho"& _ 
            "r OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client"& _ 
            "_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERS"& _ 
            "ION(object_id(N'dbo.Cluster')) > @sync_last_received_anchor RAISERROR (N'SQL Ser"& _ 
            "ver Change Tracking has cleaned up tracking information for table ''%s''. To rec"& _ 
            "over from this error, the client must reinitialize its local database and try ag"& _ 
            "ain',16,3,N'dbo.Cluster') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ClusterId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'ClusterSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Cluster SET [Cl"& _ 
            "usterName] = @ClusterName, [BranchCorpOfficeId] = @BranchCorpOfficeId, [CreatedB"& _ 
            "y] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [Modi"& _ 
            "fiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus FROM dbo.Cluster  JOIN"& _ 
            " CHANGETABLE(VERSION dbo.Cluster, ([ClusterId]), (@ClusterId)) CT  ON CT.[Cluste"& _ 
            "rId] = dbo.Cluster.[ClusterId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VER"& _ 
            "SION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_C"& _ 
            "HANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) S"& _ 
            "ET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id("& _ 
            "N'dbo.Cluster')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tra"& _ 
            "cking has cleaned up tracking information for table ''%s''. To recover from this"& _ 
            " error, the client must reinitialize its local database and try again',16,3,N'db"& _ 
            "o.Cluster') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ClusterName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BranchCorpOfficeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ClusterId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'ClusterSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[ClusterId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETA"& _ 
            "BLE(CHANGES dbo.Cluster, @sync_last_received_anchor) CT WHERE (CT.[ClusterId] = "& _ 
            "@ClusterId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ClusterId", System.Data.SqlDbType.UniqueIdentifier))
        'ClusterSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.Cluster.[ClusterId], [ClusterName], [BranchCorpOfficeId], [CreatedBy],"& _ 
            " [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONT"& _ 
            "EXT, CT.SYS_CHANGE_VERSION FROM dbo.Cluster JOIN CHANGETABLE(VERSION dbo.Cluster"& _ 
            ", ([ClusterId]), (@ClusterId)) CT  ON CT.[ClusterId] = dbo.Cluster.[ClusterId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ClusterId", System.Data.SqlDbType.UniqueIdentifier))
        'ClusterSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.Cluster.[ClusterId], [ClusterName], [BranchCo"& _ 
            "rpOfficeId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordSt"& _ 
            "atus] FROM dbo.Cluster LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.Cluster, @sync_la"& _ 
            "st_received_anchor) CT ON CT.[ClusterId] = dbo.Cluster.[ClusterId] WHERE (CT.SYS"& _ 
            "_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE"& _ 
            "  BEGIN SELECT dbo.Cluster.[ClusterId], [ClusterName], [BranchCorpOfficeId], [Cr"& _ 
            "eatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.C"& _ 
            "luster JOIN CHANGETABLE(CHANGES dbo.Cluster, @sync_last_received_anchor) CT ON C"& _ 
            "T.[ClusterId] = dbo.Cluster.[ClusterId] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND"& _ 
            " CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anchor AND (CT.SYS_CHANGE"& _ 
            "_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE"& _ 
            "_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Cluster')) > @sync_last_received_anc"& _ 
            "hor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information "& _ 
            "for table ''%s''. To recover from this error, the client must reinitialize its l"& _ 
            "ocal database and try again',16,3,N'dbo.Cluster')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'ClusterSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[ClusterId] FROM CHANGETABLE(CHANGES db"& _ 
            "o.Cluster, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D' A"& _ 
            "ND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT"& _ 
            " IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKIN"& _ 
            "G_MIN_VALID_VERSION(object_id(N'dbo.Cluster')) > @sync_last_received_anchor RAIS"& _ 
            "ERROR (N'SQL Server Change Tracking has cleaned up tracking information for tabl"& _ 
            "e ''%s''. To recover from this error, the client must reinitialize its local dat"& _ 
            "abase and try again',16,3,N'dbo.Cluster')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'ClusterSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.Cluster.[ClusterId], [ClusterName], [B"& _ 
            "ranchCorpOfficeId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [R"& _ 
            "ecordStatus] FROM dbo.Cluster JOIN CHANGETABLE(CHANGES dbo.Cluster, @sync_last_r"& _ 
            "eceived_anchor) CT ON CT.[ClusterId] = dbo.Cluster.[ClusterId] WHERE (CT.SYS_CHA"& _ 
            "NGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND ("& _ 
            "CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary"& _ 
            ")); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Cluster')) > @sync_last"& _ 
            "_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking"& _ 
            " information for table ''%s''. To recover from this error, the client must reini"& _ 
            "tialize its local database and try again',16,3,N'dbo.Cluster')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Cluster"
    End Sub
End Class

Partial Public Class CommoditySyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'CommoditySyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Commodity "& _ 
            "([CommodityId], [CommodityName], [CommodityTypeId], [CreatedBy], [CreatedDate], "& _ 
            "[ModifiedBy], [ModifiedDate], [RecordStatus]) VALUES (@CommodityId, @CommodityNa"& _ 
            "me, @CommodityTypeId, @CreatedBy, @CreatedDate, @ModifiedBy, @ModifiedDate, @Rec"& _ 
            "ordStatus) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSIO"& _ 
            "N(object_id(N'dbo.Commodity')) > @sync_last_received_anchor RAISERROR (N'SQL Ser"& _ 
            "ver Change Tracking has cleaned up tracking information for table ''%s''. To rec"& _ 
            "over from this error, the client must reinitialize its local database and try ag"& _ 
            "ain',16,3,N'dbo.Commodity') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'CommoditySyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Commodity FROM "& _ 
            "dbo.Commodity JOIN CHANGETABLE(VERSION dbo.Commodity, ([CommodityId]), (@Commodi"& _ 
            "tyId)) CT  ON CT.[CommodityId] = dbo.Commodity.[CommodityId] WHERE (@sync_force_"& _ 
            "write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_las"& _ 
            "t_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEX"& _ 
            "T = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKIN"& _ 
            "G_MIN_VALID_VERSION(object_id(N'dbo.Commodity')) > @sync_last_received_anchor RA"& _ 
            "ISERROR (N'SQL Server Change Tracking has cleaned up tracking information for ta"& _ 
            "ble ''%s''. To recover from this error, the client must reinitialize its local d"& _ 
            "atabase and try again',16,3,N'dbo.Commodity') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'CommoditySyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Commodity SET ["& _ 
            "CommodityName] = @CommodityName, [CommodityTypeId] = @CommodityTypeId, [CreatedB"& _ 
            "y] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [Modi"& _ 
            "fiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus FROM dbo.Commodity  JO"& _ 
            "IN CHANGETABLE(VERSION dbo.Commodity, ([CommodityId]), (@CommodityId)) CT  ON CT"& _ 
            ".[CommodityId] = dbo.Commodity.[CommodityId] WHERE (@sync_force_write = 1 OR CT."& _ 
            "SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_ancho"& _ 
            "r OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client"& _ 
            "_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERS"& _ 
            "ION(object_id(N'dbo.Commodity')) > @sync_last_received_anchor RAISERROR (N'SQL S"& _ 
            "erver Change Tracking has cleaned up tracking information for table ''%s''. To r"& _ 
            "ecover from this error, the client must reinitialize its local database and try "& _ 
            "again',16,3,N'dbo.Commodity') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'CommoditySyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[CommodityId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGE"& _ 
            "TABLE(CHANGES dbo.Commodity, @sync_last_received_anchor) CT WHERE (CT.[Commodity"& _ 
            "Id] = @CommodityId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityId", System.Data.SqlDbType.UniqueIdentifier))
        'CommoditySyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.Commodity.[CommodityId], [CommodityName], [CommodityTypeId], [CreatedB"& _ 
            "y], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_C"& _ 
            "ONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.Commodity JOIN CHANGETABLE(VERSION dbo.Co"& _ 
            "mmodity, ([CommodityId]), (@CommodityId)) CT  ON CT.[CommodityId] = dbo.Commodit"& _ 
            "y.[CommodityId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityId", System.Data.SqlDbType.UniqueIdentifier))
        'CommoditySyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.Commodity.[CommodityId], [CommodityName], [Co"& _ 
            "mmodityTypeId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [Recor"& _ 
            "dStatus] FROM dbo.Commodity LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.Commodity, @"& _ 
            "sync_last_received_anchor) CT ON CT.[CommodityId] = dbo.Commodity.[CommodityId] "& _ 
            "WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id"& _ 
            "_binary) ELSE  BEGIN SELECT dbo.Commodity.[CommodityId], [CommodityName], [Commo"& _ 
            "dityTypeId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordSt"& _ 
            "atus] FROM dbo.Commodity JOIN CHANGETABLE(CHANGES dbo.Commodity, @sync_last_rece"& _ 
            "ived_anchor) CT ON CT.[CommodityId] = dbo.Commodity.[CommodityId] WHERE (CT.SYS_"& _ 
            "CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received"& _ 
            "_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_cli"& _ 
            "ent_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Commodity'"& _ 
            ")) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has clea"& _ 
            "ned up tracking information for table ''%s''. To recover from this error, the cl"& _ 
            "ient must reinitialize its local database and try again',16,3,N'dbo.Commodity') "& _ 
            " END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'CommoditySyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[CommodityId] FROM CHANGETABLE(CHANGES "& _ 
            "dbo.Commodity, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = '"& _ 
            "D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CON"& _ 
            "TEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRA"& _ 
            "CKING_MIN_VALID_VERSION(object_id(N'dbo.Commodity')) > @sync_last_received_ancho"& _ 
            "r RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information fo"& _ 
            "r table ''%s''. To recover from this error, the client must reinitialize its loc"& _ 
            "al database and try again',16,3,N'dbo.Commodity')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'CommoditySyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.Commodity.[CommodityId], [CommodityNam"& _ 
            "e], [CommodityTypeId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate],"& _ 
            " [RecordStatus] FROM dbo.Commodity JOIN CHANGETABLE(CHANGES dbo.Commodity, @sync"& _ 
            "_last_received_anchor) CT ON CT.[CommodityId] = dbo.Commodity.[CommodityId] WHER"& _ 
            "E (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received"& _ 
            "_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_cli"& _ 
            "ent_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Commodity'"& _ 
            ")) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has clea"& _ 
            "ned up tracking information for table ''%s''. To recover from this error, the cl"& _ 
            "ient must reinitialize its local database and try again',16,3,N'dbo.Commodity') "& _ 
            " END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Commodity"
    End Sub
End Class

Partial Public Class CommodityTypeSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'CommodityTypeSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.CommodityT"& _ 
            "ype ([CommodityTypeId], [CommodityTypeCode], [CommodityTypeName], [CommodityType"& _ 
            "Desc], [EvmDivisor], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], ["& _ 
            "RecordStatus]) VALUES (@CommodityTypeId, @CommodityTypeCode, @CommodityTypeName,"& _ 
            " @CommodityTypeDesc, @EvmDivisor, @CreatedBy, @CreatedDate, @ModifiedBy, @Modifi"& _ 
            "edDate, @RecordStatus) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_"& _ 
            "VALID_VERSION(object_id(N'dbo.CommodityType')) > @sync_last_received_anchor RAIS"& _ 
            "ERROR (N'SQL Server Change Tracking has cleaned up tracking information for tabl"& _ 
            "e ''%s''. To recover from this error, the client must reinitialize its local dat"& _ 
            "abase and try again',16,3,N'dbo.CommodityType') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeCode", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeDesc", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EvmDivisor", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'CommodityTypeSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.CommodityType F"& _ 
            "ROM dbo.CommodityType JOIN CHANGETABLE(VERSION dbo.CommodityType, ([CommodityTyp"& _ 
            "eId]), (@CommodityTypeId)) CT  ON CT.[CommodityTypeId] = dbo.CommodityType.[Comm"& _ 
            "odityTypeId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT"& _ 
            ".SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS N"& _ 
            "OT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count"& _ 
            " = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.CommodityTyp"& _ 
            "e')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cl"& _ 
            "eaned up tracking information for table ''%s''. To recover from this error, the "& _ 
            "client must reinitialize its local database and try again',16,3,N'dbo.CommodityT"& _ 
            "ype') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'CommodityTypeSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.CommodityType S"& _ 
            "ET [CommodityTypeCode] = @CommodityTypeCode, [CommodityTypeName] = @CommodityTyp"& _ 
            "eName, [CommodityTypeDesc] = @CommodityTypeDesc, [EvmDivisor] = @EvmDivisor, [Cr"& _ 
            "eatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy,"& _ 
            " [ModifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus FROM dbo.Commodi"& _ 
            "tyType  JOIN CHANGETABLE(VERSION dbo.CommodityType, ([CommodityTypeId]), (@Commo"& _ 
            "dityTypeId)) CT  ON CT.[CommodityTypeId] = dbo.CommodityType.[CommodityTypeId] W"& _ 
            "HERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VE"& _ 
            "RSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT"& _ 
            ".SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount;"& _ 
            " IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.CommodityType')) > @sync_l"& _ 
            "ast_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up track"& _ 
            "ing information for table ''%s''. To recover from this error, the client must re"& _ 
            "initialize its local database and try again',16,3,N'dbo.CommodityType') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeCode", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeDesc", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EvmDivisor", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'CommodityTypeSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[CommodityTypeId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CH"& _ 
            "ANGETABLE(CHANGES dbo.CommodityType, @sync_last_received_anchor) CT WHERE (CT.[C"& _ 
            "ommodityTypeId] = @CommodityTypeId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeId", System.Data.SqlDbType.UniqueIdentifier))
        'CommodityTypeSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.CommodityType.[CommodityTypeId], [CommodityTypeCode], [CommodityTypeNa"& _ 
            "me], [CommodityTypeDesc], [EvmDivisor], [CreatedBy], [CreatedDate], [ModifiedBy]"& _ 
            ", [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION F"& _ 
            "ROM dbo.CommodityType JOIN CHANGETABLE(VERSION dbo.CommodityType, ([CommodityTyp"& _ 
            "eId]), (@CommodityTypeId)) CT  ON CT.[CommodityTypeId] = dbo.CommodityType.[Comm"& _ 
            "odityTypeId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeId", System.Data.SqlDbType.UniqueIdentifier))
        'CommodityTypeSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.CommodityType.[CommodityTypeId], [CommodityTy"& _ 
            "peCode], [CommodityTypeName], [CommodityTypeDesc], [EvmDivisor], [CreatedBy], [C"& _ 
            "reatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.CommodityType"& _ 
            " LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.CommodityType, @sync_last_received_anch"& _ 
            "or) CT ON CT.[CommodityTypeId] = dbo.CommodityType.[CommodityTypeId] WHERE (CT.S"& _ 
            "YS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary) EL"& _ 
            "SE  BEGIN SELECT dbo.CommodityType.[CommodityTypeId], [CommodityTypeCode], [Comm"& _ 
            "odityTypeName], [CommodityTypeDesc], [EvmDivisor], [CreatedBy], [CreatedDate], ["& _ 
            "ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.CommodityType JOIN CHANGETA"& _ 
            "BLE(CHANGES dbo.CommodityType, @sync_last_received_anchor) CT ON CT.[CommodityTy"& _ 
            "peId] = dbo.CommodityType.[CommodityTypeId] WHERE (CT.SYS_CHANGE_OPERATION = 'I'"& _ 
            " AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anchor AND (CT.SYS_CH"& _ 
            "ANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CH"& _ 
            "ANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.CommodityType')) > @sync_last_re"& _ 
            "ceived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking in"& _ 
            "formation for table ''%s''. To recover from this error, the client must reinitia"& _ 
            "lize its local database and try again',16,3,N'dbo.CommodityType')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'CommodityTypeSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[CommodityTypeId] FROM CHANGETABLE(CHAN"& _ 
            "GES dbo.CommodityType, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERA"& _ 
            "TION = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CH"& _ 
            "ANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CH"& _ 
            "ANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.CommodityType')) > @sync_last_re"& _ 
            "ceived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking in"& _ 
            "formation for table ''%s''. To recover from this error, the client must reinitia"& _ 
            "lize its local database and try again',16,3,N'dbo.CommodityType')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'CommodityTypeSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.CommodityType.[CommodityTypeId], [Comm"& _ 
            "odityTypeCode], [CommodityTypeName], [CommodityTypeDesc], [EvmDivisor], [Created"& _ 
            "By], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.Commod"& _ 
            "ityType JOIN CHANGETABLE(CHANGES dbo.CommodityType, @sync_last_received_anchor) "& _ 
            "CT ON CT.[CommodityTypeId] = dbo.CommodityType.[CommodityTypeId] WHERE (CT.SYS_C"& _ 
            "HANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND"& _ 
            " (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_bina"& _ 
            "ry)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.CommodityType')) > @s"& _ 
            "ync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up "& _ 
            "tracking information for table ''%s''. To recover from this error, the client mu"& _ 
            "st reinitialize its local database and try again',16,3,N'dbo.CommodityType')  EN"& _ 
            "D "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "CommodityType"
    End Sub
End Class

Partial Public Class CompanySyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'CompanySyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Company (["& _ 
            "CompanyId], [AccountNo], [CompanyName], [ContactNo], [Fax], [Email], [Address1],"& _ 
            " [Address2], [CityId], [ZipCode], [Website], [President], [TinNo], [MotherCompan"& _ 
            "yId], [ContactPerson], [ContactPosition], [ContactDepartment], [ContactTelNo], ["& _ 
            "ContactMobile], [ContactEmail], [ContactFax], [BillingAddress1], [BillingAddress"& _ 
            "2], [BillingCityId], [BillingZipCode], [BillingContactPerson], [BillingContactPo"& _ 
            "sition], [BillingContactDepartment], [BillingContactTelNo], [BillingContactMobil"& _ 
            "e], [BillingContactEmail], [BillingContactFax], [AccountTypeId], [IndustryId], ["& _ 
            "BusinessTypeId], [OrganizationTypeId], [AccountStatusId], [ApprovedDate], [Appro"& _ 
            "vedById], [PaymentTermId], [PaymentModeId], [BillingPeriodId], [Discount], [HasA"& _ 
            "wbFee], [HasValuationCharge], [HasInsurance], [HasChargeInvoice], [CreditLimit],"& _ 
            " [Remarks], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordSta"& _ 
            "tus], [IsVatable], [ApplyEvm], [ApplyWeight], [HasFreightCollectCharge], [HasFue"& _ 
            "lCharge], [HasDeliveryFee], [HasPerishableFee], [HasDangerousFee], [AreaId]) VAL"& _ 
            "UES (@CompanyId, @AccountNo, @CompanyName, @ContactNo, @Fax, @Email, @Address1, "& _ 
            "@Address2, @CityId, @ZipCode, @Website, @President, @TinNo, @MotherCompanyId, @C"& _ 
            "ontactPerson, @ContactPosition, @ContactDepartment, @ContactTelNo, @ContactMobil"& _ 
            "e, @ContactEmail, @ContactFax, @BillingAddress1, @BillingAddress2, @BillingCityI"& _ 
            "d, @BillingZipCode, @BillingContactPerson, @BillingContactPosition, @BillingCont"& _ 
            "actDepartment, @BillingContactTelNo, @BillingContactMobile, @BillingContactEmail"& _ 
            ", @BillingContactFax, @AccountTypeId, @IndustryId, @BusinessTypeId, @Organizatio"& _ 
            "nTypeId, @AccountStatusId, @ApprovedDate, @ApprovedById, @PaymentTermId, @Paymen"& _ 
            "tModeId, @BillingPeriodId, @Discount, @HasAwbFee, @HasValuationCharge, @HasInsur"& _ 
            "ance, @HasChargeInvoice, @CreditLimit, @Remarks, @CreatedBy, @CreatedDate, @Modi"& _ 
            "fiedBy, @ModifiedDate, @RecordStatus, @IsVatable, @ApplyEvm, @ApplyWeight, @HasF"& _ 
            "reightCollectCharge, @HasFuelCharge, @HasDeliveryFee, @HasPerishableFee, @HasDan"& _ 
            "gerousFee, @AreaId) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VAL"& _ 
            "ID_VERSION(object_id(N'dbo.Company')) > @sync_last_received_anchor RAISERROR (N'"& _ 
            "SQL Server Change Tracking has cleaned up tracking information for table ''%s''."& _ 
            " To recover from this error, the client must reinitialize its local database and"& _ 
            " try again',16,3,N'dbo.Company') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CompanyId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AccountNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CompanyName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Fax", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Email", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Address1", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Address2", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ZipCode", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Website", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@President", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TinNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@MotherCompanyId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactPerson", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactPosition", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactDepartment", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactTelNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactMobile", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactEmail", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactFax", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingAddress1", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingAddress2", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingZipCode", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingContactPerson", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingContactPosition", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingContactDepartment", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingContactTelNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingContactMobile", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingContactEmail", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingContactFax", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AccountTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IndustryId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BusinessTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OrganizationTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AccountStatusId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApprovedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApprovedById", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTermId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingPeriodId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Discount", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasAwbFee", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasValuationCharge", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasInsurance", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasChargeInvoice", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreditLimit", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsVatable", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplyEvm", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplyWeight", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasFreightCollectCharge", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasFuelCharge", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasDeliveryFee", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasPerishableFee", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasDangerousFee", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AreaId", System.Data.SqlDbType.UniqueIdentifier))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'CompanySyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Company FROM db"& _ 
            "o.Company JOIN CHANGETABLE(VERSION dbo.Company, ([CompanyId]), (@CompanyId)) CT "& _ 
            " ON CT.[CompanyId] = dbo.Company.[CompanyId] WHERE (@sync_force_write = 1 OR CT."& _ 
            "SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_ancho"& _ 
            "r OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client"& _ 
            "_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERS"& _ 
            "ION(object_id(N'dbo.Company')) > @sync_last_received_anchor RAISERROR (N'SQL Ser"& _ 
            "ver Change Tracking has cleaned up tracking information for table ''%s''. To rec"& _ 
            "over from this error, the client must reinitialize its local database and try ag"& _ 
            "ain',16,3,N'dbo.Company') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CompanyId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'CompanySyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Company SET [Ac"& _ 
            "countNo] = @AccountNo, [CompanyName] = @CompanyName, [ContactNo] = @ContactNo, ["& _ 
            "Fax] = @Fax, [Email] = @Email, [Address1] = @Address1, [Address2] = @Address2, ["& _ 
            "CityId] = @CityId, [ZipCode] = @ZipCode, [Website] = @Website, [President] = @Pr"& _ 
            "esident, [TinNo] = @TinNo, [MotherCompanyId] = @MotherCompanyId, [ContactPerson]"& _ 
            " = @ContactPerson, [ContactPosition] = @ContactPosition, [ContactDepartment] = @"& _ 
            "ContactDepartment, [ContactTelNo] = @ContactTelNo, [ContactMobile] = @ContactMob"& _ 
            "ile, [ContactEmail] = @ContactEmail, [ContactFax] = @ContactFax, [BillingAddress"& _ 
            "1] = @BillingAddress1, [BillingAddress2] = @BillingAddress2, [BillingCityId] = @"& _ 
            "BillingCityId, [BillingZipCode] = @BillingZipCode, [BillingContactPerson] = @Bil"& _ 
            "lingContactPerson, [BillingContactPosition] = @BillingContactPosition, [BillingC"& _ 
            "ontactDepartment] = @BillingContactDepartment, [BillingContactTelNo] = @BillingC"& _ 
            "ontactTelNo, [BillingContactMobile] = @BillingContactMobile, [BillingContactEmai"& _ 
            "l] = @BillingContactEmail, [BillingContactFax] = @BillingContactFax, [AccountTyp"& _ 
            "eId] = @AccountTypeId, [IndustryId] = @IndustryId, [BusinessTypeId] = @BusinessT"& _ 
            "ypeId, [OrganizationTypeId] = @OrganizationTypeId, [AccountStatusId] = @AccountS"& _ 
            "tatusId, [ApprovedDate] = @ApprovedDate, [ApprovedById] = @ApprovedById, [Paymen"& _ 
            "tTermId] = @PaymentTermId, [PaymentModeId] = @PaymentModeId, [BillingPeriodId] ="& _ 
            " @BillingPeriodId, [Discount] = @Discount, [HasAwbFee] = @HasAwbFee, [HasValuati"& _ 
            "onCharge] = @HasValuationCharge, [HasInsurance] = @HasInsurance, [HasChargeInvoi"& _ 
            "ce] = @HasChargeInvoice, [CreditLimit] = @CreditLimit, [Remarks] = @Remarks, [Cr"& _ 
            "eatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy,"& _ 
            " [ModifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus, [IsVatable] = @"& _ 
            "IsVatable, [ApplyEvm] = @ApplyEvm, [ApplyWeight] = @ApplyWeight, [HasFreightColl"& _ 
            "ectCharge] = @HasFreightCollectCharge, [HasFuelCharge] = @HasFuelCharge, [HasDel"& _ 
            "iveryFee] = @HasDeliveryFee, [HasPerishableFee] = @HasPerishableFee, [HasDangero"& _ 
            "usFee] = @HasDangerousFee, [AreaId] = @AreaId FROM dbo.Company  JOIN CHANGETABLE"& _ 
            "(VERSION dbo.Company, ([CompanyId]), (@CompanyId)) CT  ON CT.[CompanyId] = dbo.C"& _ 
            "ompany.[CompanyId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL"& _ 
            " OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEX"& _ 
            "T IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row"& _ 
            "_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Compan"& _ 
            "y')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cl"& _ 
            "eaned up tracking information for table ''%s''. To recover from this error, the "& _ 
            "client must reinitialize its local database and try again',16,3,N'dbo.Company') "& _ 
            ""
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AccountNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CompanyName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Fax", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Email", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Address1", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Address2", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ZipCode", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Website", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@President", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TinNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@MotherCompanyId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactPerson", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactPosition", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactDepartment", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactTelNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactMobile", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactEmail", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactFax", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingAddress1", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingAddress2", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingZipCode", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingContactPerson", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingContactPosition", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingContactDepartment", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingContactTelNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingContactMobile", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingContactEmail", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingContactFax", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AccountTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IndustryId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BusinessTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OrganizationTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AccountStatusId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApprovedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApprovedById", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTermId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BillingPeriodId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Discount", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasAwbFee", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasValuationCharge", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasInsurance", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasChargeInvoice", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreditLimit", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsVatable", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplyEvm", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplyWeight", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasFreightCollectCharge", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasFuelCharge", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasDeliveryFee", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasPerishableFee", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasDangerousFee", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AreaId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CompanyId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'CompanySyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[CompanyId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETA"& _ 
            "BLE(CHANGES dbo.Company, @sync_last_received_anchor) CT WHERE (CT.[CompanyId] = "& _ 
            "@CompanyId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CompanyId", System.Data.SqlDbType.UniqueIdentifier))
        'CompanySyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.Company.[CompanyId], [AccountNo], [CompanyName], [ContactNo], [Fax], ["& _ 
            "Email], [Address1], [Address2], [CityId], [ZipCode], [Website], [President], [Ti"& _ 
            "nNo], [MotherCompanyId], [ContactPerson], [ContactPosition], [ContactDepartment]"& _ 
            ", [ContactTelNo], [ContactMobile], [ContactEmail], [ContactFax], [BillingAddress"& _ 
            "1], [BillingAddress2], [BillingCityId], [BillingZipCode], [BillingContactPerson]"& _ 
            ", [BillingContactPosition], [BillingContactDepartment], [BillingContactTelNo], ["& _ 
            "BillingContactMobile], [BillingContactEmail], [BillingContactFax], [AccountTypeI"& _ 
            "d], [IndustryId], [BusinessTypeId], [OrganizationTypeId], [AccountStatusId], [Ap"& _ 
            "provedDate], [ApprovedById], [PaymentTermId], [PaymentModeId], [BillingPeriodId]"& _ 
            ", [Discount], [HasAwbFee], [HasValuationCharge], [HasInsurance], [HasChargeInvoi"& _ 
            "ce], [CreditLimit], [Remarks], [CreatedBy], [CreatedDate], [ModifiedBy], [Modifi"& _ 
            "edDate], [RecordStatus], [IsVatable], [ApplyEvm], [ApplyWeight], [HasFreightColl"& _ 
            "ectCharge], [HasFuelCharge], [HasDeliveryFee], [HasPerishableFee], [HasDangerous"& _ 
            "Fee], [AreaId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.Company JO"& _ 
            "IN CHANGETABLE(VERSION dbo.Company, ([CompanyId]), (@CompanyId)) CT  ON CT.[Comp"& _ 
            "anyId] = dbo.Company.[CompanyId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CompanyId", System.Data.SqlDbType.UniqueIdentifier))
        'CompanySyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_Company_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'CompanySyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_Company_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'CompanySyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_Company_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Company"
    End Sub
End Class

Partial Public Class CratingSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'CratingSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Crating (["& _ 
            "CratingId], [CratingName], [Multiplier], [BaseMinimum], [BaseMaximum], [BaseFee]"& _ 
            ", [ExcessCost], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [Recor"& _ 
            "dStatus]) VALUES (@CratingId, @CratingName, @Multiplier, @BaseMinimum, @BaseMaxi"& _ 
            "mum, @BaseFee, @ExcessCost, @CreatedBy, @CreatedDate, @ModifiedBy, @ModifiedDate"& _ 
            ", @RecordStatus) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_"& _ 
            "VERSION(object_id(N'dbo.Crating')) > @sync_last_received_anchor RAISERROR (N'SQL"& _ 
            " Server Change Tracking has cleaned up tracking information for table ''%s''. To"& _ 
            " recover from this error, the client must reinitialize its local database and tr"& _ 
            "y again',16,3,N'dbo.Crating') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CratingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CratingName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Multiplier", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BaseMinimum", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BaseMaximum", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BaseFee", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ExcessCost", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'CratingSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Crating FROM db"& _ 
            "o.Crating JOIN CHANGETABLE(VERSION dbo.Crating, ([CratingId]), (@CratingId)) CT "& _ 
            " ON CT.[CratingId] = dbo.Crating.[CratingId] WHERE (@sync_force_write = 1 OR CT."& _ 
            "SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_ancho"& _ 
            "r OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client"& _ 
            "_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERS"& _ 
            "ION(object_id(N'dbo.Crating')) > @sync_last_received_anchor RAISERROR (N'SQL Ser"& _ 
            "ver Change Tracking has cleaned up tracking information for table ''%s''. To rec"& _ 
            "over from this error, the client must reinitialize its local database and try ag"& _ 
            "ain',16,3,N'dbo.Crating') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CratingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'CratingSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Crating SET [Cr"& _ 
            "atingName] = @CratingName, [Multiplier] = @Multiplier, [BaseMinimum] = @BaseMini"& _ 
            "mum, [BaseMaximum] = @BaseMaximum, [BaseFee] = @BaseFee, [ExcessCost] = @ExcessC"& _ 
            "ost, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @Mod"& _ 
            "ifiedBy, [ModifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus FROM dbo"& _ 
            ".Crating  JOIN CHANGETABLE(VERSION dbo.Crating, ([CratingId]), (@CratingId)) CT "& _ 
            " ON CT.[CratingId] = dbo.Crating.[CratingId] WHERE (@sync_force_write = 1 OR CT."& _ 
            "SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_ancho"& _ 
            "r OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client"& _ 
            "_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERS"& _ 
            "ION(object_id(N'dbo.Crating')) > @sync_last_received_anchor RAISERROR (N'SQL Ser"& _ 
            "ver Change Tracking has cleaned up tracking information for table ''%s''. To rec"& _ 
            "over from this error, the client must reinitialize its local database and try ag"& _ 
            "ain',16,3,N'dbo.Crating') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CratingName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Multiplier", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BaseMinimum", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BaseMaximum", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BaseFee", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ExcessCost", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CratingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'CratingSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[CratingId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETA"& _ 
            "BLE(CHANGES dbo.Crating, @sync_last_received_anchor) CT WHERE (CT.[CratingId] = "& _ 
            "@CratingId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CratingId", System.Data.SqlDbType.UniqueIdentifier))
        'CratingSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.Crating.[CratingId], [CratingName], [Multiplier], [BaseMinimum], [Base"& _ 
            "Maximum], [BaseFee], [ExcessCost], [CreatedBy], [CreatedDate], [ModifiedBy], [Mo"& _ 
            "difiedDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM d"& _ 
            "bo.Crating JOIN CHANGETABLE(VERSION dbo.Crating, ([CratingId]), (@CratingId)) CT"& _ 
            "  ON CT.[CratingId] = dbo.Crating.[CratingId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CratingId", System.Data.SqlDbType.UniqueIdentifier))
        'CratingSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_Crating_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'CratingSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_Crating_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'CratingSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_Crating_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Crating"
    End Sub
End Class

Partial Public Class DeliveredPackageSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'DeliveredPackageSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.DeliveredP"& _ 
            "ackage ([DeliveredPackageId], [DeliveryId], [PackageNumberId], [CreatedBy], [Cre"& _ 
            "atedDate], [ModifiedBy], [ModifiedDate], [RecordStatus]) VALUES (@DeliveredPacka"& _ 
            "geId, @DeliveryId, @PackageNumberId, @CreatedBy, @CreatedDate, @ModifiedBy, @Mod"& _ 
            "ifiedDate, @RecordStatus) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_M"& _ 
            "IN_VALID_VERSION(object_id(N'dbo.DeliveredPackage')) > @sync_last_received_ancho"& _ 
            "r RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information fo"& _ 
            "r table ''%s''. To recover from this error, the client must reinitialize its loc"& _ 
            "al database and try again',16,3,N'dbo.DeliveredPackage') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveredPackageId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackageNumberId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'DeliveredPackageSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.DeliveredPackag"& _ 
            "e FROM dbo.DeliveredPackage JOIN CHANGETABLE(VERSION dbo.DeliveredPackage, ([Del"& _ 
            "iveredPackageId]), (@DeliveredPackageId)) CT  ON CT.[DeliveredPackageId] = dbo.D"& _ 
            "eliveredPackage.[DeliveredPackageId] WHERE (@sync_force_write = 1 OR CT.SYS_CHAN"& _ 
            "GE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT"& _ 
            ".SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_bina"& _ 
            "ry)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(obje"& _ 
            "ct_id(N'dbo.DeliveredPackage')) > @sync_last_received_anchor RAISERROR (N'SQL Se"& _ 
            "rver Change Tracking has cleaned up tracking information for table ''%s''. To re"& _ 
            "cover from this error, the client must reinitialize its local database and try a"& _ 
            "gain',16,3,N'dbo.DeliveredPackage') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveredPackageId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'DeliveredPackageSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.DeliveredPackag"& _ 
            "e SET [DeliveryId] = @DeliveryId, [PackageNumberId] = @PackageNumberId, [Created"& _ 
            "By] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [Mod"& _ 
            "ifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus FROM dbo.DeliveredPac"& _ 
            "kage  JOIN CHANGETABLE(VERSION dbo.DeliveredPackage, ([DeliveredPackageId]), (@D"& _ 
            "eliveredPackageId)) CT  ON CT.[DeliveredPackageId] = dbo.DeliveredPackage.[Deliv"& _ 
            "eredPackageId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR "& _ 
            "CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS"& _ 
            " NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_cou"& _ 
            "nt = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.DeliveredP"& _ 
            "ackage')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking h"& _ 
            "as cleaned up tracking information for table ''%s''. To recover from this error,"& _ 
            " the client must reinitialize its local database and try again',16,3,N'dbo.Deliv"& _ 
            "eredPackage') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackageNumberId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveredPackageId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'DeliveredPackageSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[DeliveredPackageId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM"& _ 
            " CHANGETABLE(CHANGES dbo.DeliveredPackage, @sync_last_received_anchor) CT WHERE "& _ 
            "(CT.[DeliveredPackageId] = @DeliveredPackageId AND CT.SYS_CHANGE_OPERATION = 'D'"& _ 
            ")"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveredPackageId", System.Data.SqlDbType.UniqueIdentifier))
        'DeliveredPackageSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.DeliveredPackage.[DeliveredPackageId], [DeliveryId], [PackageNumberId]"& _ 
            ", [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.S"& _ 
            "YS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.DeliveredPackage JOIN CHANGETA"& _ 
            "BLE(VERSION dbo.DeliveredPackage, ([DeliveredPackageId]), (@DeliveredPackageId))"& _ 
            " CT  ON CT.[DeliveredPackageId] = dbo.DeliveredPackage.[DeliveredPackageId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveredPackageId", System.Data.SqlDbType.UniqueIdentifier))
        'DeliveredPackageSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_DeliveredPackage_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'DeliveredPackageSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_DeliveredPackage_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'DeliveredPackageSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_DeliveredPackage_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "DeliveredPackage"
    End Sub
End Class

Partial Public Class DeliverySyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'DeliverySyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Delivery ("& _ 
            "[DeliveryId], [DateDelivered], [DeliveredById], [DeliveryStatusId], [CreatedBy],"& _ 
            " [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], [DeliveryRemarkId]"& _ 
            ", [ShipmentId], [Note]) VALUES (@DeliveryId, @DateDelivered, @DeliveredById, @De"& _ 
            "liveryStatusId, @CreatedBy, @CreatedDate, @ModifiedBy, @ModifiedDate, @RecordSta"& _ 
            "tus, @DeliveryRemarkId, @ShipmentId, @Note) SET @sync_row_count = @@rowcount; IF"& _ 
            " CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Delivery')) > @sync_last_rece"& _ 
            "ived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking info"& _ 
            "rmation for table ''%s''. To recover from this error, the client must reinitiali"& _ 
            "ze its local database and try again',16,3,N'dbo.Delivery') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DateDelivered", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveredById", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryStatusId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryRemarkId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Note", System.Data.SqlDbType.NVarChar))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'DeliverySyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Delivery FROM d"& _ 
            "bo.Delivery JOIN CHANGETABLE(VERSION dbo.Delivery, ([DeliveryId]), (@DeliveryId)"& _ 
            ") CT  ON CT.[DeliveryId] = dbo.Delivery.[DeliveryId] WHERE (@sync_force_write = "& _ 
            "1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_receiv"& _ 
            "ed_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @syn"& _ 
            "c_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VA"& _ 
            "LID_VERSION(object_id(N'dbo.Delivery')) > @sync_last_received_anchor RAISERROR ("& _ 
            "N'SQL Server Change Tracking has cleaned up tracking information for table ''%s'"& _ 
            "'. To recover from this error, the client must reinitialize its local database a"& _ 
            "nd try again',16,3,N'dbo.Delivery') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'DeliverySyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Delivery SET [D"& _ 
            "ateDelivered] = @DateDelivered, [DeliveredById] = @DeliveredById, [DeliveryStatu"& _ 
            "sId] = @DeliveryStatusId, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate"& _ 
            ", [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, [RecordStatus] = @"& _ 
            "RecordStatus, [DeliveryRemarkId] = @DeliveryRemarkId, [ShipmentId] = @ShipmentId"& _ 
            ", [Note] = @Note FROM dbo.Delivery  JOIN CHANGETABLE(VERSION dbo.Delivery, ([Del"& _ 
            "iveryId]), (@DeliveryId)) CT  ON CT.[DeliveryId] = dbo.Delivery.[DeliveryId] WHE"& _ 
            "RE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERS"& _ 
            "ION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.S"& _ 
            "YS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; I"& _ 
            "F CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Delivery')) > @sync_last_rec"& _ 
            "eived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking inf"& _ 
            "ormation for table ''%s''. To recover from this error, the client must reinitial"& _ 
            "ize its local database and try again',16,3,N'dbo.Delivery') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DateDelivered", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveredById", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryStatusId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryRemarkId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Note", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'DeliverySyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[DeliveryId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGET"& _ 
            "ABLE(CHANGES dbo.Delivery, @sync_last_received_anchor) CT WHERE (CT.[DeliveryId]"& _ 
            " = @DeliveryId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryId", System.Data.SqlDbType.UniqueIdentifier))
        'DeliverySyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.Delivery.[DeliveryId], [DateDelivered], [DeliveredById], [DeliveryStat"& _ 
            "usId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus],"& _ 
            " [DeliveryRemarkId], [ShipmentId], [Note], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_"& _ 
            "VERSION FROM dbo.Delivery JOIN CHANGETABLE(VERSION dbo.Delivery, ([DeliveryId]),"& _ 
            " (@DeliveryId)) CT  ON CT.[DeliveryId] = dbo.Delivery.[DeliveryId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryId", System.Data.SqlDbType.UniqueIdentifier))
        'DeliverySyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.Delivery.[DeliveryId], [DateDelivered], [Deli"& _ 
            "veredById], [DeliveryStatusId], [CreatedBy], [CreatedDate], [ModifiedBy], [Modif"& _ 
            "iedDate], [RecordStatus], [DeliveryRemarkId], [ShipmentId], [Note] FROM dbo.Deli"& _ 
            "very LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.Delivery, @sync_last_received_ancho"& _ 
            "r) CT ON CT.[DeliveryId] = dbo.Delivery.[DeliveryId] WHERE (CT.SYS_CHANGE_CONTEX"& _ 
            "T IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT"& _ 
            " dbo.Delivery.[DeliveryId], [DateDelivered], [DeliveredById], [DeliveryStatusId]"& _ 
            ", [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], [Del"& _ 
            "iveryRemarkId], [ShipmentId], [Note] FROM dbo.Delivery JOIN CHANGETABLE(CHANGES "& _ 
            "dbo.Delivery, @sync_last_received_anchor) CT ON CT.[DeliveryId] = dbo.Delivery.["& _ 
            "DeliveryId] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERS"& _ 
            "ION  <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_C"& _ 
            "HANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION("& _ 
            "object_id(N'dbo.Delivery')) > @sync_last_received_anchor RAISERROR (N'SQL Server"& _ 
            " Change Tracking has cleaned up tracking information for table ''%s''. To recove"& _ 
            "r from this error, the client must reinitialize its local database and try again"& _ 
            "',16,3,N'dbo.Delivery')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'DeliverySyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[DeliveryId] FROM CHANGETABLE(CHANGES d"& _ 
            "bo.Delivery, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D'"& _ 
            " AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTE"& _ 
            "XT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACK"& _ 
            "ING_MIN_VALID_VERSION(object_id(N'dbo.Delivery')) > @sync_last_received_anchor R"& _ 
            "AISERROR (N'SQL Server Change Tracking has cleaned up tracking information for t"& _ 
            "able ''%s''. To recover from this error, the client must reinitialize its local "& _ 
            "database and try again',16,3,N'dbo.Delivery')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'DeliverySyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.Delivery.[DeliveryId], [DateDelivered]"& _ 
            ", [DeliveredById], [DeliveryStatusId], [CreatedBy], [CreatedDate], [ModifiedBy],"& _ 
            " [ModifiedDate], [RecordStatus], [DeliveryRemarkId], [ShipmentId], [Note] FROM d"& _ 
            "bo.Delivery JOIN CHANGETABLE(CHANGES dbo.Delivery, @sync_last_received_anchor) C"& _ 
            "T ON CT.[DeliveryId] = dbo.Delivery.[DeliveryId] WHERE (CT.SYS_CHANGE_OPERATION "& _ 
            "= 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_"& _ 
            "CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_"& _ 
            "TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Delivery')) > @sync_last_received_anc"& _ 
            "hor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information "& _ 
            "for table ''%s''. To recover from this error, the client must reinitialize its l"& _ 
            "ocal database and try again',16,3,N'dbo.Delivery')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Delivery"
    End Sub
End Class

Partial Public Class DeliveryReceiptSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'DeliveryReceiptSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.DeliveryRe"& _ 
            "ceipt ([DeliveryReceiptId], [ReceivedBy], [Signature], [DeliveryId], [CreatedBy]"& _ 
            ", [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus]) VALUES (@Delivery"& _ 
            "ReceiptId, @ReceivedBy, @Signature, @DeliveryId, @CreatedBy, @CreatedDate, @Modi"& _ 
            "fiedBy, @ModifiedDate, @RecordStatus) SET @sync_row_count = @@rowcount; IF CHANG"& _ 
            "E_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.DeliveryReceipt')) > @sync_last_rec"& _ 
            "eived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking inf"& _ 
            "ormation for table ''%s''. To recover from this error, the client must reinitial"& _ 
            "ize its local database and try again',16,3,N'dbo.DeliveryReceipt') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryReceiptId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ReceivedBy", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Signature", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'DeliveryReceiptSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.DeliveryReceipt"& _ 
            " FROM dbo.DeliveryReceipt JOIN CHANGETABLE(VERSION dbo.DeliveryReceipt, ([Delive"& _ 
            "ryReceiptId]), (@DeliveryReceiptId)) CT  ON CT.[DeliveryReceiptId] = dbo.Deliver"& _ 
            "yReceipt.[DeliveryReceiptId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSI"& _ 
            "ON IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHA"& _ 
            "NGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET"& _ 
            " @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'"& _ 
            "dbo.DeliveryReceipt')) > @sync_last_received_anchor RAISERROR (N'SQL Server Chan"& _ 
            "ge Tracking has cleaned up tracking information for table ''%s''. To recover fro"& _ 
            "m this error, the client must reinitialize its local database and try again',16,"& _ 
            "3,N'dbo.DeliveryReceipt') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryReceiptId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'DeliveryReceiptSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.DeliveryReceipt"& _ 
            " SET [ReceivedBy] = @ReceivedBy, [Signature] = @Signature, [DeliveryId] = @Deliv"& _ 
            "eryId, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @M"& _ 
            "odifiedBy, [ModifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus FROM d"& _ 
            "bo.DeliveryReceipt  JOIN CHANGETABLE(VERSION dbo.DeliveryReceipt, ([DeliveryRece"& _ 
            "iptId]), (@DeliveryReceiptId)) CT  ON CT.[DeliveryReceiptId] = dbo.DeliveryRecei"& _ 
            "pt.[DeliveryReceiptId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS "& _ 
            "NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CO"& _ 
            "NTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync"& _ 
            "_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.De"& _ 
            "liveryReceipt')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tra"& _ 
            "cking has cleaned up tracking information for table ''%s''. To recover from this"& _ 
            " error, the client must reinitialize its local database and try again',16,3,N'db"& _ 
            "o.DeliveryReceipt') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ReceivedBy", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Signature", System.Data.SqlDbType.VarBinary))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryReceiptId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'DeliveryReceiptSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[DeliveryReceiptId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM "& _ 
            "CHANGETABLE(CHANGES dbo.DeliveryReceipt, @sync_last_received_anchor) CT WHERE (C"& _ 
            "T.[DeliveryReceiptId] = @DeliveryReceiptId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryReceiptId", System.Data.SqlDbType.UniqueIdentifier))
        'DeliveryReceiptSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.DeliveryReceipt.[DeliveryReceiptId], [ReceivedBy], [Signature], [Deliv"& _ 
            "eryId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus]"& _ 
            ", CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.DeliveryReceipt JOIN CHA"& _ 
            "NGETABLE(VERSION dbo.DeliveryReceipt, ([DeliveryReceiptId]), (@DeliveryReceiptId"& _ 
            ")) CT  ON CT.[DeliveryReceiptId] = dbo.DeliveryReceipt.[DeliveryReceiptId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryReceiptId", System.Data.SqlDbType.UniqueIdentifier))
        'DeliveryReceiptSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.DeliveryReceipt.[DeliveryReceiptId], [Receive"& _ 
            "dBy], [Signature], [DeliveryId], [CreatedBy], [CreatedDate], [ModifiedBy], [Modi"& _ 
            "fiedDate], [RecordStatus] FROM dbo.DeliveryReceipt LEFT OUTER JOIN CHANGETABLE(C"& _ 
            "HANGES dbo.DeliveryReceipt, @sync_last_received_anchor) CT ON CT.[DeliveryReceip"& _ 
            "tId] = dbo.DeliveryReceipt.[DeliveryReceiptId] WHERE (CT.SYS_CHANGE_CONTEXT IS N"& _ 
            "ULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.D"& _ 
            "eliveryReceipt.[DeliveryReceiptId], [ReceivedBy], [Signature], [DeliveryId], [Cr"& _ 
            "eatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.D"& _ 
            "eliveryReceipt JOIN CHANGETABLE(CHANGES dbo.DeliveryReceipt, @sync_last_received"& _ 
            "_anchor) CT ON CT.[DeliveryReceiptId] = dbo.DeliveryReceipt.[DeliveryReceiptId] "& _ 
            "WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @syn"& _ 
            "c_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEX"& _ 
            "T <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'"& _ 
            "dbo.DeliveryReceipt')) > @sync_last_received_anchor RAISERROR (N'SQL Server Chan"& _ 
            "ge Tracking has cleaned up tracking information for table ''%s''. To recover fro"& _ 
            "m this error, the client must reinitialize its local database and try again',16,"& _ 
            "3,N'dbo.DeliveryReceipt')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'DeliveryReceiptSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[DeliveryReceiptId] FROM CHANGETABLE(CH"& _ 
            "ANGES dbo.DeliveryReceipt, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_O"& _ 
            "PERATION = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SY"& _ 
            "S_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); I"& _ 
            "F CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.DeliveryReceipt')) > @sync_l"& _ 
            "ast_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up track"& _ 
            "ing information for table ''%s''. To recover from this error, the client must re"& _ 
            "initialize its local database and try again',16,3,N'dbo.DeliveryReceipt')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'DeliveryReceiptSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.DeliveryReceipt.[DeliveryReceiptId], ["& _ 
            "ReceivedBy], [Signature], [DeliveryId], [CreatedBy], [CreatedDate], [ModifiedBy]"& _ 
            ", [ModifiedDate], [RecordStatus] FROM dbo.DeliveryReceipt JOIN CHANGETABLE(CHANG"& _ 
            "ES dbo.DeliveryReceipt, @sync_last_received_anchor) CT ON CT.[DeliveryReceiptId]"& _ 
            " = dbo.DeliveryReceipt.[DeliveryReceiptId] WHERE (CT.SYS_CHANGE_OPERATION = 'U' "& _ 
            "AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEX"& _ 
            "T IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKI"& _ 
            "NG_MIN_VALID_VERSION(object_id(N'dbo.DeliveryReceipt')) > @sync_last_received_an"& _ 
            "chor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information"& _ 
            " for table ''%s''. To recover from this error, the client must reinitialize its "& _ 
            "local database and try again',16,3,N'dbo.DeliveryReceipt')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "DeliveryReceipt"
    End Sub
End Class

Partial Public Class DeliveryRemarkSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'DeliveryRemarkSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.DeliveryRe"& _ 
            "mark ([DeliveryRemarkId], [DeliveryRemarkName], [ListOrder], [CreatedBy], [Creat"& _ 
            "edDate], [ModifiedBy], [ModifiedDate], [RecordStatus]) VALUES (@DeliveryRemarkId"& _ 
            ", @DeliveryRemarkName, @ListOrder, @CreatedBy, @CreatedDate, @ModifiedBy, @Modif"& _ 
            "iedDate, @RecordStatus) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN"& _ 
            "_VALID_VERSION(object_id(N'dbo.DeliveryRemark')) > @sync_last_received_anchor RA"& _ 
            "ISERROR (N'SQL Server Change Tracking has cleaned up tracking information for ta"& _ 
            "ble ''%s''. To recover from this error, the client must reinitialize its local d"& _ 
            "atabase and try again',16,3,N'dbo.DeliveryRemark') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryRemarkId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryRemarkName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'DeliveryRemarkSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.DeliveryRemark "& _ 
            "FROM dbo.DeliveryRemark JOIN CHANGETABLE(VERSION dbo.DeliveryRemark, ([DeliveryR"& _ 
            "emarkId]), (@DeliveryRemarkId)) CT  ON CT.[DeliveryRemarkId] = dbo.DeliveryRemar"& _ 
            "k.[DeliveryRemarkId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NU"& _ 
            "LL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONT"& _ 
            "EXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_r"& _ 
            "ow_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Deli"& _ 
            "veryRemark')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracki"& _ 
            "ng has cleaned up tracking information for table ''%s''. To recover from this er"& _ 
            "ror, the client must reinitialize its local database and try again',16,3,N'dbo.D"& _ 
            "eliveryRemark') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryRemarkId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'DeliveryRemarkSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.DeliveryRemark "& _ 
            "SET [DeliveryRemarkName] = @DeliveryRemarkName, [ListOrder] = @ListOrder, [Creat"& _ 
            "edBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [M"& _ 
            "odifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus FROM dbo.DeliveryRe"& _ 
            "mark  JOIN CHANGETABLE(VERSION dbo.DeliveryRemark, ([DeliveryRemarkId]), (@Deliv"& _ 
            "eryRemarkId)) CT  ON CT.[DeliveryRemarkId] = dbo.DeliveryRemark.[DeliveryRemarkI"& _ 
            "d] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANG"& _ 
            "E_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AN"& _ 
            "D CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowco"& _ 
            "unt; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.DeliveryRemark')) > @s"& _ 
            "ync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up "& _ 
            "tracking information for table ''%s''. To recover from this error, the client mu"& _ 
            "st reinitialize its local database and try again',16,3,N'dbo.DeliveryRemark') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryRemarkName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryRemarkId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'DeliveryRemarkSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[DeliveryRemarkId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM C"& _ 
            "HANGETABLE(CHANGES dbo.DeliveryRemark, @sync_last_received_anchor) CT WHERE (CT."& _ 
            "[DeliveryRemarkId] = @DeliveryRemarkId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryRemarkId", System.Data.SqlDbType.UniqueIdentifier))
        'DeliveryRemarkSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.DeliveryRemark.[DeliveryRemarkId], [DeliveryRemarkName], [ListOrder], "& _ 
            "[CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS"& _ 
            "_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.DeliveryRemark JOIN CHANGETABLE("& _ 
            "VERSION dbo.DeliveryRemark, ([DeliveryRemarkId]), (@DeliveryRemarkId)) CT  ON CT"& _ 
            ".[DeliveryRemarkId] = dbo.DeliveryRemark.[DeliveryRemarkId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryRemarkId", System.Data.SqlDbType.UniqueIdentifier))
        'DeliveryRemarkSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.DeliveryRemark.[DeliveryRemarkId], [DeliveryR"& _ 
            "emarkName], [ListOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate"& _ 
            "], [RecordStatus] FROM dbo.DeliveryRemark LEFT OUTER JOIN CHANGETABLE(CHANGES db"& _ 
            "o.DeliveryRemark, @sync_last_received_anchor) CT ON CT.[DeliveryRemarkId] = dbo."& _ 
            "DeliveryRemark.[DeliveryRemarkId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS"& _ 
            "_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.DeliveryRemark"& _ 
            ".[DeliveryRemarkId], [DeliveryRemarkName], [ListOrder], [CreatedBy], [CreatedDat"& _ 
            "e], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.DeliveryRemark JOIN CH"& _ 
            "ANGETABLE(CHANGES dbo.DeliveryRemark, @sync_last_received_anchor) CT ON CT.[Deli"& _ 
            "veryRemarkId] = dbo.DeliveryRemark.[DeliveryRemarkId] WHERE (CT.SYS_CHANGE_OPERA"& _ 
            "TION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anchor AND "& _ 
            "(CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binar"& _ 
            "y)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.DeliveryRemark')) > @s"& _ 
            "ync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up "& _ 
            "tracking information for table ''%s''. To recover from this error, the client mu"& _ 
            "st reinitialize its local database and try again',16,3,N'dbo.DeliveryRemark')  E"& _ 
            "ND "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'DeliveryRemarkSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[DeliveryRemarkId] FROM CHANGETABLE(CHA"& _ 
            "NGES dbo.DeliveryRemark, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPE"& _ 
            "RATION = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_"& _ 
            "CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF "& _ 
            "CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.DeliveryRemark')) > @sync_last"& _ 
            "_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking"& _ 
            " information for table ''%s''. To recover from this error, the client must reini"& _ 
            "tialize its local database and try again',16,3,N'dbo.DeliveryRemark')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'DeliveryRemarkSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.DeliveryRemark.[DeliveryRemarkId], [De"& _ 
            "liveryRemarkName], [ListOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [Modif"& _ 
            "iedDate], [RecordStatus] FROM dbo.DeliveryRemark JOIN CHANGETABLE(CHANGES dbo.De"& _ 
            "liveryRemark, @sync_last_received_anchor) CT ON CT.[DeliveryRemarkId] = dbo.Deli"& _ 
            "veryRemark.[DeliveryRemarkId] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CH"& _ 
            "ANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR "& _ 
            "CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_"& _ 
            "VERSION(object_id(N'dbo.DeliveryRemark')) > @sync_last_received_anchor RAISERROR"& _ 
            " (N'SQL Server Change Tracking has cleaned up tracking information for table ''%"& _ 
            "s''. To recover from this error, the client must reinitialize its local database"& _ 
            " and try again',16,3,N'dbo.DeliveryRemark')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "DeliveryRemark"
    End Sub
End Class

Partial Public Class DeliveryStatusSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'DeliveryStatusSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.DeliverySt"& _ 
            "atus ([DeliveryStatusId], [DeliveryStatusName], [CreatedBy], [CreatedDate], [Mod"& _ 
            "ifiedBy], [ModifiedDate], [RecordStatus]) VALUES (@DeliveryStatusId, @DeliverySt"& _ 
            "atusName, @CreatedBy, @CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus) S"& _ 
            "ET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id("& _ 
            "N'dbo.DeliveryStatus')) > @sync_last_received_anchor RAISERROR (N'SQL Server Cha"& _ 
            "nge Tracking has cleaned up tracking information for table ''%s''. To recover fr"& _ 
            "om this error, the client must reinitialize its local database and try again',16"& _ 
            ",3,N'dbo.DeliveryStatus') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryStatusId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryStatusName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'DeliveryStatusSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.DeliveryStatus "& _ 
            "FROM dbo.DeliveryStatus JOIN CHANGETABLE(VERSION dbo.DeliveryStatus, ([DeliveryS"& _ 
            "tatusId]), (@DeliveryStatusId)) CT  ON CT.[DeliveryStatusId] = dbo.DeliveryStatu"& _ 
            "s.[DeliveryStatusId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NU"& _ 
            "LL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONT"& _ 
            "EXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_r"& _ 
            "ow_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Deli"& _ 
            "veryStatus')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracki"& _ 
            "ng has cleaned up tracking information for table ''%s''. To recover from this er"& _ 
            "ror, the client must reinitialize its local database and try again',16,3,N'dbo.D"& _ 
            "eliveryStatus') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryStatusId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'DeliveryStatusSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.DeliveryStatus "& _ 
            "SET [DeliveryStatusName] = @DeliveryStatusName, [CreatedBy] = @CreatedBy, [Creat"& _ 
            "edDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDa"& _ 
            "te, [RecordStatus] = @RecordStatus FROM dbo.DeliveryStatus  JOIN CHANGETABLE(VER"& _ 
            "SION dbo.DeliveryStatus, ([DeliveryStatusId]), (@DeliveryStatusId)) CT  ON CT.[D"& _ 
            "eliveryStatusId] = dbo.DeliveryStatus.[DeliveryStatusId] WHERE (@sync_force_writ"& _ 
            "e = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_re"& _ 
            "ceived_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = "& _ 
            "@sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MI"& _ 
            "N_VALID_VERSION(object_id(N'dbo.DeliveryStatus')) > @sync_last_received_anchor R"& _ 
            "AISERROR (N'SQL Server Change Tracking has cleaned up tracking information for t"& _ 
            "able ''%s''. To recover from this error, the client must reinitialize its local "& _ 
            "database and try again',16,3,N'dbo.DeliveryStatus') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryStatusName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryStatusId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'DeliveryStatusSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[DeliveryStatusId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM C"& _ 
            "HANGETABLE(CHANGES dbo.DeliveryStatus, @sync_last_received_anchor) CT WHERE (CT."& _ 
            "[DeliveryStatusId] = @DeliveryStatusId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryStatusId", System.Data.SqlDbType.UniqueIdentifier))
        'DeliveryStatusSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.DeliveryStatus.[DeliveryStatusId], [DeliveryStatusName], [CreatedBy], "& _ 
            "[CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTE"& _ 
            "XT, CT.SYS_CHANGE_VERSION FROM dbo.DeliveryStatus JOIN CHANGETABLE(VERSION dbo.D"& _ 
            "eliveryStatus, ([DeliveryStatusId]), (@DeliveryStatusId)) CT  ON CT.[DeliverySta"& _ 
            "tusId] = dbo.DeliveryStatus.[DeliveryStatusId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryStatusId", System.Data.SqlDbType.UniqueIdentifier))
        'DeliveryStatusSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.DeliveryStatus.[DeliveryStatusId], [DeliveryS"& _ 
            "tatusName], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordSta"& _ 
            "tus] FROM dbo.DeliveryStatus LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.DeliverySta"& _ 
            "tus, @sync_last_received_anchor) CT ON CT.[DeliveryStatusId] = dbo.DeliveryStatu"& _ 
            "s.[DeliveryStatusId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTE"& _ 
            "XT <> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.DeliveryStatus.[DeliverySta"& _ 
            "tusId], [DeliveryStatusName], [CreatedBy], [CreatedDate], [ModifiedBy], [Modifie"& _ 
            "dDate], [RecordStatus] FROM dbo.DeliveryStatus JOIN CHANGETABLE(CHANGES dbo.Deli"& _ 
            "veryStatus, @sync_last_received_anchor) CT ON CT.[DeliveryStatusId] = dbo.Delive"& _ 
            "ryStatus.[DeliveryStatusId] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHAN"& _ 
            "GE_CREATION_VERSION  <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS "& _ 
            "NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MI"& _ 
            "N_VALID_VERSION(object_id(N'dbo.DeliveryStatus')) > @sync_last_received_anchor R"& _ 
            "AISERROR (N'SQL Server Change Tracking has cleaned up tracking information for t"& _ 
            "able ''%s''. To recover from this error, the client must reinitialize its local "& _ 
            "database and try again',16,3,N'dbo.DeliveryStatus')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'DeliveryStatusSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[DeliveryStatusId] FROM CHANGETABLE(CHA"& _ 
            "NGES dbo.DeliveryStatus, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPE"& _ 
            "RATION = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_"& _ 
            "CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF "& _ 
            "CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.DeliveryStatus')) > @sync_last"& _ 
            "_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking"& _ 
            " information for table ''%s''. To recover from this error, the client must reini"& _ 
            "tialize its local database and try again',16,3,N'dbo.DeliveryStatus')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'DeliveryStatusSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.DeliveryStatus.[DeliveryStatusId], [De"& _ 
            "liveryStatusName], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [Re"& _ 
            "cordStatus] FROM dbo.DeliveryStatus JOIN CHANGETABLE(CHANGES dbo.DeliveryStatus,"& _ 
            " @sync_last_received_anchor) CT ON CT.[DeliveryStatusId] = dbo.DeliveryStatus.[D"& _ 
            "eliveryStatusId] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION "& _ 
            "<= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE"& _ 
            "_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(objec"& _ 
            "t_id(N'dbo.DeliveryStatus')) > @sync_last_received_anchor RAISERROR (N'SQL Serve"& _ 
            "r Change Tracking has cleaned up tracking information for table ''%s''. To recov"& _ 
            "er from this error, the client must reinitialize its local database and try agai"& _ 
            "n',16,3,N'dbo.DeliveryStatus')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "DeliveryStatus"
    End Sub
End Class

Partial Public Class DepartmentSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'DepartmentSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Department"& _ 
            " ([DepartmentId], [DepartmentName], [CreatedBy], [CreatedDate], [ModifiedBy], [M"& _ 
            "odifiedDate], [RecordStatus]) VALUES (@DepartmentId, @DepartmentName, @CreatedBy"& _ 
            ", @CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_row_count ="& _ 
            " @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Department')) "& _ 
            "> @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned"& _ 
            " up tracking information for table ''%s''. To recover from this error, the clien"& _ 
            "t must reinitialize its local database and try again',16,3,N'dbo.Department') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DepartmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DepartmentName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'DepartmentSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Department FROM"& _ 
            " dbo.Department JOIN CHANGETABLE(VERSION dbo.Department, ([DepartmentId]), (@Dep"& _ 
            "artmentId)) CT  ON CT.[DepartmentId] = dbo.Department.[DepartmentId] WHERE (@syn"& _ 
            "c_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @"& _ 
            "sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANG"& _ 
            "E_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE"& _ 
            "_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Department')) > @sync_last_received_"& _ 
            "anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking informati"& _ 
            "on for table ''%s''. To recover from this error, the client must reinitialize it"& _ 
            "s local database and try again',16,3,N'dbo.Department') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DepartmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'DepartmentSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Department SET "& _ 
            "[DepartmentName] = @DepartmentName, [CreatedBy] = @CreatedBy, [CreatedDate] = @C"& _ 
            "reatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, [RecordS"& _ 
            "tatus] = @RecordStatus FROM dbo.Department  JOIN CHANGETABLE(VERSION dbo.Departm"& _ 
            "ent, ([DepartmentId]), (@DepartmentId)) CT  ON CT.[DepartmentId] = dbo.Departmen"& _ 
            "t.[DepartmentId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL O"& _ 
            "R CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT "& _ 
            "IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_c"& _ 
            "ount = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Departme"& _ 
            "nt')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has c"& _ 
            "leaned up tracking information for table ''%s''. To recover from this error, the"& _ 
            " client must reinitialize its local database and try again',16,3,N'dbo.Departmen"& _ 
            "t') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DepartmentName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DepartmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'DepartmentSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[DepartmentId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANG"& _ 
            "ETABLE(CHANGES dbo.Department, @sync_last_received_anchor) CT WHERE (CT.[Departm"& _ 
            "entId] = @DepartmentId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DepartmentId", System.Data.SqlDbType.UniqueIdentifier))
        'DepartmentSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.Department.[DepartmentId], [DepartmentName], [CreatedBy], [CreatedDate"& _ 
            "], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_C"& _ 
            "HANGE_VERSION FROM dbo.Department JOIN CHANGETABLE(VERSION dbo.Department, ([Dep"& _ 
            "artmentId]), (@DepartmentId)) CT  ON CT.[DepartmentId] = dbo.Department.[Departm"& _ 
            "entId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DepartmentId", System.Data.SqlDbType.UniqueIdentifier))
        'DepartmentSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.Department.[DepartmentId], [DepartmentName], "& _ 
            "[CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM db"& _ 
            "o.Department LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.Department, @sync_last_rece"& _ 
            "ived_anchor) CT ON CT.[DepartmentId] = dbo.Department.[DepartmentId] WHERE (CT.S"& _ 
            "YS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary) EL"& _ 
            "SE  BEGIN SELECT dbo.Department.[DepartmentId], [DepartmentName], [CreatedBy], ["& _ 
            "CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.Department J"& _ 
            "OIN CHANGETABLE(CHANGES dbo.Department, @sync_last_received_anchor) CT ON CT.[De"& _ 
            "partmentId] = dbo.Department.[DepartmentId] WHERE (CT.SYS_CHANGE_OPERATION = 'I'"& _ 
            " AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anchor AND (CT.SYS_CH"& _ 
            "ANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CH"& _ 
            "ANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Department')) > @sync_last_recei"& _ 
            "ved_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking infor"& _ 
            "mation for table ''%s''. To recover from this error, the client must reinitializ"& _ 
            "e its local database and try again',16,3,N'dbo.Department')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'DepartmentSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[DepartmentId] FROM CHANGETABLE(CHANGES"& _ 
            " dbo.Department, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION ="& _ 
            " 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_C"& _ 
            "ONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_T"& _ 
            "RACKING_MIN_VALID_VERSION(object_id(N'dbo.Department')) > @sync_last_received_an"& _ 
            "chor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information"& _ 
            " for table ''%s''. To recover from this error, the client must reinitialize its "& _ 
            "local database and try again',16,3,N'dbo.Department')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'DepartmentSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.Department.[DepartmentId], [Department"& _ 
            "Name], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] "& _ 
            "FROM dbo.Department JOIN CHANGETABLE(CHANGES dbo.Department, @sync_last_received"& _ 
            "_anchor) CT ON CT.[DepartmentId] = dbo.Department.[DepartmentId] WHERE (CT.SYS_C"& _ 
            "HANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND"& _ 
            " (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_bina"& _ 
            "ry)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Department')) > @sync"& _ 
            "_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tra"& _ 
            "cking information for table ''%s''. To recover from this error, the client must "& _ 
            "reinitialize its local database and try again',16,3,N'dbo.Department')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Department"
    End Sub
End Class

Partial Public Class DistributionSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'DistributionSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Distributi"& _ 
            "on ([DistributionID], [UserID], [AreaID], [BatchID], [Driver], [Checker], [Plate"& _ 
            "No], [ShipmentId], [ConsigneeID], [PaymentModeID], [ServiceModeID], [Amount], [A"& _ 
            "irwayBillNo], [Cargo], [Uploaded], [CreatedDate], [CreatedBy], [ModifiedDate], ["& _ 
            "ModifiedBy], [RecordStatus]) VALUES (@DistributionID, @UserID, @AreaID, @BatchID"& _ 
            ", @Driver, @Checker, @PlateNo, @ShipmentId, @ConsigneeID, @PaymentModeID, @Servi"& _ 
            "ceModeID, @Amount, @AirwayBillNo, @Cargo, @Uploaded, @CreatedDate, @CreatedBy, @"& _ 
            "ModifiedDate, @ModifiedBy, @RecordStatus) SET @sync_row_count = @@rowcount; IF C"& _ 
            "HANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Distribution')) > @sync_last_re"& _ 
            "ceived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking in"& _ 
            "formation for table ''%s''. To recover from this error, the client must reinitia"& _ 
            "lize its local database and try again',16,3,N'dbo.Distribution') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DistributionID", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@UserID", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AreaID", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BatchID", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Driver", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Checker", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PlateNo", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ConsigneeID", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentModeID", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceModeID", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Amount", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AirwayBillNo", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Cargo", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Uploaded", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'DistributionSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Distribution FR"& _ 
            "OM dbo.Distribution JOIN CHANGETABLE(VERSION dbo.Distribution, ([DistributionID]"& _ 
            "), (@DistributionID)) CT  ON CT.[DistributionID] = dbo.Distribution.[Distributio"& _ 
            "nID] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHA"& _ 
            "NGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL "& _ 
            "AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@row"& _ 
            "count; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Distribution')) > @s"& _ 
            "ync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up "& _ 
            "tracking information for table ''%s''. To recover from this error, the client mu"& _ 
            "st reinitialize its local database and try again',16,3,N'dbo.Distribution') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DistributionID", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'DistributionSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Distribution SE"& _ 
            "T [UserID] = @UserID, [AreaID] = @AreaID, [BatchID] = @BatchID, [Driver] = @Driv"& _ 
            "er, [Checker] = @Checker, [PlateNo] = @PlateNo, [ShipmentId] = @ShipmentId, [Con"& _ 
            "signeeID] = @ConsigneeID, [PaymentModeID] = @PaymentModeID, [ServiceModeID] = @S"& _ 
            "erviceModeID, [Amount] = @Amount, [AirwayBillNo] = @AirwayBillNo, [Cargo] = @Car"& _ 
            "go, [Uploaded] = @Uploaded, [CreatedDate] = @CreatedDate, [CreatedBy] = @Created"& _ 
            "By, [ModifiedDate] = @ModifiedDate, [ModifiedBy] = @ModifiedBy, [RecordStatus] ="& _ 
            " @RecordStatus FROM dbo.Distribution  JOIN CHANGETABLE(VERSION dbo.Distribution,"& _ 
            " ([DistributionID]), (@DistributionID)) CT  ON CT.[DistributionID] = dbo.Distrib"& _ 
            "ution.[DistributionID] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS "& _ 
            "NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CO"& _ 
            "NTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync"& _ 
            "_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Di"& _ 
            "stribution')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracki"& _ 
            "ng has cleaned up tracking information for table ''%s''. To recover from this er"& _ 
            "ror, the client must reinitialize its local database and try again',16,3,N'dbo.D"& _ 
            "istribution') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@UserID", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AreaID", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BatchID", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Driver", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Checker", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PlateNo", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ConsigneeID", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentModeID", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceModeID", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Amount", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AirwayBillNo", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Cargo", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Uploaded", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DistributionID", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'DistributionSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[DistributionID], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHA"& _ 
            "NGETABLE(CHANGES dbo.Distribution, @sync_last_received_anchor) CT WHERE (CT.[Dis"& _ 
            "tributionID] = @DistributionID AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DistributionID", System.Data.SqlDbType.UniqueIdentifier))
        'DistributionSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.Distribution.[DistributionID], [UserID], [AreaID], [BatchID], [Driver]"& _ 
            ", [Checker], [PlateNo], [ShipmentId], [ConsigneeID], [PaymentModeID], [ServiceMo"& _ 
            "deID], [Amount], [AirwayBillNo], [Cargo], [Uploaded], [CreatedDate], [CreatedBy]"& _ 
            ", [ModifiedDate], [ModifiedBy], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CH"& _ 
            "ANGE_VERSION FROM dbo.Distribution JOIN CHANGETABLE(VERSION dbo.Distribution, (["& _ 
            "DistributionID]), (@DistributionID)) CT  ON CT.[DistributionID] = dbo.Distributi"& _ 
            "on.[DistributionID]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DistributionID", System.Data.SqlDbType.UniqueIdentifier))
        'DistributionSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.Distribution.[DistributionID], [UserID], [Are"& _ 
            "aID], [BatchID], [Driver], [Checker], [PlateNo], [ShipmentId], [ConsigneeID], [P"& _ 
            "aymentModeID], [ServiceModeID], [Amount], [AirwayBillNo], [Cargo], [Uploaded], ["& _ 
            "CreatedDate], [CreatedBy], [ModifiedDate], [ModifiedBy], [RecordStatus] FROM dbo"& _ 
            ".Distribution LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.Distribution, @sync_last_r"& _ 
            "eceived_anchor) CT ON CT.[DistributionID] = dbo.Distribution.[DistributionID] WH"& _ 
            "ERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_b"& _ 
            "inary) ELSE  BEGIN SELECT dbo.Distribution.[DistributionID], [UserID], [AreaID],"& _ 
            " [BatchID], [Driver], [Checker], [PlateNo], [ShipmentId], [ConsigneeID], [Paymen"& _ 
            "tModeID], [ServiceModeID], [Amount], [AirwayBillNo], [Cargo], [Uploaded], [Creat"& _ 
            "edDate], [CreatedBy], [ModifiedDate], [ModifiedBy], [RecordStatus] FROM dbo.Dist"& _ 
            "ribution JOIN CHANGETABLE(CHANGES dbo.Distribution, @sync_last_received_anchor) "& _ 
            "CT ON CT.[DistributionID] = dbo.Distribution.[DistributionID] WHERE (CT.SYS_CHAN"& _ 
            "GE_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anc"& _ 
            "hor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_"& _ 
            "id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Distribution')"& _ 
            ") > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has clean"& _ 
            "ed up tracking information for table ''%s''. To recover from this error, the cli"& _ 
            "ent must reinitialize its local database and try again',16,3,N'dbo.Distribution'"& _ 
            ")  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'DistributionSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[DistributionID] FROM CHANGETABLE(CHANG"& _ 
            "ES dbo.Distribution, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATI"& _ 
            "ON = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHAN"& _ 
            "GE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHAN"& _ 
            "GE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Distribution')) > @sync_last_recei"& _ 
            "ved_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking infor"& _ 
            "mation for table ''%s''. To recover from this error, the client must reinitializ"& _ 
            "e its local database and try again',16,3,N'dbo.Distribution')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'DistributionSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.Distribution.[DistributionID], [UserID"& _ 
            "], [AreaID], [BatchID], [Driver], [Checker], [PlateNo], [ShipmentId], [Consignee"& _ 
            "ID], [PaymentModeID], [ServiceModeID], [Amount], [AirwayBillNo], [Cargo], [Uploa"& _ 
            "ded], [CreatedDate], [CreatedBy], [ModifiedDate], [ModifiedBy], [RecordStatus] F"& _ 
            "ROM dbo.Distribution JOIN CHANGETABLE(CHANGES dbo.Distribution, @sync_last_recei"& _ 
            "ved_anchor) CT ON CT.[DistributionID] = dbo.Distribution.[DistributionID] WHERE "& _ 
            "(CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_a"& _ 
            "nchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_clien"& _ 
            "t_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Distribution"& _ 
            "')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cle"& _ 
            "aned up tracking information for table ''%s''. To recover from this error, the c"& _ 
            "lient must reinitialize its local database and try again',16,3,N'dbo.Distributio"& _ 
            "n')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Distribution"
    End Sub
End Class

Partial Public Class EmployeeSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'EmployeeSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Employee ("& _ 
            "[EmployeeId], [PositionId], [DepartmentId], [AssignedToAreaId], [FirstName], [Mi"& _ 
            "ddleName], [LastName], [Birthdate], [ContactNo], [Mobile], [Email], [DriversLice"& _ 
            "nseNo], [DriversLicenseExpiration], [CreatedBy], [CreatedDate], [ModifiedBy], [M"& _ 
            "odifiedDate], [RecordStatus]) VALUES (@EmployeeId, @PositionId, @DepartmentId, @"& _ 
            "AssignedToAreaId, @FirstName, @MiddleName, @LastName, @Birthdate, @ContactNo, @M"& _ 
            "obile, @Email, @DriversLicenseNo, @DriversLicenseExpiration, @CreatedBy, @Create"& _ 
            "dDate, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_row_count = @@rowcou"& _ 
            "nt; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Employee')) > @sync_las"& _ 
            "t_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up trackin"& _ 
            "g information for table ''%s''. To recover from this error, the client must rein"& _ 
            "itialize its local database and try again',16,3,N'dbo.Employee') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EmployeeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PositionId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DepartmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AssignedToAreaId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FirstName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@MiddleName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Birthdate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Mobile", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Email", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DriversLicenseNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DriversLicenseExpiration", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'EmployeeSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Employee FROM d"& _ 
            "bo.Employee JOIN CHANGETABLE(VERSION dbo.Employee, ([EmployeeId]), (@EmployeeId)"& _ 
            ") CT  ON CT.[EmployeeId] = dbo.Employee.[EmployeeId] WHERE (@sync_force_write = "& _ 
            "1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_receiv"& _ 
            "ed_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @syn"& _ 
            "c_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VA"& _ 
            "LID_VERSION(object_id(N'dbo.Employee')) > @sync_last_received_anchor RAISERROR ("& _ 
            "N'SQL Server Change Tracking has cleaned up tracking information for table ''%s'"& _ 
            "'. To recover from this error, the client must reinitialize its local database a"& _ 
            "nd try again',16,3,N'dbo.Employee') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EmployeeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'EmployeeSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Employee SET [P"& _ 
            "ositionId] = @PositionId, [DepartmentId] = @DepartmentId, [AssignedToAreaId] = @"& _ 
            "AssignedToAreaId, [FirstName] = @FirstName, [MiddleName] = @MiddleName, [LastNam"& _ 
            "e] = @LastName, [Birthdate] = @Birthdate, [ContactNo] = @ContactNo, [Mobile] = @"& _ 
            "Mobile, [Email] = @Email, [DriversLicenseNo] = @DriversLicenseNo, [DriversLicens"& _ 
            "eExpiration] = @DriversLicenseExpiration, [CreatedBy] = @CreatedBy, [CreatedDate"& _ 
            "] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, [R"& _ 
            "ecordStatus] = @RecordStatus FROM dbo.Employee  JOIN CHANGETABLE(VERSION dbo.Emp"& _ 
            "loyee, ([EmployeeId]), (@EmployeeId)) CT  ON CT.[EmployeeId] = dbo.Employee.[Emp"& _ 
            "loyeeId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS"& _ 
            "_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT N"& _ 
            "ULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @"& _ 
            "@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Employee')) > @s"& _ 
            "ync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up "& _ 
            "tracking information for table ''%s''. To recover from this error, the client mu"& _ 
            "st reinitialize its local database and try again',16,3,N'dbo.Employee') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PositionId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DepartmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AssignedToAreaId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FirstName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@MiddleName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Birthdate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Mobile", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Email", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DriversLicenseNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DriversLicenseExpiration", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EmployeeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'EmployeeSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[EmployeeId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGET"& _ 
            "ABLE(CHANGES dbo.Employee, @sync_last_received_anchor) CT WHERE (CT.[EmployeeId]"& _ 
            " = @EmployeeId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EmployeeId", System.Data.SqlDbType.UniqueIdentifier))
        'EmployeeSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.Employee.[EmployeeId], [PositionId], [DepartmentId], [AssignedToAreaId"& _ 
            "], [FirstName], [MiddleName], [LastName], [Birthdate], [ContactNo], [Mobile], [E"& _ 
            "mail], [DriversLicenseNo], [DriversLicenseExpiration], [CreatedBy], [CreatedDate"& _ 
            "], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_C"& _ 
            "HANGE_VERSION FROM dbo.Employee JOIN CHANGETABLE(VERSION dbo.Employee, ([Employe"& _ 
            "eId]), (@EmployeeId)) CT  ON CT.[EmployeeId] = dbo.Employee.[EmployeeId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EmployeeId", System.Data.SqlDbType.UniqueIdentifier))
        'EmployeeSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.Employee.[EmployeeId], [PositionId], [Departm"& _ 
            "entId], [AssignedToAreaId], [FirstName], [MiddleName], [LastName], [Birthdate], "& _ 
            "[ContactNo], [Mobile], [Email], [DriversLicenseNo], [DriversLicenseExpiration], "& _ 
            "[CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM db"& _ 
            "o.Employee LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.Employee, @sync_last_received"& _ 
            "_anchor) CT ON CT.[EmployeeId] = dbo.Employee.[EmployeeId] WHERE (CT.SYS_CHANGE_"& _ 
            "CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN "& _ 
            "SELECT dbo.Employee.[EmployeeId], [PositionId], [DepartmentId], [AssignedToAreaI"& _ 
            "d], [FirstName], [MiddleName], [LastName], [Birthdate], [ContactNo], [Mobile], ["& _ 
            "Email], [DriversLicenseNo], [DriversLicenseExpiration], [CreatedBy], [CreatedDat"& _ 
            "e], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.Employee JOIN CHANGETA"& _ 
            "BLE(CHANGES dbo.Employee, @sync_last_received_anchor) CT ON CT.[EmployeeId] = db"& _ 
            "o.Employee.[EmployeeId] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_C"& _ 
            "REATION_VERSION  <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL"& _ 
            " OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VA"& _ 
            "LID_VERSION(object_id(N'dbo.Employee')) > @sync_last_received_anchor RAISERROR ("& _ 
            "N'SQL Server Change Tracking has cleaned up tracking information for table ''%s'"& _ 
            "'. To recover from this error, the client must reinitialize its local database a"& _ 
            "nd try again',16,3,N'dbo.Employee')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'EmployeeSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[EmployeeId] FROM CHANGETABLE(CHANGES d"& _ 
            "bo.Employee, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D'"& _ 
            " AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTE"& _ 
            "XT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACK"& _ 
            "ING_MIN_VALID_VERSION(object_id(N'dbo.Employee')) > @sync_last_received_anchor R"& _ 
            "AISERROR (N'SQL Server Change Tracking has cleaned up tracking information for t"& _ 
            "able ''%s''. To recover from this error, the client must reinitialize its local "& _ 
            "database and try again',16,3,N'dbo.Employee')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'EmployeeSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.Employee.[EmployeeId], [PositionId], ["& _ 
            "DepartmentId], [AssignedToAreaId], [FirstName], [MiddleName], [LastName], [Birth"& _ 
            "date], [ContactNo], [Mobile], [Email], [DriversLicenseNo], [DriversLicenseExpira"& _ 
            "tion], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] "& _ 
            "FROM dbo.Employee JOIN CHANGETABLE(CHANGES dbo.Employee, @sync_last_received_anc"& _ 
            "hor) CT ON CT.[EmployeeId] = dbo.Employee.[EmployeeId] WHERE (CT.SYS_CHANGE_OPER"& _ 
            "ATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_C"& _ 
            "HANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF C"& _ 
            "HANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Employee')) > @sync_last_receiv"& _ 
            "ed_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking inform"& _ 
            "ation for table ''%s''. To recover from this error, the client must reinitialize"& _ 
            " its local database and try again',16,3,N'dbo.Employee')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Employee"
    End Sub
End Class

Partial Public Class ExpressRateSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'ExpressRateSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.ExpressRat"& _ 
            "e ([ExpressRateId], [1to5Cost], [6to49Cost], [50to249Cost], [250to999Cost], [100"& _ 
            "0to10000Cost], [EffectiveDate], [OriginCityId], [DestinationCityId], [CreatedBy]"& _ 
            ", [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], [RateMatrixId]) V"& _ 
            "ALUES (@ExpressRateId, @p1, @p3, @p5, @p7, @p9, @EffectiveDate, @OriginCityId, @"& _ 
            "DestinationCityId, @CreatedBy, @CreatedDate, @ModifiedBy, @ModifiedDate, @Record"& _ 
            "Status, @RateMatrixId) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_"& _ 
            "VALID_VERSION(object_id(N'dbo.ExpressRate')) > @sync_last_received_anchor RAISER"& _ 
            "ROR (N'SQL Server Change Tracking has cleaned up tracking information for table "& _ 
            "''%s''. To recover from this error, the client must reinitialize its local datab"& _ 
            "ase and try again',16,3,N'dbo.ExpressRate') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ExpressRateId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@p1", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@p3", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@p5", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@p7", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@p9", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EffectiveDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RateMatrixId", System.Data.SqlDbType.UniqueIdentifier))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'ExpressRateSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.ExpressRate FRO"& _ 
            "M dbo.ExpressRate JOIN CHANGETABLE(VERSION dbo.ExpressRate, ([ExpressRateId]), ("& _ 
            "@ExpressRateId)) CT  ON CT.[ExpressRateId] = dbo.ExpressRate.[ExpressRateId] WHE"& _ 
            "RE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERS"& _ 
            "ION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.S"& _ 
            "YS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; I"& _ 
            "F CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.ExpressRate')) > @sync_last_"& _ 
            "received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking "& _ 
            "information for table ''%s''. To recover from this error, the client must reinit"& _ 
            "ialize its local database and try again',16,3,N'dbo.ExpressRate') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ExpressRateId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'ExpressRateSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.ExpressRate SET"& _ 
            " [1to5Cost] = @p1, [6to49Cost] = @p3, [50to249Cost] = @p5, [250to999Cost] = @p7,"& _ 
            " [1000to10000Cost] = @p9, [EffectiveDate] = @EffectiveDate, [OriginCityId] = @Or"& _ 
            "iginCityId, [DestinationCityId] = @DestinationCityId, [CreatedBy] = @CreatedBy, "& _ 
            "[CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @Modi"& _ 
            "fiedDate, [RecordStatus] = @RecordStatus, [RateMatrixId] = @RateMatrixId FROM db"& _ 
            "o.ExpressRate  JOIN CHANGETABLE(VERSION dbo.ExpressRate, ([ExpressRateId]), (@Ex"& _ 
            "pressRateId)) CT  ON CT.[ExpressRateId] = dbo.ExpressRate.[ExpressRateId] WHERE "& _ 
            "(@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION"& _ 
            " <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_"& _ 
            "CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF C"& _ 
            "HANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.ExpressRate')) > @sync_last_rec"& _ 
            "eived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking inf"& _ 
            "ormation for table ''%s''. To recover from this error, the client must reinitial"& _ 
            "ize its local database and try again',16,3,N'dbo.ExpressRate') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@p1", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@p3", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@p5", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@p7", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@p9", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EffectiveDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RateMatrixId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ExpressRateId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'ExpressRateSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[ExpressRateId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHAN"& _ 
            "GETABLE(CHANGES dbo.ExpressRate, @sync_last_received_anchor) CT WHERE (CT.[Expre"& _ 
            "ssRateId] = @ExpressRateId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ExpressRateId", System.Data.SqlDbType.UniqueIdentifier))
        'ExpressRateSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.ExpressRate.[ExpressRateId], [1to5Cost], [6to49Cost], [50to249Cost], ["& _ 
            "250to999Cost], [1000to10000Cost], [EffectiveDate], [OriginCityId], [DestinationC"& _ 
            "ityId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus]"& _ 
            ", [RateMatrixId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.ExpressR"& _ 
            "ate JOIN CHANGETABLE(VERSION dbo.ExpressRate, ([ExpressRateId]), (@ExpressRateId"& _ 
            ")) CT  ON CT.[ExpressRateId] = dbo.ExpressRate.[ExpressRateId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ExpressRateId", System.Data.SqlDbType.UniqueIdentifier))
        'ExpressRateSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.ExpressRate.[ExpressRateId], [1to5Cost], [6to"& _ 
            "49Cost], [50to249Cost], [250to999Cost], [1000to10000Cost], [EffectiveDate], [Ori"& _ 
            "ginCityId], [DestinationCityId], [CreatedBy], [CreatedDate], [ModifiedBy], [Modi"& _ 
            "fiedDate], [RecordStatus], [RateMatrixId] FROM dbo.ExpressRate LEFT OUTER JOIN C"& _ 
            "HANGETABLE(CHANGES dbo.ExpressRate, @sync_last_received_anchor) CT ON CT.[Expres"& _ 
            "sRateId] = dbo.ExpressRate.[ExpressRateId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL "& _ 
            "OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.Expre"& _ 
            "ssRate.[ExpressRateId], [1to5Cost], [6to49Cost], [50to249Cost], [250to999Cost], "& _ 
            "[1000to10000Cost], [EffectiveDate], [OriginCityId], [DestinationCityId], [Create"& _ 
            "dBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], [RateMatrixId"& _ 
            "] FROM dbo.ExpressRate JOIN CHANGETABLE(CHANGES dbo.ExpressRate, @sync_last_rece"& _ 
            "ived_anchor) CT ON CT.[ExpressRateId] = dbo.ExpressRate.[ExpressRateId] WHERE (C"& _ 
            "T.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_re"& _ 
            "ceived_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sy"& _ 
            "nc_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Expr"& _ 
            "essRate')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking "& _ 
            "has cleaned up tracking information for table ''%s''. To recover from this error"& _ 
            ", the client must reinitialize its local database and try again',16,3,N'dbo.Expr"& _ 
            "essRate')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'ExpressRateSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[ExpressRateId] FROM CHANGETABLE(CHANGE"& _ 
            "S dbo.ExpressRate, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION"& _ 
            " = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE"& _ 
            "_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE"& _ 
            "_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.ExpressRate')) > @sync_last_received"& _ 
            "_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking informat"& _ 
            "ion for table ''%s''. To recover from this error, the client must reinitialize i"& _ 
            "ts local database and try again',16,3,N'dbo.ExpressRate')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'ExpressRateSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.ExpressRate.[ExpressRateId], [1to5Cost"& _ 
            "], [6to49Cost], [50to249Cost], [250to999Cost], [1000to10000Cost], [EffectiveDate"& _ 
            "], [OriginCityId], [DestinationCityId], [CreatedBy], [CreatedDate], [ModifiedBy]"& _ 
            ", [ModifiedDate], [RecordStatus], [RateMatrixId] FROM dbo.ExpressRate JOIN CHANG"& _ 
            "ETABLE(CHANGES dbo.ExpressRate, @sync_last_received_anchor) CT ON CT.[ExpressRat"& _ 
            "eId] = dbo.ExpressRate.[ExpressRateId] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND "& _ 
            "CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS"& _ 
            " NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_M"& _ 
            "IN_VALID_VERSION(object_id(N'dbo.ExpressRate')) > @sync_last_received_anchor RAI"& _ 
            "SERROR (N'SQL Server Change Tracking has cleaned up tracking information for tab"& _ 
            "le ''%s''. To recover from this error, the client must reinitialize its local da"& _ 
            "tabase and try again',16,3,N'dbo.ExpressRate')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "ExpressRate"
    End Sub
End Class

Partial Public Class FuelSurchargeSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'FuelSurchargeSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.FuelSurcha"& _ 
            "rge ([FuelSurchargeId], [OriginGroupId], [DestinationGroupId], [Amount], [IsVata"& _ 
            "ble], [Description], [EffectiveDate], [CreatedBy], [CreatedDate], [ModifiedBy], "& _ 
            "[ModifiedDate], [RecordStatus]) VALUES (@FuelSurchargeId, @OriginGroupId, @Desti"& _ 
            "nationGroupId, @Amount, @IsVatable, @Description, @EffectiveDate, @CreatedBy, @C"& _ 
            "reatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_row_count = @@r"& _ 
            "owcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.FuelSurcharge')) >"& _ 
            " @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned "& _ 
            "up tracking information for table ''%s''. To recover from this error, the client"& _ 
            " must reinitialize its local database and try again',16,3,N'dbo.FuelSurcharge') "& _ 
            ""
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FuelSurchargeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginGroupId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationGroupId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Amount", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsVatable", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EffectiveDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'FuelSurchargeSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.FuelSurcharge F"& _ 
            "ROM dbo.FuelSurcharge JOIN CHANGETABLE(VERSION dbo.FuelSurcharge, ([FuelSurcharg"& _ 
            "eId]), (@FuelSurchargeId)) CT  ON CT.[FuelSurchargeId] = dbo.FuelSurcharge.[Fuel"& _ 
            "SurchargeId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT"& _ 
            ".SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS N"& _ 
            "OT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count"& _ 
            " = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.FuelSurcharg"& _ 
            "e')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cl"& _ 
            "eaned up tracking information for table ''%s''. To recover from this error, the "& _ 
            "client must reinitialize its local database and try again',16,3,N'dbo.FuelSurcha"& _ 
            "rge') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FuelSurchargeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'FuelSurchargeSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.FuelSurcharge S"& _ 
            "ET [OriginGroupId] = @OriginGroupId, [DestinationGroupId] = @DestinationGroupId,"& _ 
            " [Amount] = @Amount, [IsVatable] = @IsVatable, [Description] = @Description, [Ef"& _ 
            "fectiveDate] = @EffectiveDate, [CreatedBy] = @CreatedBy, [CreatedDate] = @Create"& _ 
            "dDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, [RecordStatus"& _ 
            "] = @RecordStatus FROM dbo.FuelSurcharge  JOIN CHANGETABLE(VERSION dbo.FuelSurch"& _ 
            "arge, ([FuelSurchargeId]), (@FuelSurchargeId)) CT  ON CT.[FuelSurchargeId] = dbo"& _ 
            ".FuelSurcharge.[FuelSurchargeId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_V"& _ 
            "ERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS"& _ 
            "_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary))"& _ 
            " SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_i"& _ 
            "d(N'dbo.FuelSurcharge')) > @sync_last_received_anchor RAISERROR (N'SQL Server Ch"& _ 
            "ange Tracking has cleaned up tracking information for table ''%s''. To recover f"& _ 
            "rom this error, the client must reinitialize its local database and try again',1"& _ 
            "6,3,N'dbo.FuelSurcharge') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginGroupId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationGroupId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Amount", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsVatable", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EffectiveDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FuelSurchargeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'FuelSurchargeSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[FuelSurchargeId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CH"& _ 
            "ANGETABLE(CHANGES dbo.FuelSurcharge, @sync_last_received_anchor) CT WHERE (CT.[F"& _ 
            "uelSurchargeId] = @FuelSurchargeId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FuelSurchargeId", System.Data.SqlDbType.UniqueIdentifier))
        'FuelSurchargeSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.FuelSurcharge.[FuelSurchargeId], [OriginGroupId], [DestinationGroupId]"& _ 
            ", [Amount], [IsVatable], [Description], [EffectiveDate], [CreatedBy], [CreatedDa"& _ 
            "te], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS"& _ 
            "_CHANGE_VERSION FROM dbo.FuelSurcharge JOIN CHANGETABLE(VERSION dbo.FuelSurcharg"& _ 
            "e, ([FuelSurchargeId]), (@FuelSurchargeId)) CT  ON CT.[FuelSurchargeId] = dbo.Fu"& _ 
            "elSurcharge.[FuelSurchargeId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FuelSurchargeId", System.Data.SqlDbType.UniqueIdentifier))
        'FuelSurchargeSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.FuelSurcharge.[FuelSurchargeId], [OriginGroup"& _ 
            "Id], [DestinationGroupId], [Amount], [IsVatable], [Description], [EffectiveDate]"& _ 
            ", [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM "& _ 
            "dbo.FuelSurcharge LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.FuelSurcharge, @sync_l"& _ 
            "ast_received_anchor) CT ON CT.[FuelSurchargeId] = dbo.FuelSurcharge.[FuelSurchar"& _ 
            "geId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_cli"& _ 
            "ent_id_binary) ELSE  BEGIN SELECT dbo.FuelSurcharge.[FuelSurchargeId], [OriginGr"& _ 
            "oupId], [DestinationGroupId], [Amount], [IsVatable], [Description], [EffectiveDa"& _ 
            "te], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FR"& _ 
            "OM dbo.FuelSurcharge JOIN CHANGETABLE(CHANGES dbo.FuelSurcharge, @sync_last_rece"& _ 
            "ived_anchor) CT ON CT.[FuelSurchargeId] = dbo.FuelSurcharge.[FuelSurchargeId] WH"& _ 
            "ERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_"& _ 
            "new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT "& _ 
            "<> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'db"& _ 
            "o.FuelSurcharge')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change T"& _ 
            "racking has cleaned up tracking information for table ''%s''. To recover from th"& _ 
            "is error, the client must reinitialize its local database and try again',16,3,N'"& _ 
            "dbo.FuelSurcharge')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'FuelSurchargeSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[FuelSurchargeId] FROM CHANGETABLE(CHAN"& _ 
            "GES dbo.FuelSurcharge, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERA"& _ 
            "TION = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CH"& _ 
            "ANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CH"& _ 
            "ANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.FuelSurcharge')) > @sync_last_re"& _ 
            "ceived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking in"& _ 
            "formation for table ''%s''. To recover from this error, the client must reinitia"& _ 
            "lize its local database and try again',16,3,N'dbo.FuelSurcharge')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'FuelSurchargeSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.FuelSurcharge.[FuelSurchargeId], [Orig"& _ 
            "inGroupId], [DestinationGroupId], [Amount], [IsVatable], [Description], [Effecti"& _ 
            "veDate], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus"& _ 
            "] FROM dbo.FuelSurcharge JOIN CHANGETABLE(CHANGES dbo.FuelSurcharge, @sync_last_"& _ 
            "received_anchor) CT ON CT.[FuelSurchargeId] = dbo.FuelSurcharge.[FuelSurchargeId"& _ 
            "] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_re"& _ 
            "ceived_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sy"& _ 
            "nc_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Fuel"& _ 
            "Surcharge')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Trackin"& _ 
            "g has cleaned up tracking information for table ''%s''. To recover from this err"& _ 
            "or, the client must reinitialize its local database and try again',16,3,N'dbo.Fu"& _ 
            "elSurcharge')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "FuelSurcharge"
    End Sub
End Class

Partial Public Class GoodsDescriptionSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'GoodsDescriptionSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.GoodsDescr"& _ 
            "iption ([GoodsDescriptionId], [GoodsDescriptionName], [CreatedBy], [CreatedDate]"& _ 
            ", [ModifiedBy], [ModifiedDate], [RecordStatus]) VALUES (@GoodsDescriptionId, @Go"& _ 
            "odsDescriptionName, @CreatedBy, @CreatedDate, @ModifiedBy, @ModifiedDate, @Recor"& _ 
            "dStatus) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION("& _ 
            "object_id(N'dbo.GoodsDescription')) > @sync_last_received_anchor RAISERROR (N'SQ"& _ 
            "L Server Change Tracking has cleaned up tracking information for table ''%s''. T"& _ 
            "o recover from this error, the client must reinitialize its local database and t"& _ 
            "ry again',16,3,N'dbo.GoodsDescription') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GoodsDescriptionId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GoodsDescriptionName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'GoodsDescriptionSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.GoodsDescriptio"& _ 
            "n FROM dbo.GoodsDescription JOIN CHANGETABLE(VERSION dbo.GoodsDescription, ([Goo"& _ 
            "dsDescriptionId]), (@GoodsDescriptionId)) CT  ON CT.[GoodsDescriptionId] = dbo.G"& _ 
            "oodsDescription.[GoodsDescriptionId] WHERE (@sync_force_write = 1 OR CT.SYS_CHAN"& _ 
            "GE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT"& _ 
            ".SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_bina"& _ 
            "ry)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(obje"& _ 
            "ct_id(N'dbo.GoodsDescription')) > @sync_last_received_anchor RAISERROR (N'SQL Se"& _ 
            "rver Change Tracking has cleaned up tracking information for table ''%s''. To re"& _ 
            "cover from this error, the client must reinitialize its local database and try a"& _ 
            "gain',16,3,N'dbo.GoodsDescription') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GoodsDescriptionId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'GoodsDescriptionSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.GoodsDescriptio"& _ 
            "n SET [GoodsDescriptionName] = @GoodsDescriptionName, [CreatedBy] = @CreatedBy, "& _ 
            "[CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @Modi"& _ 
            "fiedDate, [RecordStatus] = @RecordStatus FROM dbo.GoodsDescription  JOIN CHANGET"& _ 
            "ABLE(VERSION dbo.GoodsDescription, ([GoodsDescriptionId]), (@GoodsDescriptionId)"& _ 
            ") CT  ON CT.[GoodsDescriptionId] = dbo.GoodsDescription.[GoodsDescriptionId] WHE"& _ 
            "RE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERS"& _ 
            "ION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.S"& _ 
            "YS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; I"& _ 
            "F CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.GoodsDescription')) > @sync_"& _ 
            "last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up trac"& _ 
            "king information for table ''%s''. To recover from this error, the client must r"& _ 
            "einitialize its local database and try again',16,3,N'dbo.GoodsDescription') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GoodsDescriptionName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GoodsDescriptionId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'GoodsDescriptionSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[GoodsDescriptionId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM"& _ 
            " CHANGETABLE(CHANGES dbo.GoodsDescription, @sync_last_received_anchor) CT WHERE "& _ 
            "(CT.[GoodsDescriptionId] = @GoodsDescriptionId AND CT.SYS_CHANGE_OPERATION = 'D'"& _ 
            ")"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GoodsDescriptionId", System.Data.SqlDbType.UniqueIdentifier))
        'GoodsDescriptionSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.GoodsDescription.[GoodsDescriptionId], [GoodsDescriptionName], [Create"& _ 
            "dBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE"& _ 
            "_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.GoodsDescription JOIN CHANGETABLE(VERSI"& _ 
            "ON dbo.GoodsDescription, ([GoodsDescriptionId]), (@GoodsDescriptionId)) CT  ON C"& _ 
            "T.[GoodsDescriptionId] = dbo.GoodsDescription.[GoodsDescriptionId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GoodsDescriptionId", System.Data.SqlDbType.UniqueIdentifier))
        'GoodsDescriptionSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.GoodsDescription.[GoodsDescriptionId], [Goods"& _ 
            "DescriptionName], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [Rec"& _ 
            "ordStatus] FROM dbo.GoodsDescription LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.Goo"& _ 
            "dsDescription, @sync_last_received_anchor) CT ON CT.[GoodsDescriptionId] = dbo.G"& _ 
            "oodsDescription.[GoodsDescriptionId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT."& _ 
            "SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.GoodsDescri"& _ 
            "ption.[GoodsDescriptionId], [GoodsDescriptionName], [CreatedBy], [CreatedDate], "& _ 
            "[ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.GoodsDescription JOIN CHAN"& _ 
            "GETABLE(CHANGES dbo.GoodsDescription, @sync_last_received_anchor) CT ON CT.[Good"& _ 
            "sDescriptionId] = dbo.GoodsDescription.[GoodsDescriptionId] WHERE (CT.SYS_CHANGE"& _ 
            "_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_ancho"& _ 
            "r AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id"& _ 
            "_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.GoodsDescription"& _ 
            "')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cle"& _ 
            "aned up tracking information for table ''%s''. To recover from this error, the c"& _ 
            "lient must reinitialize its local database and try again',16,3,N'dbo.GoodsDescri"& _ 
            "ption')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'GoodsDescriptionSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[GoodsDescriptionId] FROM CHANGETABLE(C"& _ 
            "HANGES dbo.GoodsDescription, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE"& _ 
            "_OPERATION = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT."& _ 
            "SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary));"& _ 
            " IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.GoodsDescription')) > @syn"& _ 
            "c_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tr"& _ 
            "acking information for table ''%s''. To recover from this error, the client must"& _ 
            " reinitialize its local database and try again',16,3,N'dbo.GoodsDescription')  E"& _ 
            "ND "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'GoodsDescriptionSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.GoodsDescription.[GoodsDescriptionId],"& _ 
            " [GoodsDescriptionName], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate"& _ 
            "], [RecordStatus] FROM dbo.GoodsDescription JOIN CHANGETABLE(CHANGES dbo.GoodsDe"& _ 
            "scription, @sync_last_received_anchor) CT ON CT.[GoodsDescriptionId] = dbo.Goods"& _ 
            "Description.[GoodsDescriptionId] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS"& _ 
            "_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL "& _ 
            "OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VAL"& _ 
            "ID_VERSION(object_id(N'dbo.GoodsDescription')) > @sync_last_received_anchor RAIS"& _ 
            "ERROR (N'SQL Server Change Tracking has cleaned up tracking information for tabl"& _ 
            "e ''%s''. To recover from this error, the client must reinitialize its local dat"& _ 
            "abase and try again',16,3,N'dbo.GoodsDescription')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "GoodsDescription"
    End Sub
End Class

Partial Public Class PackageNumberSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'PackageNumberSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.PackageNum"& _ 
            "ber ([PackageNumberId], [ShipmentId], [PackageNo], [ScannedById], [CreatedBy], ["& _ 
            "CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], [ScannedDate]) VALUE"& _ 
            "S (@PackageNumberId, @ShipmentId, @PackageNo, @ScannedById, @CreatedBy, @Created"& _ 
            "Date, @ModifiedBy, @ModifiedDate, @RecordStatus, @ScannedDate) SET @sync_row_cou"& _ 
            "nt = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.PackageNum"& _ 
            "ber')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has "& _ 
            "cleaned up tracking information for table ''%s''. To recover from this error, th"& _ 
            "e client must reinitialize its local database and try again',16,3,N'dbo.PackageN"& _ 
            "umber') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackageNumberId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackageNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ScannedById", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ScannedDate", System.Data.SqlDbType.DateTime))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'PackageNumberSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.PackageNumber F"& _ 
            "ROM dbo.PackageNumber JOIN CHANGETABLE(VERSION dbo.PackageNumber, ([PackageNumbe"& _ 
            "rId]), (@PackageNumberId)) CT  ON CT.[PackageNumberId] = dbo.PackageNumber.[Pack"& _ 
            "ageNumberId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT"& _ 
            ".SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS N"& _ 
            "OT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count"& _ 
            " = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.PackageNumbe"& _ 
            "r')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cl"& _ 
            "eaned up tracking information for table ''%s''. To recover from this error, the "& _ 
            "client must reinitialize its local database and try again',16,3,N'dbo.PackageNum"& _ 
            "ber') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackageNumberId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'PackageNumberSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.PackageNumber S"& _ 
            "ET [ShipmentId] = @ShipmentId, [PackageNo] = @PackageNo, [ScannedById] = @Scanne"& _ 
            "dById, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @M"& _ 
            "odifiedBy, [ModifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus, [Scan"& _ 
            "nedDate] = @ScannedDate FROM dbo.PackageNumber  JOIN CHANGETABLE(VERSION dbo.Pac"& _ 
            "kageNumber, ([PackageNumberId]), (@PackageNumberId)) CT  ON CT.[PackageNumberId]"& _ 
            " = dbo.PackageNumber.[PackageNumberId] WHERE (@sync_force_write = 1 OR CT.SYS_CH"& _ 
            "ANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR ("& _ 
            "CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_bi"& _ 
            "nary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(ob"& _ 
            "ject_id(N'dbo.PackageNumber')) > @sync_last_received_anchor RAISERROR (N'SQL Ser"& _ 
            "ver Change Tracking has cleaned up tracking information for table ''%s''. To rec"& _ 
            "over from this error, the client must reinitialize its local database and try ag"& _ 
            "ain',16,3,N'dbo.PackageNumber') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackageNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ScannedById", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ScannedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackageNumberId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'PackageNumberSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[PackageNumberId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CH"& _ 
            "ANGETABLE(CHANGES dbo.PackageNumber, @sync_last_received_anchor) CT WHERE (CT.[P"& _ 
            "ackageNumberId] = @PackageNumberId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackageNumberId", System.Data.SqlDbType.UniqueIdentifier))
        'PackageNumberSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.PackageNumber.[PackageNumberId], [ShipmentId], [PackageNo], [ScannedBy"& _ 
            "Id], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], ["& _ 
            "ScannedDate], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.PackageNumbe"& _ 
            "r JOIN CHANGETABLE(VERSION dbo.PackageNumber, ([PackageNumberId]), (@PackageNumb"& _ 
            "erId)) CT  ON CT.[PackageNumberId] = dbo.PackageNumber.[PackageNumberId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackageNumberId", System.Data.SqlDbType.UniqueIdentifier))
        'PackageNumberSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.PackageNumber.[PackageNumberId], [ShipmentId]"& _ 
            ", [PackageNo], [ScannedById], [CreatedBy], [CreatedDate], [ModifiedBy], [Modifie"& _ 
            "dDate], [RecordStatus], [ScannedDate] FROM dbo.PackageNumber LEFT OUTER JOIN CHA"& _ 
            "NGETABLE(CHANGES dbo.PackageNumber, @sync_last_received_anchor) CT ON CT.[Packag"& _ 
            "eNumberId] = dbo.PackageNumber.[PackageNumberId] WHERE (CT.SYS_CHANGE_CONTEXT IS"& _ 
            " NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT dbo"& _ 
            ".PackageNumber.[PackageNumberId], [ShipmentId], [PackageNo], [ScannedById], [Cre"& _ 
            "atedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], [ScannedDa"& _ 
            "te] FROM dbo.PackageNumber JOIN CHANGETABLE(CHANGES dbo.PackageNumber, @sync_las"& _ 
            "t_received_anchor) CT ON CT.[PackageNumberId] = dbo.PackageNumber.[PackageNumber"& _ 
            "Id] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= "& _ 
            "@sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CO"& _ 
            "NTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_i"& _ 
            "d(N'dbo.PackageNumber')) > @sync_last_received_anchor RAISERROR (N'SQL Server Ch"& _ 
            "ange Tracking has cleaned up tracking information for table ''%s''. To recover f"& _ 
            "rom this error, the client must reinitialize its local database and try again',1"& _ 
            "6,3,N'dbo.PackageNumber')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'PackageNumberSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[PackageNumberId] FROM CHANGETABLE(CHAN"& _ 
            "GES dbo.PackageNumber, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERA"& _ 
            "TION = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CH"& _ 
            "ANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CH"& _ 
            "ANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.PackageNumber')) > @sync_last_re"& _ 
            "ceived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking in"& _ 
            "formation for table ''%s''. To recover from this error, the client must reinitia"& _ 
            "lize its local database and try again',16,3,N'dbo.PackageNumber')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'PackageNumberSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.PackageNumber.[PackageNumberId], [Ship"& _ 
            "mentId], [PackageNo], [ScannedById], [CreatedBy], [CreatedDate], [ModifiedBy], ["& _ 
            "ModifiedDate], [RecordStatus], [ScannedDate] FROM dbo.PackageNumber JOIN CHANGET"& _ 
            "ABLE(CHANGES dbo.PackageNumber, @sync_last_received_anchor) CT ON CT.[PackageNum"& _ 
            "berId] = dbo.PackageNumber.[PackageNumberId] WHERE (CT.SYS_CHANGE_OPERATION = 'U"& _ 
            "' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONT"& _ 
            "EXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRAC"& _ 
            "KING_MIN_VALID_VERSION(object_id(N'dbo.PackageNumber')) > @sync_last_received_an"& _ 
            "chor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information"& _ 
            " for table ''%s''. To recover from this error, the client must reinitialize its "& _ 
            "local database and try again',16,3,N'dbo.PackageNumber')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "PackageNumber"
    End Sub
End Class

Partial Public Class PackagingSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'PackagingSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Packaging "& _ 
            "([PackagingId], [PackagingName], [Multiplier], [BaseMinimum], [BaseMaximum], [Ba"& _ 
            "seFee], [ExcessCost], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], "& _ 
            "[RecordStatus]) VALUES (@PackagingId, @PackagingName, @Multiplier, @BaseMinimum,"& _ 
            " @BaseMaximum, @BaseFee, @ExcessCost, @CreatedBy, @CreatedDate, @ModifiedBy, @Mo"& _ 
            "difiedDate, @RecordStatus) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_"& _ 
            "MIN_VALID_VERSION(object_id(N'dbo.Packaging')) > @sync_last_received_anchor RAIS"& _ 
            "ERROR (N'SQL Server Change Tracking has cleaned up tracking information for tabl"& _ 
            "e ''%s''. To recover from this error, the client must reinitialize its local dat"& _ 
            "abase and try again',16,3,N'dbo.Packaging') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackagingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackagingName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Multiplier", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BaseMinimum", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BaseMaximum", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BaseFee", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ExcessCost", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'PackagingSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Packaging FROM "& _ 
            "dbo.Packaging JOIN CHANGETABLE(VERSION dbo.Packaging, ([PackagingId]), (@Packagi"& _ 
            "ngId)) CT  ON CT.[PackagingId] = dbo.Packaging.[PackagingId] WHERE (@sync_force_"& _ 
            "write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_las"& _ 
            "t_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEX"& _ 
            "T = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKIN"& _ 
            "G_MIN_VALID_VERSION(object_id(N'dbo.Packaging')) > @sync_last_received_anchor RA"& _ 
            "ISERROR (N'SQL Server Change Tracking has cleaned up tracking information for ta"& _ 
            "ble ''%s''. To recover from this error, the client must reinitialize its local d"& _ 
            "atabase and try again',16,3,N'dbo.Packaging') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackagingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'PackagingSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Packaging SET ["& _ 
            "PackagingName] = @PackagingName, [Multiplier] = @Multiplier, [BaseMinimum] = @Ba"& _ 
            "seMinimum, [BaseMaximum] = @BaseMaximum, [BaseFee] = @BaseFee, [ExcessCost] = @E"& _ 
            "xcessCost, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] "& _ 
            "= @ModifiedBy, [ModifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus FR"& _ 
            "OM dbo.Packaging  JOIN CHANGETABLE(VERSION dbo.Packaging, ([PackagingId]), (@Pac"& _ 
            "kagingId)) CT  ON CT.[PackagingId] = dbo.Packaging.[PackagingId] WHERE (@sync_fo"& _ 
            "rce_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync"& _ 
            "_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CO"& _ 
            "NTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRA"& _ 
            "CKING_MIN_VALID_VERSION(object_id(N'dbo.Packaging')) > @sync_last_received_ancho"& _ 
            "r RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information fo"& _ 
            "r table ''%s''. To recover from this error, the client must reinitialize its loc"& _ 
            "al database and try again',16,3,N'dbo.Packaging') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackagingName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Multiplier", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BaseMinimum", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BaseMaximum", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BaseFee", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ExcessCost", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackagingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'PackagingSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[PackagingId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGE"& _ 
            "TABLE(CHANGES dbo.Packaging, @sync_last_received_anchor) CT WHERE (CT.[Packaging"& _ 
            "Id] = @PackagingId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackagingId", System.Data.SqlDbType.UniqueIdentifier))
        'PackagingSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.Packaging.[PackagingId], [PackagingName], [Multiplier], [BaseMinimum],"& _ 
            " [BaseMaximum], [BaseFee], [ExcessCost], [CreatedBy], [CreatedDate], [ModifiedBy"& _ 
            "], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION "& _ 
            "FROM dbo.Packaging JOIN CHANGETABLE(VERSION dbo.Packaging, ([PackagingId]), (@Pa"& _ 
            "ckagingId)) CT  ON CT.[PackagingId] = dbo.Packaging.[PackagingId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackagingId", System.Data.SqlDbType.UniqueIdentifier))
        'PackagingSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.Packaging.[PackagingId], [PackagingName], [Mu"& _ 
            "ltiplier], [BaseMinimum], [BaseMaximum], [BaseFee], [ExcessCost], [CreatedBy], ["& _ 
            "CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.Packaging LE"& _ 
            "FT OUTER JOIN CHANGETABLE(CHANGES dbo.Packaging, @sync_last_received_anchor) CT "& _ 
            "ON CT.[PackagingId] = dbo.Packaging.[PackagingId] WHERE (CT.SYS_CHANGE_CONTEXT I"& _ 
            "S NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT db"& _ 
            "o.Packaging.[PackagingId], [PackagingName], [Multiplier], [BaseMinimum], [BaseMa"& _ 
            "ximum], [BaseFee], [ExcessCost], [CreatedBy], [CreatedDate], [ModifiedBy], [Modi"& _ 
            "fiedDate], [RecordStatus] FROM dbo.Packaging JOIN CHANGETABLE(CHANGES dbo.Packag"& _ 
            "ing, @sync_last_received_anchor) CT ON CT.[PackagingId] = dbo.Packaging.[Packagi"& _ 
            "ngId] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <"& _ 
            "= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_"& _ 
            "CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object"& _ 
            "_id(N'dbo.Packaging')) > @sync_last_received_anchor RAISERROR (N'SQL Server Chan"& _ 
            "ge Tracking has cleaned up tracking information for table ''%s''. To recover fro"& _ 
            "m this error, the client must reinitialize its local database and try again',16,"& _ 
            "3,N'dbo.Packaging')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'PackagingSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[PackagingId] FROM CHANGETABLE(CHANGES "& _ 
            "dbo.Packaging, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = '"& _ 
            "D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CON"& _ 
            "TEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRA"& _ 
            "CKING_MIN_VALID_VERSION(object_id(N'dbo.Packaging')) > @sync_last_received_ancho"& _ 
            "r RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information fo"& _ 
            "r table ''%s''. To recover from this error, the client must reinitialize its loc"& _ 
            "al database and try again',16,3,N'dbo.Packaging')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'PackagingSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.Packaging.[PackagingId], [PackagingNam"& _ 
            "e], [Multiplier], [BaseMinimum], [BaseMaximum], [BaseFee], [ExcessCost], [Create"& _ 
            "dBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.Packa"& _ 
            "ging JOIN CHANGETABLE(CHANGES dbo.Packaging, @sync_last_received_anchor) CT ON C"& _ 
            "T.[PackagingId] = dbo.Packaging.[PackagingId] WHERE (CT.SYS_CHANGE_OPERATION = '"& _ 
            "U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CON"& _ 
            "TEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRA"& _ 
            "CKING_MIN_VALID_VERSION(object_id(N'dbo.Packaging')) > @sync_last_received_ancho"& _ 
            "r RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information fo"& _ 
            "r table ''%s''. To recover from this error, the client must reinitialize its loc"& _ 
            "al database and try again',16,3,N'dbo.Packaging')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Packaging"
    End Sub
End Class

Partial Public Class PaymentSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'PaymentSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Payment (["& _ 
            "PaymentId], [ShipmentId], [PaymentDate], [OrNo], [Amount], [PaymentTypeId], [Che"& _ 
            "ckBankName], [CheckNo], [CheckDate], [ReceivedById], [VerifiedDate], [VerifiedBy"& _ 
            "Id], [Remarks], [StatementOfAccountPaymentId], [TaxWithheld], [CreatedBy], [Crea"& _ 
            "tedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], [PrNo]) VALUES (@Payment"& _ 
            "Id, @ShipmentId, @PaymentDate, @OrNo, @Amount, @PaymentTypeId, @CheckBankName, @"& _ 
            "CheckNo, @CheckDate, @ReceivedById, @VerifiedDate, @VerifiedById, @Remarks, @Sta"& _ 
            "tementOfAccountPaymentId, @TaxWithheld, @CreatedBy, @CreatedDate, @ModifiedBy, @"& _ 
            "ModifiedDate, @RecordStatus, @PrNo) SET @sync_row_count = @@rowcount; IF CHANGE_"& _ 
            "TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Payment')) > @sync_last_received_anch"& _ 
            "or RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information f"& _ 
            "or table ''%s''. To recover from this error, the client must reinitialize its lo"& _ 
            "cal database and try again',16,3,N'dbo.Payment') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OrNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Amount", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CheckBankName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CheckNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CheckDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ReceivedById", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@VerifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@VerifiedById", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountPaymentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TaxWithheld", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PrNo", System.Data.SqlDbType.NVarChar))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'PaymentSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Payment FROM db"& _ 
            "o.Payment JOIN CHANGETABLE(VERSION dbo.Payment, ([PaymentId]), (@PaymentId)) CT "& _ 
            " ON CT.[PaymentId] = dbo.Payment.[PaymentId] WHERE (@sync_force_write = 1 OR CT."& _ 
            "SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_ancho"& _ 
            "r OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client"& _ 
            "_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERS"& _ 
            "ION(object_id(N'dbo.Payment')) > @sync_last_received_anchor RAISERROR (N'SQL Ser"& _ 
            "ver Change Tracking has cleaned up tracking information for table ''%s''. To rec"& _ 
            "over from this error, the client must reinitialize its local database and try ag"& _ 
            "ain',16,3,N'dbo.Payment') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'PaymentSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Payment SET [Sh"& _ 
            "ipmentId] = @ShipmentId, [PaymentDate] = @PaymentDate, [OrNo] = @OrNo, [Amount] "& _ 
            "= @Amount, [PaymentTypeId] = @PaymentTypeId, [CheckBankName] = @CheckBankName, ["& _ 
            "CheckNo] = @CheckNo, [CheckDate] = @CheckDate, [ReceivedById] = @ReceivedById, ["& _ 
            "VerifiedDate] = @VerifiedDate, [VerifiedById] = @VerifiedById, [Remarks] = @Rema"& _ 
            "rks, [StatementOfAccountPaymentId] = @StatementOfAccountPaymentId, [TaxWithheld]"& _ 
            " = @TaxWithheld, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [Modifi"& _ 
            "edBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, [RecordStatus] = @RecordSta"& _ 
            "tus, [PrNo] = @PrNo FROM dbo.Payment  JOIN CHANGETABLE(VERSION dbo.Payment, ([Pa"& _ 
            "ymentId]), (@PaymentId)) CT  ON CT.[PaymentId] = dbo.Payment.[PaymentId] WHERE ("& _ 
            "@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION "& _ 
            "<= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_C"& _ 
            "HANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CH"& _ 
            "ANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Payment')) > @sync_last_received"& _ 
            "_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking informat"& _ 
            "ion for table ''%s''. To recover from this error, the client must reinitialize i"& _ 
            "ts local database and try again',16,3,N'dbo.Payment') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OrNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Amount", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CheckBankName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CheckNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CheckDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ReceivedById", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@VerifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@VerifiedById", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountPaymentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TaxWithheld", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PrNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'PaymentSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[PaymentId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETA"& _ 
            "BLE(CHANGES dbo.Payment, @sync_last_received_anchor) CT WHERE (CT.[PaymentId] = "& _ 
            "@PaymentId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentId", System.Data.SqlDbType.UniqueIdentifier))
        'PaymentSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.Payment.[PaymentId], [ShipmentId], [PaymentDate], [OrNo], [Amount], [P" & _
            "aymentTypeId], [CheckBankName], [CheckNo], [CheckDate], [ReceivedById], [Verifie" & _
            "dDate], [VerifiedById], [Remarks], [StatementOfAccountPaymentId], [TaxWithheld]," & _
            " [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], [PrNo" & _
            "], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.Payment JOIN CHANGETABL" & _
            "E(VERSION dbo.Payment, ([PaymentId]), (@PaymentId)) CT  ON CT.[PaymentId] = dbo." & _
            "Payment.[PaymentId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentId", System.Data.SqlDbType.UniqueIdentifier))
        'PaymentSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.Payment.[PaymentId], [ShipmentId], [PaymentDa"& _ 
            "te], [OrNo], [Amount], [PaymentTypeId], [CheckBankName], [CheckNo], [CheckDate],"& _ 
            " [ReceivedById], [VerifiedDate], [VerifiedById], [Remarks], [StatementOfAccountP"& _ 
            "aymentId], [TaxWithheld], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDat"& _ 
            "e], [RecordStatus], [PrNo] FROM dbo.Payment LEFT OUTER JOIN CHANGETABLE(CHANGES "& _ 
            "dbo.Payment, @sync_last_received_anchor) CT ON CT.[PaymentId] = dbo.Payment.[Pay"& _ 
            "mentId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_c"& _ 
            "lient_id_binary) ELSE  BEGIN SELECT dbo.Payment.[PaymentId], [ShipmentId], [Paym"& _ 
            "entDate], [OrNo], [Amount], [PaymentTypeId], [CheckBankName], [CheckNo], [CheckD"& _ 
            "ate], [ReceivedById], [VerifiedDate], [VerifiedById], [Remarks], [StatementOfAcc"& _ 
            "ountPaymentId], [TaxWithheld], [CreatedBy], [CreatedDate], [ModifiedBy], [Modifi"& _ 
            "edDate], [RecordStatus], [PrNo] FROM dbo.Payment JOIN CHANGETABLE(CHANGES dbo.Pa"& _ 
            "yment, @sync_last_received_anchor) CT ON CT.[PaymentId] = dbo.Payment.[PaymentId"& _ 
            "] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @s"& _ 
            "ync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONT"& _ 
            "EXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id("& _ 
            "N'dbo.Payment')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tra"& _ 
            "cking has cleaned up tracking information for table ''%s''. To recover from this"& _ 
            " error, the client must reinitialize its local database and try again',16,3,N'db"& _ 
            "o.Payment')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'PaymentSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[PaymentId] FROM CHANGETABLE(CHANGES db"& _ 
            "o.Payment, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D' A"& _ 
            "ND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT"& _ 
            " IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKIN"& _ 
            "G_MIN_VALID_VERSION(object_id(N'dbo.Payment')) > @sync_last_received_anchor RAIS"& _ 
            "ERROR (N'SQL Server Change Tracking has cleaned up tracking information for tabl"& _ 
            "e ''%s''. To recover from this error, the client must reinitialize its local dat"& _ 
            "abase and try again',16,3,N'dbo.Payment')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'PaymentSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.Payment.[PaymentId], [ShipmentId], [Pa"& _ 
            "ymentDate], [OrNo], [Amount], [PaymentTypeId], [CheckBankName], [CheckNo], [Chec"& _ 
            "kDate], [ReceivedById], [VerifiedDate], [VerifiedById], [Remarks], [StatementOfA"& _ 
            "ccountPaymentId], [TaxWithheld], [CreatedBy], [CreatedDate], [ModifiedBy], [Modi"& _ 
            "fiedDate], [RecordStatus], [PrNo] FROM dbo.Payment JOIN CHANGETABLE(CHANGES dbo."& _ 
            "Payment, @sync_last_received_anchor) CT ON CT.[PaymentId] = dbo.Payment.[Payment"& _ 
            "Id] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_"& _ 
            "received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @"& _ 
            "sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Pa"& _ 
            "yment')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking ha"& _ 
            "s cleaned up tracking information for table ''%s''. To recover from this error, "& _ 
            "the client must reinitialize its local database and try again',16,3,N'dbo.Paymen"& _ 
            "t')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Payment"
    End Sub
End Class

Partial Public Class PaymentModeSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'PaymentModeSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.PaymentMod"& _ 
            "e ([PaymentModeId], [PaymentModeCode], [PaymentModeName], [ListOrder], [CreatedB"& _ 
            "y], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus]) VALUES (@Paymen"& _ 
            "tModeId, @PaymentModeCode, @PaymentModeName, @ListOrder, @CreatedBy, @CreatedDat"& _ 
            "e, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_row_count = @@rowcount; "& _ 
            "IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.PaymentMode')) > @sync_last"& _ 
            "_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking"& _ 
            " information for table ''%s''. To recover from this error, the client must reini"& _ 
            "tialize its local database and try again',16,3,N'dbo.PaymentMode') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentModeCode", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentModeName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'PaymentModeSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.PaymentMode FRO"& _ 
            "M dbo.PaymentMode JOIN CHANGETABLE(VERSION dbo.PaymentMode, ([PaymentModeId]), ("& _ 
            "@PaymentModeId)) CT  ON CT.[PaymentModeId] = dbo.PaymentMode.[PaymentModeId] WHE"& _ 
            "RE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERS"& _ 
            "ION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.S"& _ 
            "YS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; I"& _ 
            "F CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.PaymentMode')) > @sync_last_"& _ 
            "received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking "& _ 
            "information for table ''%s''. To recover from this error, the client must reinit"& _ 
            "ialize its local database and try again',16,3,N'dbo.PaymentMode') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'PaymentModeSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.PaymentMode SET"& _ 
            " [PaymentModeCode] = @PaymentModeCode, [PaymentModeName] = @PaymentModeName, [Li"& _ 
            "stOrder] = @ListOrder, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, ["& _ 
            "ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, [RecordStatus] = @Rec"& _ 
            "ordStatus FROM dbo.PaymentMode  JOIN CHANGETABLE(VERSION dbo.PaymentMode, ([Paym"& _ 
            "entModeId]), (@PaymentModeId)) CT  ON CT.[PaymentModeId] = dbo.PaymentMode.[Paym"& _ 
            "entModeId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.S"& _ 
            "YS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT"& _ 
            " NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count ="& _ 
            " @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.PaymentMode'))"& _ 
            " > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleane"& _ 
            "d up tracking information for table ''%s''. To recover from this error, the clie"& _ 
            "nt must reinitialize its local database and try again',16,3,N'dbo.PaymentMode') "& _ 
            ""
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentModeCode", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentModeName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'PaymentModeSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[PaymentModeId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHAN"& _ 
            "GETABLE(CHANGES dbo.PaymentMode, @sync_last_received_anchor) CT WHERE (CT.[Payme"& _ 
            "ntModeId] = @PaymentModeId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentModeId", System.Data.SqlDbType.UniqueIdentifier))
        'PaymentModeSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.PaymentMode.[PaymentModeId], [PaymentModeCode], [PaymentModeName], [Li"& _ 
            "stOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatu"& _ 
            "s], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.PaymentMode JOIN CHANG"& _ 
            "ETABLE(VERSION dbo.PaymentMode, ([PaymentModeId]), (@PaymentModeId)) CT  ON CT.["& _ 
            "PaymentModeId] = dbo.PaymentMode.[PaymentModeId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentModeId", System.Data.SqlDbType.UniqueIdentifier))
        'PaymentModeSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.PaymentMode.[PaymentModeId], [PaymentModeCode"& _ 
            "], [PaymentModeName], [ListOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [Mo"& _ 
            "difiedDate], [RecordStatus] FROM dbo.PaymentMode LEFT OUTER JOIN CHANGETABLE(CHA"& _ 
            "NGES dbo.PaymentMode, @sync_last_received_anchor) CT ON CT.[PaymentModeId] = dbo"& _ 
            ".PaymentMode.[PaymentModeId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHAN"& _ 
            "GE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.PaymentMode.[Paymen"& _ 
            "tModeId], [PaymentModeCode], [PaymentModeName], [ListOrder], [CreatedBy], [Creat"& _ 
            "edDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.PaymentMode JOIN "& _ 
            "CHANGETABLE(CHANGES dbo.PaymentMode, @sync_last_received_anchor) CT ON CT.[Payme"& _ 
            "ntModeId] = dbo.PaymentMode.[PaymentModeId] WHERE (CT.SYS_CHANGE_OPERATION = 'I'"& _ 
            " AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anchor AND (CT.SYS_CH"& _ 
            "ANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CH"& _ 
            "ANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.PaymentMode')) > @sync_last_rece"& _ 
            "ived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking info"& _ 
            "rmation for table ''%s''. To recover from this error, the client must reinitiali"& _ 
            "ze its local database and try again',16,3,N'dbo.PaymentMode')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'PaymentModeSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[PaymentModeId] FROM CHANGETABLE(CHANGE"& _ 
            "S dbo.PaymentMode, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION"& _ 
            " = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE"& _ 
            "_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE"& _ 
            "_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.PaymentMode')) > @sync_last_received"& _ 
            "_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking informat"& _ 
            "ion for table ''%s''. To recover from this error, the client must reinitialize i"& _ 
            "ts local database and try again',16,3,N'dbo.PaymentMode')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'PaymentModeSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.PaymentMode.[PaymentModeId], [PaymentM"& _ 
            "odeCode], [PaymentModeName], [ListOrder], [CreatedBy], [CreatedDate], [ModifiedB"& _ 
            "y], [ModifiedDate], [RecordStatus] FROM dbo.PaymentMode JOIN CHANGETABLE(CHANGES"& _ 
            " dbo.PaymentMode, @sync_last_received_anchor) CT ON CT.[PaymentModeId] = dbo.Pay"& _ 
            "mentMode.[PaymentModeId] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_"& _ 
            "VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SY"& _ 
            "S_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSI"& _ 
            "ON(object_id(N'dbo.PaymentMode')) > @sync_last_received_anchor RAISERROR (N'SQL "& _ 
            "Server Change Tracking has cleaned up tracking information for table ''%s''. To "& _ 
            "recover from this error, the client must reinitialize its local database and try"& _ 
            " again',16,3,N'dbo.PaymentMode')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "PaymentMode"
    End Sub
End Class

Partial Public Class PaymentTermSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'PaymentTermSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.PaymentTer"& _ 
            "m ([PaymentTermId], [PaymentTermName], [NumberOfDays], [Description], [ListOrder"& _ 
            "], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus]) VAL"& _ 
            "UES (@PaymentTermId, @PaymentTermName, @NumberOfDays, @Description, @ListOrder, "& _ 
            "@CreatedBy, @CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_r"& _ 
            "ow_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Paym"& _ 
            "entTerm')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking "& _ 
            "has cleaned up tracking information for table ''%s''. To recover from this error"& _ 
            ", the client must reinitialize its local database and try again',16,3,N'dbo.Paym"& _ 
            "entTerm') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTermId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTermName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@NumberOfDays", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'PaymentTermSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.PaymentTerm FRO"& _ 
            "M dbo.PaymentTerm JOIN CHANGETABLE(VERSION dbo.PaymentTerm, ([PaymentTermId]), ("& _ 
            "@PaymentTermId)) CT  ON CT.[PaymentTermId] = dbo.PaymentTerm.[PaymentTermId] WHE"& _ 
            "RE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERS"& _ 
            "ION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.S"& _ 
            "YS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; I"& _ 
            "F CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.PaymentTerm')) > @sync_last_"& _ 
            "received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking "& _ 
            "information for table ''%s''. To recover from this error, the client must reinit"& _ 
            "ialize its local database and try again',16,3,N'dbo.PaymentTerm') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTermId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'PaymentTermSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.PaymentTerm SET"& _ 
            " [PaymentTermName] = @PaymentTermName, [NumberOfDays] = @NumberOfDays, [Descript"& _ 
            "ion] = @Description, [ListOrder] = @ListOrder, [CreatedBy] = @CreatedBy, [Create"& _ 
            "dDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDat"& _ 
            "e, [RecordStatus] = @RecordStatus FROM dbo.PaymentTerm  JOIN CHANGETABLE(VERSION"& _ 
            " dbo.PaymentTerm, ([PaymentTermId]), (@PaymentTermId)) CT  ON CT.[PaymentTermId]"& _ 
            " = dbo.PaymentTerm.[PaymentTermId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE"& _ 
            "_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.S"& _ 
            "YS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary"& _ 
            ")) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object"& _ 
            "_id(N'dbo.PaymentTerm')) > @sync_last_received_anchor RAISERROR (N'SQL Server Ch"& _ 
            "ange Tracking has cleaned up tracking information for table ''%s''. To recover f"& _ 
            "rom this error, the client must reinitialize its local database and try again',1"& _ 
            "6,3,N'dbo.PaymentTerm') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTermName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@NumberOfDays", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTermId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'PaymentTermSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[PaymentTermId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHAN"& _ 
            "GETABLE(CHANGES dbo.PaymentTerm, @sync_last_received_anchor) CT WHERE (CT.[Payme"& _ 
            "ntTermId] = @PaymentTermId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTermId", System.Data.SqlDbType.UniqueIdentifier))
        'PaymentTermSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.PaymentTerm.[PaymentTermId], [PaymentTermName], [NumberOfDays], [Descr"& _ 
            "iption], [ListOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], "& _ 
            "[RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.PaymentTer"& _ 
            "m JOIN CHANGETABLE(VERSION dbo.PaymentTerm, ([PaymentTermId]), (@PaymentTermId))"& _ 
            " CT  ON CT.[PaymentTermId] = dbo.PaymentTerm.[PaymentTermId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTermId", System.Data.SqlDbType.UniqueIdentifier))
        'PaymentTermSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.PaymentTerm.[PaymentTermId], [PaymentTermName"& _ 
            "], [NumberOfDays], [Description], [ListOrder], [CreatedBy], [CreatedDate], [Modi"& _ 
            "fiedBy], [ModifiedDate], [RecordStatus] FROM dbo.PaymentTerm LEFT OUTER JOIN CHA"& _ 
            "NGETABLE(CHANGES dbo.PaymentTerm, @sync_last_received_anchor) CT ON CT.[PaymentT"& _ 
            "ermId] = dbo.PaymentTerm.[PaymentTermId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR"& _ 
            " CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.Payment"& _ 
            "Term.[PaymentTermId], [PaymentTermName], [NumberOfDays], [Description], [ListOrd"& _ 
            "er], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FR"& _ 
            "OM dbo.PaymentTerm JOIN CHANGETABLE(CHANGES dbo.PaymentTerm, @sync_last_received"& _ 
            "_anchor) CT ON CT.[PaymentTermId] = dbo.PaymentTerm.[PaymentTermId] WHERE (CT.SY"& _ 
            "S_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_receiv"& _ 
            "ed_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_c"& _ 
            "lient_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.PaymentT"& _ 
            "erm')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has "& _ 
            "cleaned up tracking information for table ''%s''. To recover from this error, th"& _ 
            "e client must reinitialize its local database and try again',16,3,N'dbo.PaymentT"& _ 
            "erm')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'PaymentTermSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[PaymentTermId] FROM CHANGETABLE(CHANGE"& _ 
            "S dbo.PaymentTerm, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION"& _ 
            " = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE"& _ 
            "_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE"& _ 
            "_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.PaymentTerm')) > @sync_last_received"& _ 
            "_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking informat"& _ 
            "ion for table ''%s''. To recover from this error, the client must reinitialize i"& _ 
            "ts local database and try again',16,3,N'dbo.PaymentTerm')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'PaymentTermSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.PaymentTerm.[PaymentTermId], [PaymentT"& _ 
            "ermName], [NumberOfDays], [Description], [ListOrder], [CreatedBy], [CreatedDate]"& _ 
            ", [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.PaymentTerm JOIN CHANGET"& _ 
            "ABLE(CHANGES dbo.PaymentTerm, @sync_last_received_anchor) CT ON CT.[PaymentTermI"& _ 
            "d] = dbo.PaymentTerm.[PaymentTermId] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT"& _ 
            ".SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS N"& _ 
            "ULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN"& _ 
            "_VALID_VERSION(object_id(N'dbo.PaymentTerm')) > @sync_last_received_anchor RAISE"& _ 
            "RROR (N'SQL Server Change Tracking has cleaned up tracking information for table"& _ 
            " ''%s''. To recover from this error, the client must reinitialize its local data"& _ 
            "base and try again',16,3,N'dbo.PaymentTerm')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "PaymentTerm"
    End Sub
End Class

Partial Public Class PaymentTypeSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'PaymentTypeSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.PaymentTyp"& _ 
            "e ([PaymentTypeId], [PaymentTypeName], [ListOrder], [CreatedBy], [CreatedDate], "& _ 
            "[ModifiedBy], [ModifiedDate], [RecordStatus]) VALUES (@PaymentTypeId, @PaymentTy"& _ 
            "peName, @ListOrder, @CreatedBy, @CreatedDate, @ModifiedBy, @ModifiedDate, @Recor"& _ 
            "dStatus) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION("& _ 
            "object_id(N'dbo.PaymentType')) > @sync_last_received_anchor RAISERROR (N'SQL Ser"& _ 
            "ver Change Tracking has cleaned up tracking information for table ''%s''. To rec"& _ 
            "over from this error, the client must reinitialize its local database and try ag"& _ 
            "ain',16,3,N'dbo.PaymentType') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTypeName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'PaymentTypeSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.PaymentType FRO"& _ 
            "M dbo.PaymentType JOIN CHANGETABLE(VERSION dbo.PaymentType, ([PaymentTypeId]), ("& _ 
            "@PaymentTypeId)) CT  ON CT.[PaymentTypeId] = dbo.PaymentType.[PaymentTypeId] WHE"& _ 
            "RE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERS"& _ 
            "ION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.S"& _ 
            "YS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; I"& _ 
            "F CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.PaymentType')) > @sync_last_"& _ 
            "received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking "& _ 
            "information for table ''%s''. To recover from this error, the client must reinit"& _ 
            "ialize its local database and try again',16,3,N'dbo.PaymentType') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'PaymentTypeSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.PaymentType SET"& _ 
            " [PaymentTypeName] = @PaymentTypeName, [ListOrder] = @ListOrder, [CreatedBy] = @"& _ 
            "CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDa"& _ 
            "te] = @ModifiedDate, [RecordStatus] = @RecordStatus FROM dbo.PaymentType  JOIN C"& _ 
            "HANGETABLE(VERSION dbo.PaymentType, ([PaymentTypeId]), (@PaymentTypeId)) CT  ON "& _ 
            "CT.[PaymentTypeId] = dbo.PaymentType.[PaymentTypeId] WHERE (@sync_force_write = "& _ 
            "1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_receiv"& _ 
            "ed_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @syn"& _ 
            "c_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VA"& _ 
            "LID_VERSION(object_id(N'dbo.PaymentType')) > @sync_last_received_anchor RAISERRO"& _ 
            "R (N'SQL Server Change Tracking has cleaned up tracking information for table ''"& _ 
            "%s''. To recover from this error, the client must reinitialize its local databas"& _ 
            "e and try again',16,3,N'dbo.PaymentType') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTypeName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'PaymentTypeSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[PaymentTypeId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHAN"& _ 
            "GETABLE(CHANGES dbo.PaymentType, @sync_last_received_anchor) CT WHERE (CT.[Payme"& _ 
            "ntTypeId] = @PaymentTypeId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTypeId", System.Data.SqlDbType.UniqueIdentifier))
        'PaymentTypeSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.PaymentType.[PaymentTypeId], [PaymentTypeName], [ListOrder], [CreatedB"& _ 
            "y], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_C"& _ 
            "ONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.PaymentType JOIN CHANGETABLE(VERSION dbo."& _ 
            "PaymentType, ([PaymentTypeId]), (@PaymentTypeId)) CT  ON CT.[PaymentTypeId] = db"& _ 
            "o.PaymentType.[PaymentTypeId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTypeId", System.Data.SqlDbType.UniqueIdentifier))
        'PaymentTypeSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.PaymentType.[PaymentTypeId], [PaymentTypeName"& _ 
            "], [ListOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [Recor"& _ 
            "dStatus] FROM dbo.PaymentType LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.PaymentTyp"& _ 
            "e, @sync_last_received_anchor) CT ON CT.[PaymentTypeId] = dbo.PaymentType.[Payme"& _ 
            "ntTypeId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync"& _ 
            "_client_id_binary) ELSE  BEGIN SELECT dbo.PaymentType.[PaymentTypeId], [PaymentT"& _ 
            "ypeName], [ListOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate],"& _ 
            " [RecordStatus] FROM dbo.PaymentType JOIN CHANGETABLE(CHANGES dbo.PaymentType, @"& _ 
            "sync_last_received_anchor) CT ON CT.[PaymentTypeId] = dbo.PaymentType.[PaymentTy"& _ 
            "peId] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <"& _ 
            "= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_"& _ 
            "CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object"& _ 
            "_id(N'dbo.PaymentType')) > @sync_last_received_anchor RAISERROR (N'SQL Server Ch"& _ 
            "ange Tracking has cleaned up tracking information for table ''%s''. To recover f"& _ 
            "rom this error, the client must reinitialize its local database and try again',1"& _ 
            "6,3,N'dbo.PaymentType')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'PaymentTypeSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[PaymentTypeId] FROM CHANGETABLE(CHANGE"& _ 
            "S dbo.PaymentType, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION"& _ 
            " = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE"& _ 
            "_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE"& _ 
            "_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.PaymentType')) > @sync_last_received"& _ 
            "_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking informat"& _ 
            "ion for table ''%s''. To recover from this error, the client must reinitialize i"& _ 
            "ts local database and try again',16,3,N'dbo.PaymentType')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'PaymentTypeSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.PaymentType.[PaymentTypeId], [PaymentT"& _ 
            "ypeName], [ListOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate],"& _ 
            " [RecordStatus] FROM dbo.PaymentType JOIN CHANGETABLE(CHANGES dbo.PaymentType, @"& _ 
            "sync_last_received_anchor) CT ON CT.[PaymentTypeId] = dbo.PaymentType.[PaymentTy"& _ 
            "peId] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_ne"& _ 
            "w_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <>"& _ 
            " @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo."& _ 
            "PaymentType')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Track"& _ 
            "ing has cleaned up tracking information for table ''%s''. To recover from this e"& _ 
            "rror, the client must reinitialize its local database and try again',16,3,N'dbo."& _ 
            "PaymentType')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "PaymentType"
    End Sub
End Class

Partial Public Class PositionSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'PositionSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Position ("& _ 
            "[PositionId], [PositionName], [CreatedBy], [CreatedDate], [ModifiedBy], [Modifie"& _ 
            "dDate], [RecordStatus]) VALUES (@PositionId, @PositionName, @CreatedBy, @Created"& _ 
            "Date, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_row_count = @@rowcoun"& _ 
            "t; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Position')) > @sync_last"& _ 
            "_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking"& _ 
            " information for table ''%s''. To recover from this error, the client must reini"& _ 
            "tialize its local database and try again',16,3,N'dbo.Position') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PositionId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PositionName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'PositionSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Position FROM d"& _ 
            "bo.Position JOIN CHANGETABLE(VERSION dbo.Position, ([PositionId]), (@PositionId)"& _ 
            ") CT  ON CT.[PositionId] = dbo.Position.[PositionId] WHERE (@sync_force_write = "& _ 
            "1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_receiv"& _ 
            "ed_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @syn"& _ 
            "c_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VA"& _ 
            "LID_VERSION(object_id(N'dbo.Position')) > @sync_last_received_anchor RAISERROR ("& _ 
            "N'SQL Server Change Tracking has cleaned up tracking information for table ''%s'"& _ 
            "'. To recover from this error, the client must reinitialize its local database a"& _ 
            "nd try again',16,3,N'dbo.Position') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PositionId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'PositionSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Position SET [P"& _ 
            "ositionName] = @PositionName, [CreatedBy] = @CreatedBy, [CreatedDate] = @Created"& _ 
            "Date, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, [RecordStatus]"& _ 
            " = @RecordStatus FROM dbo.Position  JOIN CHANGETABLE(VERSION dbo.Position, ([Pos"& _ 
            "itionId]), (@PositionId)) CT  ON CT.[PositionId] = dbo.Position.[PositionId] WHE"& _ 
            "RE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERS"& _ 
            "ION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.S"& _ 
            "YS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; I"& _ 
            "F CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Position')) > @sync_last_rec"& _ 
            "eived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking inf"& _ 
            "ormation for table ''%s''. To recover from this error, the client must reinitial"& _ 
            "ize its local database and try again',16,3,N'dbo.Position') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PositionName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PositionId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'PositionSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[PositionId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGET"& _ 
            "ABLE(CHANGES dbo.Position, @sync_last_received_anchor) CT WHERE (CT.[PositionId]"& _ 
            " = @PositionId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PositionId", System.Data.SqlDbType.UniqueIdentifier))
        'PositionSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.Position.[PositionId], [PositionName], [CreatedBy], [CreatedDate], [Mo"& _ 
            "difiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_"& _ 
            "VERSION FROM dbo.Position JOIN CHANGETABLE(VERSION dbo.Position, ([PositionId]),"& _ 
            " (@PositionId)) CT  ON CT.[PositionId] = dbo.Position.[PositionId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PositionId", System.Data.SqlDbType.UniqueIdentifier))
        'PositionSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.Position.[PositionId], [PositionName], [Creat"& _ 
            "edBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.Posi"& _ 
            "tion LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.Position, @sync_last_received_ancho"& _ 
            "r) CT ON CT.[PositionId] = dbo.Position.[PositionId] WHERE (CT.SYS_CHANGE_CONTEX"& _ 
            "T IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT"& _ 
            " dbo.Position.[PositionId], [PositionName], [CreatedBy], [CreatedDate], [Modifie"& _ 
            "dBy], [ModifiedDate], [RecordStatus] FROM dbo.Position JOIN CHANGETABLE(CHANGES "& _ 
            "dbo.Position, @sync_last_received_anchor) CT ON CT.[PositionId] = dbo.Position.["& _ 
            "PositionId] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERS"& _ 
            "ION  <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_C"& _ 
            "HANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION("& _ 
            "object_id(N'dbo.Position')) > @sync_last_received_anchor RAISERROR (N'SQL Server"& _ 
            " Change Tracking has cleaned up tracking information for table ''%s''. To recove"& _ 
            "r from this error, the client must reinitialize its local database and try again"& _ 
            "',16,3,N'dbo.Position')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'PositionSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[PositionId] FROM CHANGETABLE(CHANGES d"& _ 
            "bo.Position, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D'"& _ 
            " AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTE"& _ 
            "XT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACK"& _ 
            "ING_MIN_VALID_VERSION(object_id(N'dbo.Position')) > @sync_last_received_anchor R"& _ 
            "AISERROR (N'SQL Server Change Tracking has cleaned up tracking information for t"& _ 
            "able ''%s''. To recover from this error, the client must reinitialize its local "& _ 
            "database and try again',16,3,N'dbo.Position')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'PositionSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.Position.[PositionId], [PositionName],"& _ 
            " [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM d"& _ 
            "bo.Position JOIN CHANGETABLE(CHANGES dbo.Position, @sync_last_received_anchor) C"& _ 
            "T ON CT.[PositionId] = dbo.Position.[PositionId] WHERE (CT.SYS_CHANGE_OPERATION "& _ 
            "= 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_"& _ 
            "CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_"& _ 
            "TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Position')) > @sync_last_received_anc"& _ 
            "hor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information "& _ 
            "for table ''%s''. To recover from this error, the client must reinitialize its l"& _ 
            "ocal database and try again',16,3,N'dbo.Position')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Position"
    End Sub
End Class

Partial Public Class ProvinceSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'ProvinceSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Province ("& _ 
            "[ProvinceID], [ProvinceName], [RegionID], [CreatedBy], [CreatedDate], [ModifiedB"& _ 
            "y], [ModifiedDate], [RecordStatus]) VALUES (@ProvinceID, @ProvinceName, @RegionI"& _ 
            "D, @CreatedBy, @CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @syn"& _ 
            "c_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.P"& _ 
            "rovince')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking "& _ 
            "has cleaned up tracking information for table ''%s''. To recover from this error"& _ 
            ", the client must reinitialize its local database and try again',16,3,N'dbo.Prov"& _ 
            "ince') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ProvinceID", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ProvinceName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RegionID", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'ProvinceSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Province FROM d"& _ 
            "bo.Province JOIN CHANGETABLE(VERSION dbo.Province, ([ProvinceID]), (@ProvinceID)"& _ 
            ") CT  ON CT.[ProvinceID] = dbo.Province.[ProvinceID] WHERE (@sync_force_write = "& _ 
            "1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_receiv"& _ 
            "ed_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @syn"& _ 
            "c_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VA"& _ 
            "LID_VERSION(object_id(N'dbo.Province')) > @sync_last_received_anchor RAISERROR ("& _ 
            "N'SQL Server Change Tracking has cleaned up tracking information for table ''%s'"& _ 
            "'. To recover from this error, the client must reinitialize its local database a"& _ 
            "nd try again',16,3,N'dbo.Province') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ProvinceID", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'ProvinceSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Province SET [P"& _ 
            "rovinceName] = @ProvinceName, [RegionID] = @RegionID, [CreatedBy] = @CreatedBy, "& _ 
            "[CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @Modi"& _ 
            "fiedDate, [RecordStatus] = @RecordStatus FROM dbo.Province  JOIN CHANGETABLE(VER"& _ 
            "SION dbo.Province, ([ProvinceID]), (@ProvinceID)) CT  ON CT.[ProvinceID] = dbo.P"& _ 
            "rovince.[ProvinceID] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NU"& _ 
            "LL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONT"& _ 
            "EXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_r"& _ 
            "ow_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Prov"& _ 
            "ince')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has"& _ 
            " cleaned up tracking information for table ''%s''. To recover from this error, t"& _ 
            "he client must reinitialize its local database and try again',16,3,N'dbo.Provinc"& _ 
            "e') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ProvinceName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RegionID", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ProvinceID", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'ProvinceSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[ProvinceID], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGET"& _ 
            "ABLE(CHANGES dbo.Province, @sync_last_received_anchor) CT WHERE (CT.[ProvinceID]"& _ 
            " = @ProvinceID AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ProvinceID", System.Data.SqlDbType.UniqueIdentifier))
        'ProvinceSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.Province.[ProvinceID], [ProvinceName], [RegionID], [CreatedBy], [Creat"& _ 
            "edDate], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT"& _ 
            ".SYS_CHANGE_VERSION FROM dbo.Province JOIN CHANGETABLE(VERSION dbo.Province, ([P"& _ 
            "rovinceID]), (@ProvinceID)) CT  ON CT.[ProvinceID] = dbo.Province.[ProvinceID]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ProvinceID", System.Data.SqlDbType.UniqueIdentifier))
        'ProvinceSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.Province.[ProvinceID], [ProvinceName], [Regio"& _ 
            "nID], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] F"& _ 
            "ROM dbo.Province LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.Province, @sync_last_re"& _ 
            "ceived_anchor) CT ON CT.[ProvinceID] = dbo.Province.[ProvinceID] WHERE (CT.SYS_C"& _ 
            "HANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  "& _ 
            "BEGIN SELECT dbo.Province.[ProvinceID], [ProvinceName], [RegionID], [CreatedBy],"& _ 
            " [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.Province J"& _ 
            "OIN CHANGETABLE(CHANGES dbo.Province, @sync_last_received_anchor) CT ON CT.[Prov"& _ 
            "inceID] = dbo.Province.[ProvinceID] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT."& _ 
            "SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CON"& _ 
            "TEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRA"& _ 
            "CKING_MIN_VALID_VERSION(object_id(N'dbo.Province')) > @sync_last_received_anchor"& _ 
            " RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information for"& _ 
            " table ''%s''. To recover from this error, the client must reinitialize its loca"& _ 
            "l database and try again',16,3,N'dbo.Province')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'ProvinceSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[ProvinceID] FROM CHANGETABLE(CHANGES d"& _ 
            "bo.Province, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D'"& _ 
            " AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTE"& _ 
            "XT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACK"& _ 
            "ING_MIN_VALID_VERSION(object_id(N'dbo.Province')) > @sync_last_received_anchor R"& _ 
            "AISERROR (N'SQL Server Change Tracking has cleaned up tracking information for t"& _ 
            "able ''%s''. To recover from this error, the client must reinitialize its local "& _ 
            "database and try again',16,3,N'dbo.Province')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'ProvinceSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.Province.[ProvinceID], [ProvinceName],"& _ 
            " [RegionID], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordSt"& _ 
            "atus] FROM dbo.Province JOIN CHANGETABLE(CHANGES dbo.Province, @sync_last_receiv"& _ 
            "ed_anchor) CT ON CT.[ProvinceID] = dbo.Province.[ProvinceID] WHERE (CT.SYS_CHANG"& _ 
            "E_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT"& _ 
            ".SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary))"& _ 
            "; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Province')) > @sync_last_"& _ 
            "received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking "& _ 
            "information for table ''%s''. To recover from this error, the client must reinit"& _ 
            "ialize its local database and try again',16,3,N'dbo.Province')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Province"
    End Sub
End Class

Partial Public Class RateMatrixSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'RateMatrixSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.RateMatrix"& _ 
            " ([RateMatrixId], [ApplicableRateId], [CommodityTypeId], [ServiceTypeId], [Servi"& _ 
            "ceModeId], [HasFuelCharge], [HasAwbFee], [HasInsurance], [ApplyEvm], [ApplyWeigh"& _ 
            "t], [IsVatable], [HasDeliveryFee], [HasPerishableFee], [HasDangerousFee], [HasVa"& _ 
            "luationCharge], [Amount], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDat"& _ 
            "e], [RecordStatus]) VALUES (@RateMatrixId, @ApplicableRateId, @CommodityTypeId, "& _ 
            "@ServiceTypeId, @ServiceModeId, @HasFuelCharge, @HasAwbFee, @HasInsurance, @Appl"& _ 
            "yEvm, @ApplyWeight, @IsVatable, @HasDeliveryFee, @HasPerishableFee, @HasDangerou"& _ 
            "sFee, @HasValuationCharge, @Amount, @CreatedBy, @CreatedDate, @ModifiedBy, @Modi"& _ 
            "fiedDate, @RecordStatus) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MI"& _ 
            "N_VALID_VERSION(object_id(N'dbo.RateMatrix')) > @sync_last_received_anchor RAISE"& _ 
            "RROR (N'SQL Server Change Tracking has cleaned up tracking information for table"& _ 
            " ''%s''. To recover from this error, the client must reinitialize its local data"& _ 
            "base and try again',16,3,N'dbo.RateMatrix') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RateMatrixId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplicableRateId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasFuelCharge", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasAwbFee", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasInsurance", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplyEvm", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplyWeight", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsVatable", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasDeliveryFee", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasPerishableFee", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasDangerousFee", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasValuationCharge", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Amount", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'RateMatrixSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.RateMatrix FROM"& _ 
            " dbo.RateMatrix JOIN CHANGETABLE(VERSION dbo.RateMatrix, ([RateMatrixId]), (@Rat"& _ 
            "eMatrixId)) CT  ON CT.[RateMatrixId] = dbo.RateMatrix.[RateMatrixId] WHERE (@syn"& _ 
            "c_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @"& _ 
            "sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANG"& _ 
            "E_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE"& _ 
            "_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.RateMatrix')) > @sync_last_received_"& _ 
            "anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking informati"& _ 
            "on for table ''%s''. To recover from this error, the client must reinitialize it"& _ 
            "s local database and try again',16,3,N'dbo.RateMatrix') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RateMatrixId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'RateMatrixSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.RateMatrix SET "& _ 
            "[ApplicableRateId] = @ApplicableRateId, [CommodityTypeId] = @CommodityTypeId, [S"& _ 
            "erviceTypeId] = @ServiceTypeId, [ServiceModeId] = @ServiceModeId, [HasFuelCharge"& _ 
            "] = @HasFuelCharge, [HasAwbFee] = @HasAwbFee, [HasInsurance] = @HasInsurance, [A"& _ 
            "pplyEvm] = @ApplyEvm, [ApplyWeight] = @ApplyWeight, [IsVatable] = @IsVatable, [H"& _ 
            "asDeliveryFee] = @HasDeliveryFee, [HasPerishableFee] = @HasPerishableFee, [HasDa"& _ 
            "ngerousFee] = @HasDangerousFee, [HasValuationCharge] = @HasValuationCharge, [Amo"& _ 
            "unt] = @Amount, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [Modifie"& _ 
            "dBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStat"& _ 
            "us FROM dbo.RateMatrix  JOIN CHANGETABLE(VERSION dbo.RateMatrix, ([RateMatrixId]"& _ 
            "), (@RateMatrixId)) CT  ON CT.[RateMatrixId] = dbo.RateMatrix.[RateMatrixId] WHE"& _ 
            "RE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERS"& _ 
            "ION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.S"& _ 
            "YS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; I"& _ 
            "F CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.RateMatrix')) > @sync_last_r"& _ 
            "eceived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking i"& _ 
            "nformation for table ''%s''. To recover from this error, the client must reiniti"& _ 
            "alize its local database and try again',16,3,N'dbo.RateMatrix') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplicableRateId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasFuelCharge", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasAwbFee", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasInsurance", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplyEvm", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ApplyWeight", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsVatable", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasDeliveryFee", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasPerishableFee", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasDangerousFee", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasValuationCharge", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Amount", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RateMatrixId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'RateMatrixSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[RateMatrixId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANG"& _ 
            "ETABLE(CHANGES dbo.RateMatrix, @sync_last_received_anchor) CT WHERE (CT.[RateMat"& _ 
            "rixId] = @RateMatrixId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RateMatrixId", System.Data.SqlDbType.UniqueIdentifier))
        'RateMatrixSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.RateMatrix.[RateMatrixId], [ApplicableRateId], [CommodityTypeId], [Ser"& _ 
            "viceTypeId], [ServiceModeId], [HasFuelCharge], [HasAwbFee], [HasInsurance], [App"& _ 
            "lyEvm], [ApplyWeight], [IsVatable], [HasDeliveryFee], [HasPerishableFee], [HasDa"& _ 
            "ngerousFee], [HasValuationCharge], [Amount], [CreatedBy], [CreatedDate], [Modifi"& _ 
            "edBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERS"& _ 
            "ION FROM dbo.RateMatrix JOIN CHANGETABLE(VERSION dbo.RateMatrix, ([RateMatrixId]"& _ 
            "), (@RateMatrixId)) CT  ON CT.[RateMatrixId] = dbo.RateMatrix.[RateMatrixId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RateMatrixId", System.Data.SqlDbType.UniqueIdentifier))
        'RateMatrixSyncTableSelectIncrementalInsertsCommand command.	
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_RateMatrix_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'RateMatrixSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_RateMatrix_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'RateMatrixSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_RateMatrix_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "RateMatrix"
    End Sub
End Class

Partial Public Class RegionSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'RegionSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Region ([R"& _ 
            "egionId], [RegionName], [GroupId], [CreatedBy], [CreatedDate], [ModifiedBy], [Mo"& _ 
            "difiedDate], [RecordStatus]) VALUES (@RegionId, @RegionName, @GroupId, @CreatedB"& _ 
            "y, @CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_row_count "& _ 
            "= @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Region')) > @"& _ 
            "sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up"& _ 
            " tracking information for table ''%s''. To recover from this error, the client m"& _ 
            "ust reinitialize its local database and try again',16,3,N'dbo.Region') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RegionId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RegionName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GroupId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'RegionSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Region FROM dbo"& _ 
            ".Region JOIN CHANGETABLE(VERSION dbo.Region, ([RegionId]), (@RegionId)) CT  ON C"& _ 
            "T.[RegionId] = dbo.Region.[RegionId] WHERE (@sync_force_write = 1 OR CT.SYS_CHAN"& _ 
            "GE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT"& _ 
            ".SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_bina"& _ 
            "ry)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(obje"& _ 
            "ct_id(N'dbo.Region')) > @sync_last_received_anchor RAISERROR (N'SQL Server Chang"& _ 
            "e Tracking has cleaned up tracking information for table ''%s''. To recover from"& _ 
            " this error, the client must reinitialize its local database and try again',16,3"& _ 
            ",N'dbo.Region') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RegionId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'RegionSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Region SET [Reg"& _ 
            "ionName] = @RegionName, [GroupId] = @GroupId, [CreatedBy] = @CreatedBy, [Created"& _ 
            "Date] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate"& _ 
            ", [RecordStatus] = @RecordStatus FROM dbo.Region  JOIN CHANGETABLE(VERSION dbo.R"& _ 
            "egion, ([RegionId]), (@RegionId)) CT  ON CT.[RegionId] = dbo.Region.[RegionId] W"& _ 
            "HERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VE"& _ 
            "RSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT"& _ 
            ".SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount;"& _ 
            " IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Region')) > @sync_last_rec"& _ 
            "eived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking inf"& _ 
            "ormation for table ''%s''. To recover from this error, the client must reinitial"& _ 
            "ize its local database and try again',16,3,N'dbo.Region') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RegionName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GroupId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RegionId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'RegionSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[RegionId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETAB"& _ 
            "LE(CHANGES dbo.Region, @sync_last_received_anchor) CT WHERE (CT.[RegionId] = @Re"& _ 
            "gionId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RegionId", System.Data.SqlDbType.UniqueIdentifier))
        'RegionSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.Region.[RegionId], [RegionName], [GroupId], [CreatedBy], [CreatedDate]"& _ 
            ", [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CH"& _ 
            "ANGE_VERSION FROM dbo.Region JOIN CHANGETABLE(VERSION dbo.Region, ([RegionId]), "& _ 
            "(@RegionId)) CT  ON CT.[RegionId] = dbo.Region.[RegionId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RegionId", System.Data.SqlDbType.UniqueIdentifier))
        'RegionSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_Region_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'RegionSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_Region_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'RegionSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_Region_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Region"
    End Sub
End Class

Partial Public Class RevenueUnitSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'RevenueUnitSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.RevenueUni"& _ 
            "t ([RevenueUnitId], [RevenueUnitName], [Description], [RevenueUnitTypeId], [City"& _ 
            "Id], [ClusterId], [StreetAddress], [ContactNo1], [ContactNo2], [Fax], [ZipCode],"& _ 
            " [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus]) VALUE"& _ 
            "S (@RevenueUnitId, @RevenueUnitName, @Description, @RevenueUnitTypeId, @CityId, "& _ 
            "@ClusterId, @StreetAddress, @ContactNo1, @ContactNo2, @Fax, @ZipCode, @CreatedBy"& _ 
            ", @CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_row_count ="& _ 
            " @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.RevenueUnit'))"& _ 
            " > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleane"& _ 
            "d up tracking information for table ''%s''. To recover from this error, the clie"& _ 
            "nt must reinitialize its local database and try again',16,3,N'dbo.RevenueUnit') "& _ 
            ""
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RevenueUnitId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RevenueUnitName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RevenueUnitTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ClusterId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StreetAddress", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactNo1", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactNo2", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Fax", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ZipCode", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'RevenueUnitSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.RevenueUnit FRO"& _ 
            "M dbo.RevenueUnit JOIN CHANGETABLE(VERSION dbo.RevenueUnit, ([RevenueUnitId]), ("& _ 
            "@RevenueUnitId)) CT  ON CT.[RevenueUnitId] = dbo.RevenueUnit.[RevenueUnitId] WHE"& _ 
            "RE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERS"& _ 
            "ION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.S"& _ 
            "YS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; I"& _ 
            "F CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.RevenueUnit')) > @sync_last_"& _ 
            "received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking "& _ 
            "information for table ''%s''. To recover from this error, the client must reinit"& _ 
            "ialize its local database and try again',16,3,N'dbo.RevenueUnit') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RevenueUnitId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'RevenueUnitSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.RevenueUnit SET"& _ 
            " [RevenueUnitName] = @RevenueUnitName, [Description] = @Description, [RevenueUni"& _ 
            "tTypeId] = @RevenueUnitTypeId, [CityId] = @CityId, [ClusterId] = @ClusterId, [St"& _ 
            "reetAddress] = @StreetAddress, [ContactNo1] = @ContactNo1, [ContactNo2] = @Conta"& _ 
            "ctNo2, [Fax] = @Fax, [ZipCode] = @ZipCode, [CreatedBy] = @CreatedBy, [CreatedDat"& _ 
            "e] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, ["& _ 
            "RecordStatus] = @RecordStatus FROM dbo.RevenueUnit  JOIN CHANGETABLE(VERSION dbo"& _ 
            ".RevenueUnit, ([RevenueUnitId]), (@RevenueUnitId)) CT  ON CT.[RevenueUnitId] = d"& _ 
            "bo.RevenueUnit.[RevenueUnitId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VER"& _ 
            "SION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_C"& _ 
            "HANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) S"& _ 
            "ET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id("& _ 
            "N'dbo.RevenueUnit')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change"& _ 
            " Tracking has cleaned up tracking information for table ''%s''. To recover from "& _ 
            "this error, the client must reinitialize its local database and try again',16,3,"& _ 
            "N'dbo.RevenueUnit') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RevenueUnitName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RevenueUnitTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ClusterId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StreetAddress", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactNo1", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactNo2", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Fax", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ZipCode", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RevenueUnitId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'RevenueUnitSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[RevenueUnitId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHAN"& _ 
            "GETABLE(CHANGES dbo.RevenueUnit, @sync_last_received_anchor) CT WHERE (CT.[Reven"& _ 
            "ueUnitId] = @RevenueUnitId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RevenueUnitId", System.Data.SqlDbType.UniqueIdentifier))
        'RevenueUnitSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.RevenueUnit.[RevenueUnitId], [RevenueUnitName], [Description], [Revenu"& _ 
            "eUnitTypeId], [CityId], [ClusterId], [StreetAddress], [ContactNo1], [ContactNo2]"& _ 
            ", [Fax], [ZipCode], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [R"& _ 
            "ecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.RevenueUnit "& _ 
            "JOIN CHANGETABLE(VERSION dbo.RevenueUnit, ([RevenueUnitId]), (@RevenueUnitId)) C"& _ 
            "T  ON CT.[RevenueUnitId] = dbo.RevenueUnit.[RevenueUnitId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RevenueUnitId", System.Data.SqlDbType.UniqueIdentifier))
        'RevenueUnitSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_RevenueUnit_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'RevenueUnitSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_RevenueUnit_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'RevenueUnitSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_RevenueUnit_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "RevenueUnit"
    End Sub
End Class

Partial Public Class RevenueUnitTypeSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'RevenueUnitTypeSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.RevenueUni"& _ 
            "tType ([RevenueUnitTypeId], [RevenueUnitTypeName], [Description], [CreatedBy], ["& _ 
            "CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus]) VALUES (@RevenueUnit"& _ 
            "TypeId, @RevenueUnitTypeName, @Description, @CreatedBy, @CreatedDate, @ModifiedB"& _ 
            "y, @ModifiedDate, @RecordStatus) SET @sync_row_count = @@rowcount; IF CHANGE_TRA"& _ 
            "CKING_MIN_VALID_VERSION(object_id(N'dbo.RevenueUnitType')) > @sync_last_received"& _ 
            "_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking informat"& _ 
            "ion for table ''%s''. To recover from this error, the client must reinitialize i"& _ 
            "ts local database and try again',16,3,N'dbo.RevenueUnitType') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RevenueUnitTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RevenueUnitTypeName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'RevenueUnitTypeSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.RevenueUnitType"& _ 
            " FROM dbo.RevenueUnitType JOIN CHANGETABLE(VERSION dbo.RevenueUnitType, ([Revenu"& _ 
            "eUnitTypeId]), (@RevenueUnitTypeId)) CT  ON CT.[RevenueUnitTypeId] = dbo.Revenue"& _ 
            "UnitType.[RevenueUnitTypeId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSI"& _ 
            "ON IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHA"& _ 
            "NGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET"& _ 
            " @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'"& _ 
            "dbo.RevenueUnitType')) > @sync_last_received_anchor RAISERROR (N'SQL Server Chan"& _ 
            "ge Tracking has cleaned up tracking information for table ''%s''. To recover fro"& _ 
            "m this error, the client must reinitialize its local database and try again',16,"& _ 
            "3,N'dbo.RevenueUnitType') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RevenueUnitTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'RevenueUnitTypeSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.RevenueUnitType"& _ 
            " SET [RevenueUnitTypeName] = @RevenueUnitTypeName, [Description] = @Description,"& _ 
            " [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @Modifie"& _ 
            "dBy, [ModifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus FROM dbo.Rev"& _ 
            "enueUnitType  JOIN CHANGETABLE(VERSION dbo.RevenueUnitType, ([RevenueUnitTypeId]"& _ 
            "), (@RevenueUnitTypeId)) CT  ON CT.[RevenueUnitTypeId] = dbo.RevenueUnitType.[Re"& _ 
            "venueUnitTypeId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL O"& _ 
            "R CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT "& _ 
            "IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_c"& _ 
            "ount = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.RevenueU"& _ 
            "nitType')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking "& _ 
            "has cleaned up tracking information for table ''%s''. To recover from this error"& _ 
            ", the client must reinitialize its local database and try again',16,3,N'dbo.Reve"& _ 
            "nueUnitType') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RevenueUnitTypeName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RevenueUnitTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'RevenueUnitTypeSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[RevenueUnitTypeId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM "& _ 
            "CHANGETABLE(CHANGES dbo.RevenueUnitType, @sync_last_received_anchor) CT WHERE (C"& _ 
            "T.[RevenueUnitTypeId] = @RevenueUnitTypeId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RevenueUnitTypeId", System.Data.SqlDbType.UniqueIdentifier))
        'RevenueUnitTypeSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.RevenueUnitType.[RevenueUnitTypeId], [RevenueUnitTypeName], [Descripti"& _ 
            "on], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], C"& _ 
            "T.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.RevenueUnitType JOIN CHANGE"& _ 
            "TABLE(VERSION dbo.RevenueUnitType, ([RevenueUnitTypeId]), (@RevenueUnitTypeId)) "& _ 
            "CT  ON CT.[RevenueUnitTypeId] = dbo.RevenueUnitType.[RevenueUnitTypeId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RevenueUnitTypeId", System.Data.SqlDbType.UniqueIdentifier))
        'RevenueUnitTypeSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_RevenueUnitType_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'RevenueUnitTypeSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_RevenueUnitType_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'RevenueUnitTypeSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_RevenueUnitType_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "RevenueUnitType"
    End Sub
End Class

Partial Public Class RoleSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'RoleSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Role ([Rol"& _ 
            "eId], [RoleName], [Description], [CreatedBy], [CreatedDate], [ModifiedBy], [Modi"& _ 
            "fiedDate], [RecordStatus]) VALUES (@RoleId, @RoleName, @Description, @CreatedBy,"& _ 
            " @CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_row_count = "& _ 
            "@@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Role')) > @sync"& _ 
            "_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tra"& _ 
            "cking information for table ''%s''. To recover from this error, the client must "& _ 
            "reinitialize its local database and try again',16,3,N'dbo.Role') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RoleId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RoleName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'RoleSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Role FROM dbo.R"& _ 
            "ole JOIN CHANGETABLE(VERSION dbo.Role, ([RoleId]), (@RoleId)) CT  ON CT.[RoleId]"& _ 
            " = dbo.Role.[RoleId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NU"& _ 
            "LL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONT"& _ 
            "EXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_r"& _ 
            "ow_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Role"& _ 
            "')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cle"& _ 
            "aned up tracking information for table ''%s''. To recover from this error, the c"& _ 
            "lient must reinitialize its local database and try again',16,3,N'dbo.Role') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RoleId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'RoleSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Role SET [RoleN"& _ 
            "ame] = @RoleName, [Description] = @Description, [CreatedBy] = @CreatedBy, [Creat"& _ 
            "edDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDa"& _ 
            "te, [RecordStatus] = @RecordStatus FROM dbo.Role  JOIN CHANGETABLE(VERSION dbo.R"& _ 
            "ole, ([RoleId]), (@RoleId)) CT  ON CT.[RoleId] = dbo.Role.[RoleId] WHERE (@sync_"& _ 
            "force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sy"& _ 
            "nc_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_"& _ 
            "CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_T"& _ 
            "RACKING_MIN_VALID_VERSION(object_id(N'dbo.Role')) > @sync_last_received_anchor R"& _ 
            "AISERROR (N'SQL Server Change Tracking has cleaned up tracking information for t"& _ 
            "able ''%s''. To recover from this error, the client must reinitialize its local "& _ 
            "database and try again',16,3,N'dbo.Role') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RoleName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RoleId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'RoleSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[RoleId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETABLE"& _ 
            "(CHANGES dbo.Role, @sync_last_received_anchor) CT WHERE (CT.[RoleId] = @RoleId A"& _ 
            "ND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RoleId", System.Data.SqlDbType.UniqueIdentifier))
        'RoleSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.Role.[RoleId], [RoleName], [Description], [CreatedBy], [CreatedDate], "& _ 
            "[ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHAN"& _ 
            "GE_VERSION FROM dbo.Role JOIN CHANGETABLE(VERSION dbo.Role, ([RoleId]), (@RoleId"& _ 
            ")) CT  ON CT.[RoleId] = dbo.Role.[RoleId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RoleId", System.Data.SqlDbType.UniqueIdentifier))
        'RoleSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_Role_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'RoleSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_Role_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'RoleSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_Role_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Role"
    End Sub
End Class

Partial Public Class RoleUserSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'RoleUserSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.RoleUser ("& _ 
            "[Role_RoleId], [User_UserId]) VALUES (@Role_RoleId, @User_UserId) SET @sync_row_"& _ 
            "count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.RoleUse"& _ 
            "r')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cl"& _ 
            "eaned up tracking information for table ''%s''. To recover from this error, the "& _ 
            "client must reinitialize its local database and try again',16,3,N'dbo.RoleUser')"& _ 
            " "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Role_RoleId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@User_UserId", System.Data.SqlDbType.UniqueIdentifier))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'RoleUserSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.RoleUser FROM d"& _ 
            "bo.RoleUser JOIN CHANGETABLE(VERSION dbo.RoleUser, ([Role_RoleId]), (@Role_RoleI"& _ 
            "d)) CT  ON CT.[Role_RoleId] = dbo.RoleUser.[Role_RoleId] WHERE (@sync_force_writ"& _ 
            "e = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_re"& _ 
            "ceived_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = "& _ 
            "@sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MI"& _ 
            "N_VALID_VERSION(object_id(N'dbo.RoleUser')) > @sync_last_received_anchor RAISERR"& _ 
            "OR (N'SQL Server Change Tracking has cleaned up tracking information for table '"& _ 
            "'%s''. To recover from this error, the client must reinitialize its local databa"& _ 
            "se and try again',16,3,N'dbo.RoleUser') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Role_RoleId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'RoleUserSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.RoleUser SET [U"& _ 
            "ser_UserId] = @User_UserId FROM dbo.RoleUser  JOIN CHANGETABLE(VERSION dbo.RoleU"& _ 
            "ser, ([Role_RoleId]), (@Role_RoleId)) CT  ON CT.[Role_RoleId] = dbo.RoleUser.[Ro"& _ 
            "le_RoleId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.S"& _ 
            "YS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT"& _ 
            " NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count ="& _ 
            " @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.RoleUser')) > "& _ 
            "@sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned u"& _ 
            "p tracking information for table ''%s''. To recover from this error, the client "& _ 
            "must reinitialize its local database and try again',16,3,N'dbo.RoleUser') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@User_UserId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Role_RoleId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'RoleUserSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[Role_RoleId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGE"& _ 
            "TABLE(CHANGES dbo.RoleUser, @sync_last_received_anchor) CT WHERE (CT.[Role_RoleI"& _ 
            "d] = @Role_RoleId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Role_RoleId", System.Data.SqlDbType.UniqueIdentifier))
        'RoleUserSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.RoleUser.[Role_RoleId], [User_UserId], CT.SYS_CHANGE_CONTEXT, CT.SYS_C"& _ 
            "HANGE_VERSION FROM dbo.RoleUser JOIN CHANGETABLE(VERSION dbo.RoleUser, ([Role_Ro"& _ 
            "leId]), (@Role_RoleId)) CT  ON CT.[Role_RoleId] = dbo.RoleUser.[Role_RoleId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Role_RoleId", System.Data.SqlDbType.UniqueIdentifier))
        'RoleUserSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.RoleUser.[Role_RoleId], [User_UserId] FROM db"& _ 
            "o.RoleUser LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.RoleUser, @sync_last_received"& _ 
            "_anchor) CT ON CT.[Role_RoleId] = dbo.RoleUser.[Role_RoleId] WHERE (CT.SYS_CHANG"& _ 
            "E_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  BEGI"& _ 
            "N SELECT dbo.RoleUser.[Role_RoleId], [User_UserId] FROM dbo.RoleUser JOIN CHANGE"& _ 
            "TABLE(CHANGES dbo.RoleUser, @sync_last_received_anchor) CT ON CT.[Role_RoleId] ="& _ 
            " dbo.RoleUser.[Role_RoleId] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHAN"& _ 
            "GE_CREATION_VERSION  <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS "& _ 
            "NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MI"& _ 
            "N_VALID_VERSION(object_id(N'dbo.RoleUser')) > @sync_last_received_anchor RAISERR"& _ 
            "OR (N'SQL Server Change Tracking has cleaned up tracking information for table '"& _ 
            "'%s''. To recover from this error, the client must reinitialize its local databa"& _ 
            "se and try again',16,3,N'dbo.RoleUser')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'RoleUserSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[Role_RoleId] FROM CHANGETABLE(CHANGES "& _ 
            "dbo.RoleUser, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D"& _ 
            "' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONT"& _ 
            "EXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRAC"& _ 
            "KING_MIN_VALID_VERSION(object_id(N'dbo.RoleUser')) > @sync_last_received_anchor "& _ 
            "RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information for "& _ 
            "table ''%s''. To recover from this error, the client must reinitialize its local"& _ 
            " database and try again',16,3,N'dbo.RoleUser')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'RoleUserSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.RoleUser.[Role_RoleId], [User_UserId] "& _ 
            "FROM dbo.RoleUser JOIN CHANGETABLE(CHANGES dbo.RoleUser, @sync_last_received_anc"& _ 
            "hor) CT ON CT.[Role_RoleId] = dbo.RoleUser.[Role_RoleId] WHERE (CT.SYS_CHANGE_OP"& _ 
            "ERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS"& _ 
            "_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF"& _ 
            " CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.RoleUser')) > @sync_last_rece"& _ 
            "ived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking info"& _ 
            "rmation for table ''%s''. To recover from this error, the client must reinitiali"& _ 
            "ze its local database and try again',16,3,N'dbo.RoleUser')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "RoleUser"
    End Sub
End Class

Partial Public Class ServiceModeSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'ServiceModeSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.ServiceMod"& _ 
            "e ([ServiceModeId], [ServiceModeCode], [ServiceModeName], [ListOrder], [CreatedB"& _ 
            "y], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus]) VALUES (@Servic"& _ 
            "eModeId, @ServiceModeCode, @ServiceModeName, @ListOrder, @CreatedBy, @CreatedDat"& _ 
            "e, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_row_count = @@rowcount; "& _ 
            "IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.ServiceMode')) > @sync_last"& _ 
            "_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking"& _ 
            " information for table ''%s''. To recover from this error, the client must reini"& _ 
            "tialize its local database and try again',16,3,N'dbo.ServiceMode') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceModeCode", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceModeName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'ServiceModeSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.ServiceMode FRO"& _ 
            "M dbo.ServiceMode JOIN CHANGETABLE(VERSION dbo.ServiceMode, ([ServiceModeId]), ("& _ 
            "@ServiceModeId)) CT  ON CT.[ServiceModeId] = dbo.ServiceMode.[ServiceModeId] WHE"& _ 
            "RE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERS"& _ 
            "ION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.S"& _ 
            "YS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; I"& _ 
            "F CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.ServiceMode')) > @sync_last_"& _ 
            "received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking "& _ 
            "information for table ''%s''. To recover from this error, the client must reinit"& _ 
            "ialize its local database and try again',16,3,N'dbo.ServiceMode') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'ServiceModeSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.ServiceMode SET"& _ 
            " [ServiceModeCode] = @ServiceModeCode, [ServiceModeName] = @ServiceModeName, [Li"& _ 
            "stOrder] = @ListOrder, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, ["& _ 
            "ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, [RecordStatus] = @Rec"& _ 
            "ordStatus FROM dbo.ServiceMode  JOIN CHANGETABLE(VERSION dbo.ServiceMode, ([Serv"& _ 
            "iceModeId]), (@ServiceModeId)) CT  ON CT.[ServiceModeId] = dbo.ServiceMode.[Serv"& _ 
            "iceModeId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.S"& _ 
            "YS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT"& _ 
            " NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count ="& _ 
            " @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.ServiceMode'))"& _ 
            " > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleane"& _ 
            "d up tracking information for table ''%s''. To recover from this error, the clie"& _ 
            "nt must reinitialize its local database and try again',16,3,N'dbo.ServiceMode') "& _ 
            ""
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceModeCode", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceModeName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ListOrder", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'ServiceModeSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[ServiceModeId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHAN"& _ 
            "GETABLE(CHANGES dbo.ServiceMode, @sync_last_received_anchor) CT WHERE (CT.[Servi"& _ 
            "ceModeId] = @ServiceModeId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceModeId", System.Data.SqlDbType.UniqueIdentifier))
        'ServiceModeSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.ServiceMode.[ServiceModeId], [ServiceModeCode], [ServiceModeName], [Li"& _ 
            "stOrder], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatu"& _ 
            "s], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.ServiceMode JOIN CHANG"& _ 
            "ETABLE(VERSION dbo.ServiceMode, ([ServiceModeId]), (@ServiceModeId)) CT  ON CT.["& _ 
            "ServiceModeId] = dbo.ServiceMode.[ServiceModeId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceModeId", System.Data.SqlDbType.UniqueIdentifier))
        'ServiceModeSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_ServiceMode_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'ServiceModeSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_ServiceMode_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'ServiceModeSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_ServiceMode_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "ServiceMode"
    End Sub
End Class

Partial Public Class ServiceTypeSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'ServiceTypeSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.ServiceTyp"& _ 
            "e ([ServiceTypeId], [ServiceTypeName], [CreatedBy], [CreatedDate], [ModifiedBy],"& _ 
            " [ModifiedDate], [RecordStatus]) VALUES (@ServiceTypeId, @ServiceTypeName, @Crea"& _ 
            "tedBy, @CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_row_co"& _ 
            "unt = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.ServiceTy"& _ 
            "pe')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has c"& _ 
            "leaned up tracking information for table ''%s''. To recover from this error, the"& _ 
            " client must reinitialize its local database and try again',16,3,N'dbo.ServiceTy"& _ 
            "pe') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceTypeName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'ServiceTypeSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.ServiceType FRO"& _ 
            "M dbo.ServiceType JOIN CHANGETABLE(VERSION dbo.ServiceType, ([ServiceTypeId]), ("& _ 
            "@ServiceTypeId)) CT  ON CT.[ServiceTypeId] = dbo.ServiceType.[ServiceTypeId] WHE"& _ 
            "RE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERS"& _ 
            "ION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.S"& _ 
            "YS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; I"& _ 
            "F CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.ServiceType')) > @sync_last_"& _ 
            "received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking "& _ 
            "information for table ''%s''. To recover from this error, the client must reinit"& _ 
            "ialize its local database and try again',16,3,N'dbo.ServiceType') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'ServiceTypeSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.ServiceType SET"& _ 
            " [ServiceTypeName] = @ServiceTypeName, [CreatedBy] = @CreatedBy, [CreatedDate] ="& _ 
            " @CreatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, [Reco"& _ 
            "rdStatus] = @RecordStatus FROM dbo.ServiceType  JOIN CHANGETABLE(VERSION dbo.Ser"& _ 
            "viceType, ([ServiceTypeId]), (@ServiceTypeId)) CT  ON CT.[ServiceTypeId] = dbo.S"& _ 
            "erviceType.[ServiceTypeId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION"& _ 
            " IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANG"& _ 
            "E_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @"& _ 
            "sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'db"& _ 
            "o.ServiceType')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tra"& _ 
            "cking has cleaned up tracking information for table ''%s''. To recover from this"& _ 
            " error, the client must reinitialize its local database and try again',16,3,N'db"& _ 
            "o.ServiceType') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceTypeName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'ServiceTypeSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[ServiceTypeId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHAN"& _ 
            "GETABLE(CHANGES dbo.ServiceType, @sync_last_received_anchor) CT WHERE (CT.[Servi"& _ 
            "ceTypeId] = @ServiceTypeId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceTypeId", System.Data.SqlDbType.UniqueIdentifier))
        'ServiceTypeSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.ServiceType.[ServiceTypeId], [ServiceTypeName], [CreatedBy], [CreatedD"& _ 
            "ate], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SY"& _ 
            "S_CHANGE_VERSION FROM dbo.ServiceType JOIN CHANGETABLE(VERSION dbo.ServiceType, "& _ 
            "([ServiceTypeId]), (@ServiceTypeId)) CT  ON CT.[ServiceTypeId] = dbo.ServiceType"& _ 
            ".[ServiceTypeId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceTypeId", System.Data.SqlDbType.UniqueIdentifier))
        'ServiceTypeSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_ServiceType_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'ServiceTypeSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_ServiceType_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'ServiceTypeSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_ServiceType_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "ServiceType"
    End Sub
End Class

Partial Public Class ShipmentSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'ShipmentSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = "sp_sync_Shipment_Insert"
        Me.InsertCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AirwayBillNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginAddress", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationAddress", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ConsigneeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipperId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AcceptedById", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DateAccepted", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTermId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeclaredValue", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FuelSurchargeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AwbFeeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FreightCollectChargeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PeracFeeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@InsuranceId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EvatId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ValuationFactorId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DateOfFullPayment", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Quantity", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Weight", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GoodsDescriptionId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HandlingFee", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@QuarantineFee", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Discount", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FreightCharge", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TotalAmount", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginBarangay", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationBarangay", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Notes", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsVatable", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryFeeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DangerousFeeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'ShipmentSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Shipment FROM d"& _ 
            "bo.Shipment JOIN CHANGETABLE(VERSION dbo.Shipment, ([ShipmentId]), (@ShipmentId)"& _ 
            ") CT  ON CT.[ShipmentId] = dbo.Shipment.[ShipmentId] WHERE (@sync_force_write = "& _ 
            "1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_receiv"& _ 
            "ed_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @syn"& _ 
            "c_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VA"& _ 
            "LID_VERSION(object_id(N'dbo.Shipment')) > @sync_last_received_anchor RAISERROR ("& _ 
            "N'SQL Server Change Tracking has cleaned up tracking information for table ''%s'"& _ 
            "'. To recover from this error, the client must reinitialize its local database a"& _ 
            "nd try again',16,3,N'dbo.Shipment') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'ShipmentSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Shipment SET [A"& _ 
            "irwayBillNo] = @AirwayBillNo, [OriginCityId] = @OriginCityId, [DestinationCityId"& _ 
            "] = @DestinationCityId, [OriginAddress] = @OriginAddress, [DestinationAddress] ="& _ 
            " @DestinationAddress, [ConsigneeId] = @ConsigneeId, [ShipperId] = @ShipperId, [A"& _ 
            "cceptedById] = @AcceptedById, [DateAccepted] = @DateAccepted, [CommodityTypeId] "& _ 
            "= @CommodityTypeId, [ServiceModeId] = @ServiceModeId, [PaymentModeId] = @Payment"& _ 
            "ModeId, [PaymentTermId] = @PaymentTermId, [Remarks] = @Remarks, [DeclaredValue] "& _ 
            "= @DeclaredValue, [FuelSurchargeId] = @FuelSurchargeId, [StatementOfAccountId] ="& _ 
            " @StatementOfAccountId, [AwbFeeId] = @AwbFeeId, [FreightCollectChargeId] = @Frei"& _ 
            "ghtCollectChargeId, [PeracFeeId] = @PeracFeeId, [InsuranceId] = @InsuranceId, [E"& _ 
            "vatId] = @EvatId, [ValuationFactorId] = @ValuationFactorId, [DateOfFullPayment] "& _ 
            "= @DateOfFullPayment, [Quantity] = @Quantity, [Weight] = @Weight, [BookingId] = "& _ 
            "@BookingId, [ServiceTypeId] = @ServiceTypeId, [ShipModeId] = @ShipModeId, [Goods"& _ 
            "DescriptionId] = @GoodsDescriptionId, [HandlingFee] = @HandlingFee, [QuarantineF"& _ 
            "ee] = @QuarantineFee, [Discount] = @Discount, [FreightCharge] = @FreightCharge, "& _ 
            "[TotalAmount] = @TotalAmount, [OriginBarangay] = @OriginBarangay, [DestinationBa"& _ 
            "rangay] = @DestinationBarangay, [Notes] = @Notes, [CommodityId] = @CommodityId, "& _ 
            "[IsVatable] = @IsVatable, [DeliveryFeeId] = @DeliveryFeeId, [DangerousFeeId] = @"& _ 
            "DangerousFeeId, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [Modifie"& _ 
            "dBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStat"& _ 
            "us FROM dbo.Shipment  JOIN CHANGETABLE(VERSION dbo.Shipment, ([ShipmentId]), (@S"& _ 
            "hipmentId)) CT  ON CT.[ShipmentId] = dbo.Shipment.[ShipmentId] WHERE (@sync_forc"& _ 
            "e_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_l"& _ 
            "ast_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONT"& _ 
            "EXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACK"& _ 
            "ING_MIN_VALID_VERSION(object_id(N'dbo.Shipment')) > @sync_last_received_anchor R"& _ 
            "AISERROR (N'SQL Server Change Tracking has cleaned up tracking information for t"& _ 
            "able ''%s''. To recover from this error, the client must reinitialize its local "& _ 
            "database and try again',16,3,N'dbo.Shipment') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AirwayBillNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginAddress", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationAddress", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ConsigneeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipperId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AcceptedById", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DateAccepted", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTermId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeclaredValue", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FuelSurchargeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AwbFeeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FreightCollectChargeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PeracFeeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@InsuranceId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EvatId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ValuationFactorId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DateOfFullPayment", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Quantity", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Weight", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ServiceTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@GoodsDescriptionId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HandlingFee", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@QuarantineFee", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Discount", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FreightCharge", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TotalAmount", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginBarangay", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationBarangay", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Notes", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CommodityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsVatable", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DeliveryFeeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DangerousFeeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'ShipmentSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[ShipmentId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGET"& _ 
            "ABLE(CHANGES dbo.Shipment, @sync_last_received_anchor) CT WHERE (CT.[ShipmentId]"& _ 
            " = @ShipmentId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentId", System.Data.SqlDbType.UniqueIdentifier))
        'ShipmentSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "sp_sync_Shipment_SelectConflictUpdated"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentId", System.Data.SqlDbType.UniqueIdentifier))
        'ShipmentSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.Shipment.[ShipmentId], [AirwayBillNo], [Origi"& _ 
            "nCityId], [DestinationCityId], [OriginAddress], [DestinationAddress], [Consignee"& _ 
            "Id], [ShipperId], [AcceptedById], [DateAccepted], [CommodityTypeId], [ServiceMod"& _ 
            "eId], [PaymentModeId], [PaymentTermId], [Remarks], [DeclaredValue], [FuelSurchar"& _ 
            "geId], [StatementOfAccountId], [AwbFeeId], [FreightCollectChargeId], [PeracFeeId"& _ 
            "], [InsuranceId], [EvatId], [ValuationFactorId], [DateOfFullPayment], [Quantity]"& _ 
            ", [Weight], [BookingId], [ServiceTypeId], [ShipModeId], [GoodsDescriptionId], [H"& _ 
            "andlingFee], [QuarantineFee], [Discount], [FreightCharge], [TotalAmount], [Origi"& _ 
            "nBarangay], [DestinationBarangay], [Notes], [CommodityId], [IsVatable], [Deliver"& _ 
            "yFeeId], [DangerousFeeId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDa"& _ 
            "te], [RecordStatus] FROM dbo.Shipment LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.Sh"& _ 
            "ipment, @sync_last_received_anchor) CT ON CT.[ShipmentId] = dbo.Shipment.[Shipme"& _ 
            "ntId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_cli"& _ 
            "ent_id_binary) ELSE  BEGIN SELECT dbo.Shipment.[ShipmentId], [AirwayBillNo], [Or"& _ 
            "iginCityId], [DestinationCityId], [OriginAddress], [DestinationAddress], [Consig"& _ 
            "neeId], [ShipperId], [AcceptedById], [DateAccepted], [CommodityTypeId], [Service"& _ 
            "ModeId], [PaymentModeId], [PaymentTermId], [Remarks], [DeclaredValue], [FuelSurc"& _ 
            "hargeId], [StatementOfAccountId], [AwbFeeId], [FreightCollectChargeId], [PeracFe"& _ 
            "eId], [InsuranceId], [EvatId], [ValuationFactorId], [DateOfFullPayment], [Quanti"& _ 
            "ty], [Weight], [BookingId], [ServiceTypeId], [ShipModeId], [GoodsDescriptionId],"& _ 
            " [HandlingFee], [QuarantineFee], [Discount], [FreightCharge], [TotalAmount], [Or"& _ 
            "iginBarangay], [DestinationBarangay], [Notes], [CommodityId], [IsVatable], [Deli"& _ 
            "veryFeeId], [DangerousFeeId], [CreatedBy], [CreatedDate], [ModifiedBy], [Modifie"& _ 
            "dDate], [RecordStatus] FROM dbo.Shipment JOIN CHANGETABLE(CHANGES dbo.Shipment, "& _ 
            "@sync_last_received_anchor) CT ON CT.[ShipmentId] = dbo.Shipment.[ShipmentId] WH"& _ 
            "ERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_"& _ 
            "new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT "& _ 
            "<> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'db"& _ 
            "o.Shipment')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracki"& _ 
            "ng has cleaned up tracking information for table ''%s''. To recover from this er"& _ 
            "ror, the client must reinitialize its local database and try again',16,3,N'dbo.S"& _ 
            "hipment')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'ShipmentSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[ShipmentId] FROM CHANGETABLE(CHANGES d"& _ 
            "bo.Shipment, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D'"& _ 
            " AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTE"& _ 
            "XT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACK"& _ 
            "ING_MIN_VALID_VERSION(object_id(N'dbo.Shipment')) > @sync_last_received_anchor R"& _ 
            "AISERROR (N'SQL Server Change Tracking has cleaned up tracking information for t"& _ 
            "able ''%s''. To recover from this error, the client must reinitialize its local "& _ 
            "database and try again',16,3,N'dbo.Shipment')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'ShipmentSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.Shipment.[ShipmentId], [AirwayBillNo],"& _ 
            " [OriginCityId], [DestinationCityId], [OriginAddress], [DestinationAddress], [Co"& _ 
            "nsigneeId], [ShipperId], [AcceptedById], [DateAccepted], [CommodityTypeId], [Ser"& _ 
            "viceModeId], [PaymentModeId], [PaymentTermId], [Remarks], [DeclaredValue], [Fuel"& _ 
            "SurchargeId], [StatementOfAccountId], [AwbFeeId], [FreightCollectChargeId], [Per"& _ 
            "acFeeId], [InsuranceId], [EvatId], [ValuationFactorId], [DateOfFullPayment], [Qu"& _ 
            "antity], [Weight], [BookingId], [ServiceTypeId], [ShipModeId], [GoodsDescription"& _ 
            "Id], [HandlingFee], [QuarantineFee], [Discount], [FreightCharge], [TotalAmount],"& _ 
            " [OriginBarangay], [DestinationBarangay], [Notes], [CommodityId], [IsVatable], ["& _ 
            "DeliveryFeeId], [DangerousFeeId], [CreatedBy], [CreatedDate], [ModifiedBy], [Mod"& _ 
            "ifiedDate], [RecordStatus] FROM dbo.Shipment JOIN CHANGETABLE(CHANGES dbo.Shipme"& _ 
            "nt, @sync_last_received_anchor) CT ON CT.[ShipmentId] = dbo.Shipment.[ShipmentId"& _ 
            "] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_re"& _ 
            "ceived_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sy"& _ 
            "nc_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Ship"& _ 
            "ment')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has"& _ 
            " cleaned up tracking information for table ''%s''. To recover from this error, t"& _ 
            "he client must reinitialize its local database and try again',16,3,N'dbo.Shipmen"& _ 
            "t')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Shipment"
    End Sub
End Class

Partial Public Class ShipmentBasicFeeSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'ShipmentBasicFeeSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.ShipmentBa"& _ 
            "sicFee ([ShipmentBasicFeeId], [ShipmentFeeName], [Amount], [Description], [IsVat"& _ 
            "able], [EffectiveDate], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate]"& _ 
            ", [RecordStatus]) VALUES (@ShipmentBasicFeeId, @ShipmentFeeName, @Amount, @Descr"& _ 
            "iption, @IsVatable, @EffectiveDate, @CreatedBy, @CreatedDate, @ModifiedBy, @Modi"& _ 
            "fiedDate, @RecordStatus) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MI"& _ 
            "N_VALID_VERSION(object_id(N'dbo.ShipmentBasicFee')) > @sync_last_received_anchor"& _ 
            " RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information for"& _ 
            " table ''%s''. To recover from this error, the client must reinitialize its loca"& _ 
            "l database and try again',16,3,N'dbo.ShipmentBasicFee') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentBasicFeeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentFeeName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Amount", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsVatable", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EffectiveDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'ShipmentBasicFeeSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.ShipmentBasicFe"& _ 
            "e FROM dbo.ShipmentBasicFee JOIN CHANGETABLE(VERSION dbo.ShipmentBasicFee, ([Shi"& _ 
            "pmentBasicFeeId]), (@ShipmentBasicFeeId)) CT  ON CT.[ShipmentBasicFeeId] = dbo.S"& _ 
            "hipmentBasicFee.[ShipmentBasicFeeId] WHERE (@sync_force_write = 1 OR CT.SYS_CHAN"& _ 
            "GE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT"& _ 
            ".SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_bina"& _ 
            "ry)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(obje"& _ 
            "ct_id(N'dbo.ShipmentBasicFee')) > @sync_last_received_anchor RAISERROR (N'SQL Se"& _ 
            "rver Change Tracking has cleaned up tracking information for table ''%s''. To re"& _ 
            "cover from this error, the client must reinitialize its local database and try a"& _ 
            "gain',16,3,N'dbo.ShipmentBasicFee') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentBasicFeeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'ShipmentBasicFeeSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.ShipmentBasicFe"& _ 
            "e SET [ShipmentFeeName] = @ShipmentFeeName, [Amount] = @Amount, [Description] = "& _ 
            "@Description, [IsVatable] = @IsVatable, [EffectiveDate] = @EffectiveDate, [Creat"& _ 
            "edBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [M"& _ 
            "odifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus FROM dbo.ShipmentBa"& _ 
            "sicFee  JOIN CHANGETABLE(VERSION dbo.ShipmentBasicFee, ([ShipmentBasicFeeId]), ("& _ 
            "@ShipmentBasicFeeId)) CT  ON CT.[ShipmentBasicFeeId] = dbo.ShipmentBasicFee.[Shi"& _ 
            "pmentBasicFeeId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL O"& _ 
            "R CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT "& _ 
            "IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_c"& _ 
            "ount = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Shipment"& _ 
            "BasicFee')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking"& _ 
            " has cleaned up tracking information for table ''%s''. To recover from this erro"& _ 
            "r, the client must reinitialize its local database and try again',16,3,N'dbo.Shi"& _ 
            "pmentBasicFee') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentFeeName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Amount", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsVatable", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EffectiveDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentBasicFeeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'ShipmentBasicFeeSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[ShipmentBasicFeeId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM"& _ 
            " CHANGETABLE(CHANGES dbo.ShipmentBasicFee, @sync_last_received_anchor) CT WHERE "& _ 
            "(CT.[ShipmentBasicFeeId] = @ShipmentBasicFeeId AND CT.SYS_CHANGE_OPERATION = 'D'"& _ 
            ")"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentBasicFeeId", System.Data.SqlDbType.UniqueIdentifier))
        'ShipmentBasicFeeSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.ShipmentBasicFee.[ShipmentBasicFeeId], [ShipmentFeeName], [Amount], [D"& _ 
            "escription], [IsVatable], [EffectiveDate], [CreatedBy], [CreatedDate], [Modified"& _ 
            "By], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSIO"& _ 
            "N FROM dbo.ShipmentBasicFee JOIN CHANGETABLE(VERSION dbo.ShipmentBasicFee, ([Shi"& _ 
            "pmentBasicFeeId]), (@ShipmentBasicFeeId)) CT  ON CT.[ShipmentBasicFeeId] = dbo.S"& _ 
            "hipmentBasicFee.[ShipmentBasicFeeId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentBasicFeeId", System.Data.SqlDbType.UniqueIdentifier))
        'ShipmentBasicFeeSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_ShipmentBasicFee_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'ShipmentBasicFeeSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_ShipmentBasicFee_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'ShipmentBasicFeeSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_ShipmentBasicFee_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "ShipmentBasicFee"
    End Sub
End Class

Partial Public Class ShipmentStatusSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'ShipmentStatusSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.ShipmentSt"& _ 
            "atus ([ShippingStatusId], [ShippingStatusName], [Description], [CreatedBy], [Cre"& _ 
            "atedDate], [ModifiedBy], [ModifiedDate], [RecordStatus]) VALUES (@ShippingStatus"& _ 
            "Id, @ShippingStatusName, @Description, @CreatedBy, @CreatedDate, @ModifiedBy, @M"& _ 
            "odifiedDate, @RecordStatus) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING"& _ 
            "_MIN_VALID_VERSION(object_id(N'dbo.ShipmentStatus')) > @sync_last_received_ancho"& _ 
            "r RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information fo"& _ 
            "r table ''%s''. To recover from this error, the client must reinitialize its loc"& _ 
            "al database and try again',16,3,N'dbo.ShipmentStatus') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShippingStatusId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShippingStatusName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'ShipmentStatusSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.ShipmentStatus "& _ 
            "FROM dbo.ShipmentStatus JOIN CHANGETABLE(VERSION dbo.ShipmentStatus, ([ShippingS"& _ 
            "tatusId]), (@ShippingStatusId)) CT  ON CT.[ShippingStatusId] = dbo.ShipmentStatu"& _ 
            "s.[ShippingStatusId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NU"& _ 
            "LL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONT"& _ 
            "EXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_r"& _ 
            "ow_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Ship"& _ 
            "mentStatus')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracki"& _ 
            "ng has cleaned up tracking information for table ''%s''. To recover from this er"& _ 
            "ror, the client must reinitialize its local database and try again',16,3,N'dbo.S"& _ 
            "hipmentStatus') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShippingStatusId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'ShipmentStatusSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.ShipmentStatus "& _ 
            "SET [ShippingStatusName] = @ShippingStatusName, [Description] = @Description, [C"& _ 
            "reatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy"& _ 
            ", [ModifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus FROM dbo.Shipme"& _ 
            "ntStatus  JOIN CHANGETABLE(VERSION dbo.ShipmentStatus, ([ShippingStatusId]), (@S"& _ 
            "hippingStatusId)) CT  ON CT.[ShippingStatusId] = dbo.ShipmentStatus.[ShippingSta"& _ 
            "tusId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_C"& _ 
            "HANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NUL"& _ 
            "L AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@r"& _ 
            "owcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.ShipmentStatus')) "& _ 
            "> @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned"& _ 
            " up tracking information for table ''%s''. To recover from this error, the clien"& _ 
            "t must reinitialize its local database and try again',16,3,N'dbo.ShipmentStatus'"& _ 
            ") "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShippingStatusName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShippingStatusId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'ShipmentStatusSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[ShippingStatusId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM C"& _ 
            "HANGETABLE(CHANGES dbo.ShipmentStatus, @sync_last_received_anchor) CT WHERE (CT."& _ 
            "[ShippingStatusId] = @ShippingStatusId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShippingStatusId", System.Data.SqlDbType.UniqueIdentifier))
        'ShipmentStatusSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.ShipmentStatus.[ShippingStatusId], [ShippingStatusName], [Description]"& _ 
            ", [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.S"& _ 
            "YS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.ShipmentStatus JOIN CHANGETABL"& _ 
            "E(VERSION dbo.ShipmentStatus, ([ShippingStatusId]), (@ShippingStatusId)) CT  ON "& _ 
            "CT.[ShippingStatusId] = dbo.ShipmentStatus.[ShippingStatusId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShippingStatusId", System.Data.SqlDbType.UniqueIdentifier))
        'ShipmentStatusSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.ShipmentStatus.[ShippingStatusId], [ShippingS"& _ 
            "tatusName], [Description], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDa"& _ 
            "te], [RecordStatus] FROM dbo.ShipmentStatus LEFT OUTER JOIN CHANGETABLE(CHANGES "& _ 
            "dbo.ShipmentStatus, @sync_last_received_anchor) CT ON CT.[ShippingStatusId] = db"& _ 
            "o.ShipmentStatus.[ShippingStatusId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.S"& _ 
            "YS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.ShipmentStat"& _ 
            "us.[ShippingStatusId], [ShippingStatusName], [Description], [CreatedBy], [Create"& _ 
            "dDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.ShipmentStatus JOI"& _ 
            "N CHANGETABLE(CHANGES dbo.ShipmentStatus, @sync_last_received_anchor) CT ON CT.["& _ 
            "ShippingStatusId] = dbo.ShipmentStatus.[ShippingStatusId] WHERE (CT.SYS_CHANGE_O"& _ 
            "PERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anchor "& _ 
            "AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_b"& _ 
            "inary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.ShipmentStatus')) "& _ 
            "> @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned"& _ 
            " up tracking information for table ''%s''. To recover from this error, the clien"& _ 
            "t must reinitialize its local database and try again',16,3,N'dbo.ShipmentStatus'"& _ 
            ")  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'ShipmentStatusSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[ShippingStatusId] FROM CHANGETABLE(CHA"& _ 
            "NGES dbo.ShipmentStatus, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPE"& _ 
            "RATION = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_"& _ 
            "CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF "& _ 
            "CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.ShipmentStatus')) > @sync_last"& _ 
            "_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking"& _ 
            " information for table ''%s''. To recover from this error, the client must reini"& _ 
            "tialize its local database and try again',16,3,N'dbo.ShipmentStatus')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'ShipmentStatusSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.ShipmentStatus.[ShippingStatusId], [Sh"& _ 
            "ippingStatusName], [Description], [CreatedBy], [CreatedDate], [ModifiedBy], [Mod"& _ 
            "ifiedDate], [RecordStatus] FROM dbo.ShipmentStatus JOIN CHANGETABLE(CHANGES dbo."& _ 
            "ShipmentStatus, @sync_last_received_anchor) CT ON CT.[ShippingStatusId] = dbo.Sh"& _ 
            "ipmentStatus.[ShippingStatusId] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_"& _ 
            "CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL O"& _ 
            "R CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALI"& _ 
            "D_VERSION(object_id(N'dbo.ShipmentStatus')) > @sync_last_received_anchor RAISERR"& _ 
            "OR (N'SQL Server Change Tracking has cleaned up tracking information for table '"& _ 
            "'%s''. To recover from this error, the client must reinitialize its local databa"& _ 
            "se and try again',16,3,N'dbo.ShipmentStatus')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "ShipmentStatus"
    End Sub
End Class

Partial Public Class ShipModeSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'ShipModeSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.ShipMode ("& _ 
            "[ShipModeId], [ShipModeName], [CreatedBy], [CreatedDate], [ModifiedBy], [Modifie"& _ 
            "dDate], [RecordStatus], [Description]) VALUES (@ShipModeId, @ShipModeName, @Crea"& _ 
            "tedBy, @CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus, @Description) SE"& _ 
            "T @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N"& _ 
            "'dbo.ShipMode')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tra"& _ 
            "cking has cleaned up tracking information for table ''%s''. To recover from this"& _ 
            " error, the client must reinitialize its local database and try again',16,3,N'db"& _ 
            "o.ShipMode') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipModeName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'ShipModeSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.ShipMode FROM d"& _ 
            "bo.ShipMode JOIN CHANGETABLE(VERSION dbo.ShipMode, ([ShipModeId]), (@ShipModeId)"& _ 
            ") CT  ON CT.[ShipModeId] = dbo.ShipMode.[ShipModeId] WHERE (@sync_force_write = "& _ 
            "1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_receiv"& _ 
            "ed_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @syn"& _ 
            "c_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VA"& _ 
            "LID_VERSION(object_id(N'dbo.ShipMode')) > @sync_last_received_anchor RAISERROR ("& _ 
            "N'SQL Server Change Tracking has cleaned up tracking information for table ''%s'"& _ 
            "'. To recover from this error, the client must reinitialize its local database a"& _ 
            "nd try again',16,3,N'dbo.ShipMode') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'ShipModeSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.ShipMode SET [S"& _ 
            "hipModeName] = @ShipModeName, [CreatedBy] = @CreatedBy, [CreatedDate] = @Created"& _ 
            "Date, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, [RecordStatus]"& _ 
            " = @RecordStatus, [Description] = @Description FROM dbo.ShipMode  JOIN CHANGETAB"& _ 
            "LE(VERSION dbo.ShipMode, ([ShipModeId]), (@ShipModeId)) CT  ON CT.[ShipModeId] ="& _ 
            " dbo.ShipMode.[ShipModeId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION"& _ 
            " IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANG"& _ 
            "E_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @"& _ 
            "sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'db"& _ 
            "o.ShipMode')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracki"& _ 
            "ng has cleaned up tracking information for table ''%s''. To recover from this er"& _ 
            "ror, the client must reinitialize its local database and try again',16,3,N'dbo.S"& _ 
            "hipMode') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipModeName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipModeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'ShipModeSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[ShipModeId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGET"& _ 
            "ABLE(CHANGES dbo.ShipMode, @sync_last_received_anchor) CT WHERE (CT.[ShipModeId]"& _ 
            " = @ShipModeId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipModeId", System.Data.SqlDbType.UniqueIdentifier))
        'ShipModeSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.ShipMode.[ShipModeId], [ShipModeName], [CreatedBy], [CreatedDate], [Mo"& _ 
            "difiedBy], [ModifiedDate], [RecordStatus], [Description], CT.SYS_CHANGE_CONTEXT,"& _ 
            " CT.SYS_CHANGE_VERSION FROM dbo.ShipMode JOIN CHANGETABLE(VERSION dbo.ShipMode, "& _ 
            "([ShipModeId]), (@ShipModeId)) CT  ON CT.[ShipModeId] = dbo.ShipMode.[ShipModeId"& _ 
            "]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipModeId", System.Data.SqlDbType.UniqueIdentifier))
        'ShipModeSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_ShipMode_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'ShipModeSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_ShipMode_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'ShipModeSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_ShipMode_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "ShipMode"
    End Sub
End Class

Partial Public Class StatementOfAccountSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'StatementOfAccountSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.StatementO"& _ 
            "fAccount ([StatementOfAccountId], [StatementOfAccountNo], [StatementOfAccountDat"& _ 
            "e], [StatementOfAccountPeriodFrom], [StatementOfAccountPeriodUntil], [AmountDue]"& _ 
            ", [CompanyId], [SoaDueDate], [CiNo], [Remarks], [CreatedBy], [CreatedDate], [Mod"& _ 
            "ifiedBy], [ModifiedDate], [RecordStatus]) VALUES (@StatementOfAccountId, @Statem"& _ 
            "entOfAccountNo, @StatementOfAccountDate, @StatementOfAccountPeriodFrom, @Stateme"& _ 
            "ntOfAccountPeriodUntil, @AmountDue, @CompanyId, @SoaDueDate, @CiNo, @Remarks, @C"& _ 
            "reatedBy, @CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_row"& _ 
            "_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Statem"& _ 
            "entOfAccount')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Trac"& _ 
            "king has cleaned up tracking information for table ''%s''. To recover from this "& _ 
            "error, the client must reinitialize its local database and try again',16,3,N'dbo"& _ 
            ".StatementOfAccount') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountPeriodFrom", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountPeriodUntil", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AmountDue", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CompanyId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SoaDueDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CiNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'StatementOfAccountSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.StatementOfAcco"& _ 
            "unt FROM dbo.StatementOfAccount JOIN CHANGETABLE(VERSION dbo.StatementOfAccount,"& _ 
            " ([StatementOfAccountId]), (@StatementOfAccountId)) CT  ON CT.[StatementOfAccoun"& _ 
            "tId] = dbo.StatementOfAccount.[StatementOfAccountId] WHERE (@sync_force_write = "& _ 
            "1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_receiv"& _ 
            "ed_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @syn"& _ 
            "c_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VA"& _ 
            "LID_VERSION(object_id(N'dbo.StatementOfAccount')) > @sync_last_received_anchor R"& _ 
            "AISERROR (N'SQL Server Change Tracking has cleaned up tracking information for t"& _ 
            "able ''%s''. To recover from this error, the client must reinitialize its local "& _ 
            "database and try again',16,3,N'dbo.StatementOfAccount') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'StatementOfAccountSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.StatementOfAcco"& _ 
            "unt SET [StatementOfAccountNo] = @StatementOfAccountNo, [StatementOfAccountDate]"& _ 
            " = @StatementOfAccountDate, [StatementOfAccountPeriodFrom] = @StatementOfAccount"& _ 
            "PeriodFrom, [StatementOfAccountPeriodUntil] = @StatementOfAccountPeriodUntil, [A"& _ 
            "mountDue] = @AmountDue, [CompanyId] = @CompanyId, [SoaDueDate] = @SoaDueDate, [C"& _ 
            "iNo] = @CiNo, [Remarks] = @Remarks, [CreatedBy] = @CreatedBy, [CreatedDate] = @C"& _ 
            "reatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, [RecordS"& _ 
            "tatus] = @RecordStatus FROM dbo.StatementOfAccount  JOIN CHANGETABLE(VERSION dbo"& _ 
            ".StatementOfAccount, ([StatementOfAccountId]), (@StatementOfAccountId)) CT  ON C"& _ 
            "T.[StatementOfAccountId] = dbo.StatementOfAccount.[StatementOfAccountId] WHERE ("& _ 
            "@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION "& _ 
            "<= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_C"& _ 
            "HANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CH"& _ 
            "ANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.StatementOfAccount')) > @sync_la"& _ 
            "st_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracki"& _ 
            "ng information for table ''%s''. To recover from this error, the client must rei"& _ 
            "nitialize its local database and try again',16,3,N'dbo.StatementOfAccount') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountPeriodFrom", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountPeriodUntil", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AmountDue", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CompanyId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SoaDueDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CiNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'StatementOfAccountSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[StatementOfAccountId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FR"& _ 
            "OM CHANGETABLE(CHANGES dbo.StatementOfAccount, @sync_last_received_anchor) CT WH"& _ 
            "ERE (CT.[StatementOfAccountId] = @StatementOfAccountId AND CT.SYS_CHANGE_OPERATI"& _ 
            "ON = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountId", System.Data.SqlDbType.UniqueIdentifier))
        'StatementOfAccountSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.StatementOfAccount.[StatementOfAccountId], [StatementOfAccountNo], [St"& _ 
            "atementOfAccountDate], [StatementOfAccountPeriodFrom], [StatementOfAccountPeriod"& _ 
            "Until], [AmountDue], [CompanyId], [SoaDueDate], [CiNo], [Remarks], [CreatedBy], "& _ 
            "[CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTE"& _ 
            "XT, CT.SYS_CHANGE_VERSION FROM dbo.StatementOfAccount JOIN CHANGETABLE(VERSION d"& _ 
            "bo.StatementOfAccount, ([StatementOfAccountId]), (@StatementOfAccountId)) CT  ON"& _ 
            " CT.[StatementOfAccountId] = dbo.StatementOfAccount.[StatementOfAccountId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountId", System.Data.SqlDbType.UniqueIdentifier))
        'StatementOfAccountSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_StatementOfAccount_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'StatementOfAccountSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_StatementOfAccount_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'StatementOfAccountSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_StatementOfAccount_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "StatementOfAccount"
    End Sub
End Class

Partial Public Class StatementOfAccountNumberSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'StatementOfAccountNumberSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = " SET IDENTITY_INSERT dbo.StatementOfAccountNumber ON ;WITH CHANGE_TRACKING_CONTEX"& _ 
            "T (@sync_client_id_binary) INSERT INTO dbo.StatementOfAccountNumber ([SoaNumberI"& _ 
            "d], [StatementOfAccountId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedD"& _ 
            "ate], [RecordStatus]) VALUES (@SoaNumberId, @StatementOfAccountId, @CreatedBy, @"& _ 
            "CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_row_count = @@"& _ 
            "rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.StatementOfAccoun"& _ 
            "tNumber')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking "& _ 
            "has cleaned up tracking information for table ''%s''. To recover from this error"& _ 
            ", the client must reinitialize its local database and try again',16,3,N'dbo.Stat"& _ 
            "ementOfAccountNumber')  SET IDENTITY_INSERT dbo.StatementOfAccountNumber OFF "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SoaNumberId", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'StatementOfAccountNumberSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.StatementOfAcco"& _ 
            "untNumber FROM dbo.StatementOfAccountNumber JOIN CHANGETABLE(VERSION dbo.Stateme"& _ 
            "ntOfAccountNumber, ([SoaNumberId]), (@SoaNumberId)) CT  ON CT.[SoaNumberId] = db"& _ 
            "o.StatementOfAccountNumber.[SoaNumberId] WHERE (@sync_force_write = 1 OR CT.SYS_"& _ 
            "CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR"& _ 
            " (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_"& _ 
            "binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION("& _ 
            "object_id(N'dbo.StatementOfAccountNumber')) > @sync_last_received_anchor RAISERR"& _ 
            "OR (N'SQL Server Change Tracking has cleaned up tracking information for table '"& _ 
            "'%s''. To recover from this error, the client must reinitialize its local databa"& _ 
            "se and try again',16,3,N'dbo.StatementOfAccountNumber') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SoaNumberId", System.Data.SqlDbType.Int))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'StatementOfAccountNumberSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.StatementOfAcco"& _ 
            "untNumber SET [StatementOfAccountId] = @StatementOfAccountId, [CreatedBy] = @Cre"& _ 
            "atedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate]"& _ 
            " = @ModifiedDate, [RecordStatus] = @RecordStatus FROM dbo.StatementOfAccountNumb"& _ 
            "er  JOIN CHANGETABLE(VERSION dbo.StatementOfAccountNumber, ([SoaNumberId]), (@So"& _ 
            "aNumberId)) CT  ON CT.[SoaNumberId] = dbo.StatementOfAccountNumber.[SoaNumberId]"& _ 
            " WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_"& _ 
            "VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND "& _ 
            "CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcoun"& _ 
            "t; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.StatementOfAccountNumber"& _ 
            "')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cle"& _ 
            "aned up tracking information for table ''%s''. To recover from this error, the c"& _ 
            "lient must reinitialize its local database and try again',16,3,N'dbo.StatementOf"& _ 
            "AccountNumber') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SoaNumberId", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'StatementOfAccountNumberSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[SoaNumberId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGE"& _ 
            "TABLE(CHANGES dbo.StatementOfAccountNumber, @sync_last_received_anchor) CT WHERE"& _ 
            " (CT.[SoaNumberId] = @SoaNumberId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SoaNumberId", System.Data.SqlDbType.Int))
        'StatementOfAccountNumberSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.StatementOfAccountNumber.[SoaNumberId], [StatementOfAccountId], [Creat"& _ 
            "edBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANG"& _ 
            "E_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.StatementOfAccountNumber JOIN CHANGETA"& _ 
            "BLE(VERSION dbo.StatementOfAccountNumber, ([SoaNumberId]), (@SoaNumberId)) CT  O"& _ 
            "N CT.[SoaNumberId] = dbo.StatementOfAccountNumber.[SoaNumberId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SoaNumberId", System.Data.SqlDbType.Int))
        'StatementOfAccountNumberSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_StatementOfAccountNumber_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'StatementOfAccountNumberSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_StatementOfAccountNumber_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'StatementOfAccountNumberSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_StatementOfAccountNumber_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "StatementOfAccountNumber"
    End Sub
End Class

Partial Public Class StatementOfAccountPaymentSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'StatementOfAccountPaymentSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.StatementO"& _ 
            "fAccountPayment ([StatementOfAccountPaymentId], [StatementOfAccountId], [OrNo], "& _ 
            "[PaymentDate], [Amount], [PaymentTypeId], [CheckBankName], [CheckNo], [CheckDate"& _ 
            "], [ReceivedById], [Remarks], [CreatedBy], [CreatedDate], [ModifiedBy], [Modifie"& _ 
            "dDate], [RecordStatus], [PrNo]) VALUES (@StatementOfAccountPaymentId, @Statement"& _ 
            "OfAccountId, @OrNo, @PaymentDate, @Amount, @PaymentTypeId, @CheckBankName, @Chec"& _ 
            "kNo, @CheckDate, @ReceivedById, @Remarks, @CreatedBy, @CreatedDate, @ModifiedBy,"& _ 
            " @ModifiedDate, @RecordStatus, @PrNo) SET @sync_row_count = @@rowcount; IF CHANG"& _ 
            "E_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.StatementOfAccountPayment')) > @syn"& _ 
            "c_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tr"& _ 
            "acking information for table ''%s''. To recover from this error, the client must"& _ 
            " reinitialize its local database and try again',16,3,N'dbo.StatementOfAccountPay"& _ 
            "ment') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountPaymentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OrNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Amount", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CheckBankName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CheckNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CheckDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ReceivedById", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PrNo", System.Data.SqlDbType.NVarChar))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'StatementOfAccountPaymentSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.StatementOfAcco"& _ 
            "untPayment FROM dbo.StatementOfAccountPayment JOIN CHANGETABLE(VERSION dbo.State"& _ 
            "mentOfAccountPayment, ([StatementOfAccountPaymentId]), (@StatementOfAccountPayme"& _ 
            "ntId)) CT  ON CT.[StatementOfAccountPaymentId] = dbo.StatementOfAccountPayment.["& _ 
            "StatementOfAccountPaymentId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSI"& _ 
            "ON IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHA"& _ 
            "NGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET"& _ 
            " @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'"& _ 
            "dbo.StatementOfAccountPayment')) > @sync_last_received_anchor RAISERROR (N'SQL S"& _ 
            "erver Change Tracking has cleaned up tracking information for table ''%s''. To r"& _ 
            "ecover from this error, the client must reinitialize its local database and try "& _ 
            "again',16,3,N'dbo.StatementOfAccountPayment') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountPaymentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'StatementOfAccountPaymentSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.StatementOfAcco"& _ 
            "untPayment SET [StatementOfAccountId] = @StatementOfAccountId, [OrNo] = @OrNo, ["& _ 
            "PaymentDate] = @PaymentDate, [Amount] = @Amount, [PaymentTypeId] = @PaymentTypeI"& _ 
            "d, [CheckBankName] = @CheckBankName, [CheckNo] = @CheckNo, [CheckDate] = @CheckD"& _ 
            "ate, [ReceivedById] = @ReceivedById, [Remarks] = @Remarks, [CreatedBy] = @Create"& _ 
            "dBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [ModifiedDate] = "& _ 
            "@ModifiedDate, [RecordStatus] = @RecordStatus, [PrNo] = @PrNo FROM dbo.Statement"& _ 
            "OfAccountPayment  JOIN CHANGETABLE(VERSION dbo.StatementOfAccountPayment, ([Stat"& _ 
            "ementOfAccountPaymentId]), (@StatementOfAccountPaymentId)) CT  ON CT.[StatementO"& _ 
            "fAccountPaymentId] = dbo.StatementOfAccountPayment.[StatementOfAccountPaymentId]"& _ 
            " WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_"& _ 
            "VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND "& _ 
            "CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcoun"& _ 
            "t; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.StatementOfAccountPaymen"& _ 
            "t')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cl"& _ 
            "eaned up tracking information for table ''%s''. To recover from this error, the "& _ 
            "client must reinitialize its local database and try again',16,3,N'dbo.StatementO"& _ 
            "fAccountPayment') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OrNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Amount", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PaymentTypeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CheckBankName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CheckNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CheckDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ReceivedById", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PrNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountPaymentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'StatementOfAccountPaymentSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[StatementOfAccountPaymentId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VER"& _ 
            "SION FROM CHANGETABLE(CHANGES dbo.StatementOfAccountPayment, @sync_last_received"& _ 
            "_anchor) CT WHERE (CT.[StatementOfAccountPaymentId] = @StatementOfAccountPayment"& _ 
            "Id AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountPaymentId", System.Data.SqlDbType.UniqueIdentifier))
        'StatementOfAccountPaymentSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.StatementOfAccountPayment.[StatementOfAccountPaymentId], [StatementOfA"& _ 
            "ccountId], [OrNo], [PaymentDate], [Amount], [PaymentTypeId], [CheckBankName], [C"& _ 
            "heckNo], [CheckDate], [ReceivedById], [Remarks], [CreatedBy], [CreatedDate], [Mo"& _ 
            "difiedBy], [ModifiedDate], [RecordStatus], [PrNo], CT.SYS_CHANGE_CONTEXT, CT.SYS"& _ 
            "_CHANGE_VERSION FROM dbo.StatementOfAccountPayment JOIN CHANGETABLE(VERSION dbo."& _ 
            "StatementOfAccountPayment, ([StatementOfAccountPaymentId]), (@StatementOfAccount"& _ 
            "PaymentId)) CT  ON CT.[StatementOfAccountPaymentId] = dbo.StatementOfAccountPaym"& _ 
            "ent.[StatementOfAccountPaymentId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@StatementOfAccountPaymentId", System.Data.SqlDbType.UniqueIdentifier))
        'StatementOfAccountPaymentSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_StatementOfAccountPayment_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'StatementOfAccountPaymentSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_StatementOfAccountPayment_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'StatementOfAccountPaymentSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_StatementOfAccountPayment_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "StatementOfAccountPayment"
    End Sub
End Class

Partial Public Class TransShipmentLegSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'TransShipmentLegSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.TransShipm"& _ 
            "entLeg ([TransShipmentLegId], [LegId], [LegOrder], [TransShipmentRouteId], [Crea"& _ 
            "tedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus]) VALUES (@Tr"& _ 
            "ansShipmentLegId, @LegId, @LegOrder, @TransShipmentRouteId, @CreatedBy, @Created"& _ 
            "Date, @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_row_count = @@rowcoun"& _ 
            "t; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.TransShipmentLeg')) > @s"& _ 
            "ync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up "& _ 
            "tracking information for table ''%s''. To recover from this error, the client mu"& _ 
            "st reinitialize its local database and try again',16,3,N'dbo.TransShipmentLeg') "& _ 
            ""
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TransShipmentLegId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LegId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LegOrder", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TransShipmentRouteId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'TransShipmentLegSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.TransShipmentLe"& _ 
            "g FROM dbo.TransShipmentLeg JOIN CHANGETABLE(VERSION dbo.TransShipmentLeg, ([Tra"& _ 
            "nsShipmentLegId]), (@TransShipmentLegId)) CT  ON CT.[TransShipmentLegId] = dbo.T"& _ 
            "ransShipmentLeg.[TransShipmentLegId] WHERE (@sync_force_write = 1 OR CT.SYS_CHAN"& _ 
            "GE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT"& _ 
            ".SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_bina"& _ 
            "ry)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(obje"& _ 
            "ct_id(N'dbo.TransShipmentLeg')) > @sync_last_received_anchor RAISERROR (N'SQL Se"& _ 
            "rver Change Tracking has cleaned up tracking information for table ''%s''. To re"& _ 
            "cover from this error, the client must reinitialize its local database and try a"& _ 
            "gain',16,3,N'dbo.TransShipmentLeg') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TransShipmentLegId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'TransShipmentLegSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.TransShipmentLe"& _ 
            "g SET [LegId] = @LegId, [LegOrder] = @LegOrder, [TransShipmentRouteId] = @TransS"& _ 
            "hipmentRouteId, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [Modifie"& _ 
            "dBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStat"& _ 
            "us FROM dbo.TransShipmentLeg  JOIN CHANGETABLE(VERSION dbo.TransShipmentLeg, ([T"& _ 
            "ransShipmentLegId]), (@TransShipmentLegId)) CT  ON CT.[TransShipmentLegId] = dbo"& _ 
            ".TransShipmentLeg.[TransShipmentLegId] WHERE (@sync_force_write = 1 OR CT.SYS_CH"& _ 
            "ANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR ("& _ 
            "CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_bi"& _ 
            "nary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(ob"& _ 
            "ject_id(N'dbo.TransShipmentLeg')) > @sync_last_received_anchor RAISERROR (N'SQL "& _ 
            "Server Change Tracking has cleaned up tracking information for table ''%s''. To "& _ 
            "recover from this error, the client must reinitialize its local database and try"& _ 
            " again',16,3,N'dbo.TransShipmentLeg') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LegId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LegOrder", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TransShipmentRouteId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TransShipmentLegId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'TransShipmentLegSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[TransShipmentLegId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM"& _ 
            " CHANGETABLE(CHANGES dbo.TransShipmentLeg, @sync_last_received_anchor) CT WHERE "& _ 
            "(CT.[TransShipmentLegId] = @TransShipmentLegId AND CT.SYS_CHANGE_OPERATION = 'D'"& _ 
            ")"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TransShipmentLegId", System.Data.SqlDbType.UniqueIdentifier))
        'TransShipmentLegSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.TransShipmentLeg.[TransShipmentLegId], [LegId], [LegOrder], [TransShip"& _ 
            "mentRouteId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordS"& _ 
            "tatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.TransShipmentLeg J"& _ 
            "OIN CHANGETABLE(VERSION dbo.TransShipmentLeg, ([TransShipmentLegId]), (@TransShi"& _ 
            "pmentLegId)) CT  ON CT.[TransShipmentLegId] = dbo.TransShipmentLeg.[TransShipmen"& _ 
            "tLegId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TransShipmentLegId", System.Data.SqlDbType.UniqueIdentifier))
        'TransShipmentLegSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_TransShipmentLeg_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'TransShipmentLegSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_TransShipmentLeg_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'TransShipmentLegSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_TransShipmentLeg_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "TransShipmentLeg"
    End Sub
End Class

Partial Public Class TransShipmentRouteSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'TransShipmentRouteSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.TransShipm"& _ 
            "entRoute ([TransShipmentRouteId], [OriginCityId], [DestinationCityId], [CreatedB"& _ 
            "y], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], [TransShipmentR"& _ 
            "outeName]) VALUES (@TransShipmentRouteId, @OriginCityId, @DestinationCityId, @Cr"& _ 
            "eatedBy, @CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus, @TransShipment"& _ 
            "RouteName) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSIO"& _ 
            "N(object_id(N'dbo.TransShipmentRoute')) > @sync_last_received_anchor RAISERROR ("& _ 
            "N'SQL Server Change Tracking has cleaned up tracking information for table ''%s'"& _ 
            "'. To recover from this error, the client must reinitialize its local database a"& _ 
            "nd try again',16,3,N'dbo.TransShipmentRoute') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TransShipmentRouteId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TransShipmentRouteName", System.Data.SqlDbType.NVarChar))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'TransShipmentRouteSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.TransShipmentRo"& _ 
            "ute FROM dbo.TransShipmentRoute JOIN CHANGETABLE(VERSION dbo.TransShipmentRoute,"& _ 
            " ([TransShipmentRouteId]), (@TransShipmentRouteId)) CT  ON CT.[TransShipmentRout"& _ 
            "eId] = dbo.TransShipmentRoute.[TransShipmentRouteId] WHERE (@sync_force_write = "& _ 
            "1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_receiv"& _ 
            "ed_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @syn"& _ 
            "c_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VA"& _ 
            "LID_VERSION(object_id(N'dbo.TransShipmentRoute')) > @sync_last_received_anchor R"& _ 
            "AISERROR (N'SQL Server Change Tracking has cleaned up tracking information for t"& _ 
            "able ''%s''. To recover from this error, the client must reinitialize its local "& _ 
            "database and try again',16,3,N'dbo.TransShipmentRoute') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TransShipmentRouteId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'TransShipmentRouteSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.TransShipmentRo"& _ 
            "ute SET [OriginCityId] = @OriginCityId, [DestinationCityId] = @DestinationCityId"& _ 
            ", [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @Modifi"& _ 
            "edBy, [ModifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus, [TransShip"& _ 
            "mentRouteName] = @TransShipmentRouteName FROM dbo.TransShipmentRoute  JOIN CHANG"& _ 
            "ETABLE(VERSION dbo.TransShipmentRoute, ([TransShipmentRouteId]), (@TransShipment"& _ 
            "RouteId)) CT  ON CT.[TransShipmentRouteId] = dbo.TransShipmentRoute.[TransShipme"& _ 
            "ntRouteId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.S"& _ 
            "YS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT"& _ 
            " NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count ="& _ 
            " @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.TransShipmentR"& _ 
            "oute')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has"& _ 
            " cleaned up tracking information for table ''%s''. To recover from this error, t"& _ 
            "he client must reinitialize its local database and try again',16,3,N'dbo.TransSh"& _ 
            "ipmentRoute') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TransShipmentRouteName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TransShipmentRouteId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'TransShipmentRouteSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[TransShipmentRouteId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FR"& _ 
            "OM CHANGETABLE(CHANGES dbo.TransShipmentRoute, @sync_last_received_anchor) CT WH"& _ 
            "ERE (CT.[TransShipmentRouteId] = @TransShipmentRouteId AND CT.SYS_CHANGE_OPERATI"& _ 
            "ON = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TransShipmentRouteId", System.Data.SqlDbType.UniqueIdentifier))
        'TransShipmentRouteSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.TransShipmentRoute.[TransShipmentRouteId], [OriginCityId], [Destinatio"& _ 
            "nCityId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatu"& _ 
            "s], [TransShipmentRouteName], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM "& _ 
            "dbo.TransShipmentRoute JOIN CHANGETABLE(VERSION dbo.TransShipmentRoute, ([TransS"& _ 
            "hipmentRouteId]), (@TransShipmentRouteId)) CT  ON CT.[TransShipmentRouteId] = db"& _ 
            "o.TransShipmentRoute.[TransShipmentRouteId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@TransShipmentRouteId", System.Data.SqlDbType.UniqueIdentifier))
        'TransShipmentRouteSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "sp_sync_TransShipmentRoute_SelectIncrementalInsert"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'TransShipmentRouteSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "sp_sync_TransShipmentRoute_SelectIncrementalDelete"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'TransShipmentRouteSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "sp_sync_TransShipmentRoute_SelectIncrementalUpdate"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.StoredProcedure
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "TransShipmentRoute"
    End Sub
End Class

Partial Public Class BookingSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'BookingSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Booking (["& _ 
            "BookingId], [BookingNo], [DateBooked], [BookedById], [ConsigneeId], [ShipperId],"& _ 
            " [DestinationAddress1], [Remarks], [BookingRemarkId], [BookingStatusId], [HasDai"& _ 
            "lyBooking], [PreviousBookingId], [OriginCityId], [DestinationCityId], [AssignedT"& _ 
            "oAreaId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatu"& _ 
            "s], [OriginAddress1], [OriginAddress2], [OriginBarangay], [DestinationAddress2],"& _ 
            " [DestinationBarangay], [OriginStreet], [DestinationStreet]) VALUES (@BookingId,"& _ 
            " @BookingNo, @DateBooked, @BookedById, @ConsigneeId, @ShipperId, @DestinationAdd"& _ 
            "ress1, @Remarks, @BookingRemarkId, @BookingStatusId, @HasDailyBooking, @Previous"& _ 
            "BookingId, @OriginCityId, @DestinationCityId, @AssignedToAreaId, @CreatedBy, @Cr"& _ 
            "eatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus, @OriginAddress1, @OriginAd"& _ 
            "dress2, @OriginBarangay, @DestinationAddress2, @DestinationBarangay, @OriginStre"& _ 
            "et, @DestinationStreet) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN"& _ 
            "_VALID_VERSION(object_id(N'dbo.Booking')) > @sync_last_received_anchor RAISERROR"& _ 
            " (N'SQL Server Change Tracking has cleaned up tracking information for table ''%"& _ 
            "s''. To recover from this error, the client must reinitialize its local database"& _ 
            " and try again',16,3,N'dbo.Booking') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DateBooked", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookedById", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ConsigneeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipperId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationAddress1", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingRemarkId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingStatusId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasDailyBooking", System.Data.SqlDbType.Bit))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PreviousBookingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AssignedToAreaId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginAddress1", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginAddress2", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginBarangay", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationAddress2", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationBarangay", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginStreet", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationStreet", System.Data.SqlDbType.NVarChar))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'BookingSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Booking FROM db"& _ 
            "o.Booking JOIN CHANGETABLE(VERSION dbo.Booking, ([BookingId]), (@BookingId)) CT "& _ 
            " ON CT.[BookingId] = dbo.Booking.[BookingId] WHERE (@sync_force_write = 1 OR CT."& _ 
            "SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_ancho"& _ 
            "r OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client"& _ 
            "_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERS"& _ 
            "ION(object_id(N'dbo.Booking')) > @sync_last_received_anchor RAISERROR (N'SQL Ser"& _ 
            "ver Change Tracking has cleaned up tracking information for table ''%s''. To rec"& _ 
            "over from this error, the client must reinitialize its local database and try ag"& _ 
            "ain',16,3,N'dbo.Booking') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'BookingSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Booking SET [Bo"& _ 
            "okingNo] = @BookingNo, [DateBooked] = @DateBooked, [BookedById] = @BookedById, ["& _ 
            "ConsigneeId] = @ConsigneeId, [ShipperId] = @ShipperId, [DestinationAddress1] = @"& _ 
            "DestinationAddress1, [Remarks] = @Remarks, [BookingRemarkId] = @BookingRemarkId,"& _ 
            " [BookingStatusId] = @BookingStatusId, [HasDailyBooking] = @HasDailyBooking, [Pr"& _ 
            "eviousBookingId] = @PreviousBookingId, [OriginCityId] = @OriginCityId, [Destinat"& _ 
            "ionCityId] = @DestinationCityId, [AssignedToAreaId] = @AssignedToAreaId, [Create"& _ 
            "dBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy, [Mo"& _ 
            "difiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus, [OriginAddress1] = "& _ 
            "@OriginAddress1, [OriginAddress2] = @OriginAddress2, [OriginBarangay] = @OriginB"& _ 
            "arangay, [DestinationAddress2] = @DestinationAddress2, [DestinationBarangay] = @"& _ 
            "DestinationBarangay, [OriginStreet] = @OriginStreet, [DestinationStreet] = @Dest"& _ 
            "inationStreet FROM dbo.Booking  JOIN CHANGETABLE(VERSION dbo.Booking, ([BookingI"& _ 
            "d]), (@BookingId)) CT  ON CT.[BookingId] = dbo.Booking.[BookingId] WHERE (@sync_"& _ 
            "force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sy"& _ 
            "nc_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_"& _ 
            "CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_T"& _ 
            "RACKING_MIN_VALID_VERSION(object_id(N'dbo.Booking')) > @sync_last_received_ancho"& _ 
            "r RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information fo"& _ 
            "r table ''%s''. To recover from this error, the client must reinitialize its loc"& _ 
            "al database and try again',16,3,N'dbo.Booking') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DateBooked", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookedById", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ConsigneeId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipperId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationAddress1", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingRemarkId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingStatusId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HasDailyBooking", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PreviousBookingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationCityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AssignedToAreaId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginAddress1", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginAddress2", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginBarangay", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationAddress2", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationBarangay", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OriginStreet", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DestinationStreet", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'BookingSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[BookingId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETA"& _ 
            "BLE(CHANGES dbo.Booking, @sync_last_received_anchor) CT WHERE (CT.[BookingId] = "& _ 
            "@BookingId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingId", System.Data.SqlDbType.UniqueIdentifier))
        'BookingSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.Booking.[BookingId], [BookingNo], [DateBooked], [BookedById], [Consign"& _ 
            "eeId], [ShipperId], [DestinationAddress1], [Remarks], [BookingRemarkId], [Bookin"& _ 
            "gStatusId], [HasDailyBooking], [PreviousBookingId], [OriginCityId], [Destination"& _ 
            "CityId], [AssignedToAreaId], [CreatedBy], [CreatedDate], [ModifiedBy], [Modified"& _ 
            "Date], [RecordStatus], [OriginAddress1], [OriginAddress2], [OriginBarangay], [De"& _ 
            "stinationAddress2], [DestinationBarangay], [OriginStreet], [DestinationStreet], "& _ 
            "CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.Booking JOIN CHANGETABLE(V"& _ 
            "ERSION dbo.Booking, ([BookingId]), (@BookingId)) CT  ON CT.[BookingId] = dbo.Boo"& _ 
            "king.[BookingId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BookingId", System.Data.SqlDbType.UniqueIdentifier))
        'BookingSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.Booking.[BookingId], [BookingNo], [DateBooked"& _ 
            "], [BookedById], [ConsigneeId], [ShipperId], [DestinationAddress1], [Remarks], ["& _ 
            "BookingRemarkId], [BookingStatusId], [HasDailyBooking], [PreviousBookingId], [Or"& _ 
            "iginCityId], [DestinationCityId], [AssignedToAreaId], [CreatedBy], [CreatedDate]"& _ 
            ", [ModifiedBy], [ModifiedDate], [RecordStatus], [OriginAddress1], [OriginAddress"& _ 
            "2], [OriginBarangay], [DestinationAddress2], [DestinationBarangay], [OriginStree"& _ 
            "t], [DestinationStreet] FROM dbo.Booking LEFT OUTER JOIN CHANGETABLE(CHANGES dbo"& _ 
            ".Booking, @sync_last_received_anchor) CT ON CT.[BookingId] = dbo.Booking.[Bookin"& _ 
            "gId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_clie"& _ 
            "nt_id_binary) ELSE  BEGIN SELECT dbo.Booking.[BookingId], [BookingNo], [DateBook"& _ 
            "ed], [BookedById], [ConsigneeId], [ShipperId], [DestinationAddress1], [Remarks],"& _ 
            " [BookingRemarkId], [BookingStatusId], [HasDailyBooking], [PreviousBookingId], ["& _ 
            "OriginCityId], [DestinationCityId], [AssignedToAreaId], [CreatedBy], [CreatedDat"& _ 
            "e], [ModifiedBy], [ModifiedDate], [RecordStatus], [OriginAddress1], [OriginAddre"& _ 
            "ss2], [OriginBarangay], [DestinationAddress2], [DestinationBarangay], [OriginStr"& _ 
            "eet], [DestinationStreet] FROM dbo.Booking JOIN CHANGETABLE(CHANGES dbo.Booking,"& _ 
            " @sync_last_received_anchor) CT ON CT.[BookingId] = dbo.Booking.[BookingId] WHER"& _ 
            "E (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_ne"& _ 
            "w_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <>"& _ 
            " @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo."& _ 
            "Booking')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking "& _ 
            "has cleaned up tracking information for table ''%s''. To recover from this error"& _ 
            ", the client must reinitialize its local database and try again',16,3,N'dbo.Book"& _ 
            "ing')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'BookingSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[BookingId] FROM CHANGETABLE(CHANGES db"& _ 
            "o.Booking, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D' A"& _ 
            "ND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT"& _ 
            " IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKIN"& _ 
            "G_MIN_VALID_VERSION(object_id(N'dbo.Booking')) > @sync_last_received_anchor RAIS"& _ 
            "ERROR (N'SQL Server Change Tracking has cleaned up tracking information for tabl"& _ 
            "e ''%s''. To recover from this error, the client must reinitialize its local dat"& _ 
            "abase and try again',16,3,N'dbo.Booking')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'BookingSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.Booking.[BookingId], [BookingNo], [Dat"& _ 
            "eBooked], [BookedById], [ConsigneeId], [ShipperId], [DestinationAddress1], [Rema"& _ 
            "rks], [BookingRemarkId], [BookingStatusId], [HasDailyBooking], [PreviousBookingI"& _ 
            "d], [OriginCityId], [DestinationCityId], [AssignedToAreaId], [CreatedBy], [Creat"& _ 
            "edDate], [ModifiedBy], [ModifiedDate], [RecordStatus], [OriginAddress1], [Origin"& _ 
            "Address2], [OriginBarangay], [DestinationAddress2], [DestinationBarangay], [Orig"& _ 
            "inStreet], [DestinationStreet] FROM dbo.Booking JOIN CHANGETABLE(CHANGES dbo.Boo"& _ 
            "king, @sync_last_received_anchor) CT ON CT.[BookingId] = dbo.Booking.[BookingId]"& _ 
            " WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_rec"& _ 
            "eived_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @syn"& _ 
            "c_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Booki"& _ 
            "ng')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has c"& _ 
            "leaned up tracking information for table ''%s''. To recover from this error, the"& _ 
            " client must reinitialize its local database and try again',16,3,N'dbo.Booking')"& _ 
            "  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Booking"
    End Sub
End Class

Partial Public Class PackageDimensionSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'PackageDimensionSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.PackageDim"& _ 
            "ension ([PackageDimensionId], [ShipmentId], [DrainingId], [CratingId], [Packagin"& _ 
            "gId], [Length], [Width], [Height], [CreatedBy], [CreatedDate], [ModifiedBy], [Mo"& _ 
            "difiedDate], [RecordStatus]) VALUES (@PackageDimensionId, @ShipmentId, @Draining"& _ 
            "Id, @CratingId, @PackagingId, @Length, @Width, @Height, @CreatedBy, @CreatedDate"& _ 
            ", @ModifiedBy, @ModifiedDate, @RecordStatus) SET @sync_row_count = @@rowcount; I"& _ 
            "F CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.PackageDimension')) > @sync_"& _ 
            "last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up trac"& _ 
            "king information for table ''%s''. To recover from this error, the client must r"& _ 
            "einitialize its local database and try again',16,3,N'dbo.PackageDimension') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackageDimensionId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DrainingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CratingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackagingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Length", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Width", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Height", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'PackageDimensionSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.PackageDimensio"& _ 
            "n FROM dbo.PackageDimension JOIN CHANGETABLE(VERSION dbo.PackageDimension, ([Pac"& _ 
            "kageDimensionId]), (@PackageDimensionId)) CT  ON CT.[PackageDimensionId] = dbo.P"& _ 
            "ackageDimension.[PackageDimensionId] WHERE (@sync_force_write = 1 OR CT.SYS_CHAN"& _ 
            "GE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT"& _ 
            ".SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_bina"& _ 
            "ry)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(obje"& _ 
            "ct_id(N'dbo.PackageDimension')) > @sync_last_received_anchor RAISERROR (N'SQL Se"& _ 
            "rver Change Tracking has cleaned up tracking information for table ''%s''. To re"& _ 
            "cover from this error, the client must reinitialize its local database and try a"& _ 
            "gain',16,3,N'dbo.PackageDimension') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackageDimensionId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'PackageDimensionSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.PackageDimensio"& _ 
            "n SET [ShipmentId] = @ShipmentId, [DrainingId] = @DrainingId, [CratingId] = @Cra"& _ 
            "tingId, [PackagingId] = @PackagingId, [Length] = @Length, [Width] = @Width, [Hei"& _ 
            "ght] = @Height, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [Modifie"& _ 
            "dBy] = @ModifiedBy, [ModifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStat"& _ 
            "us FROM dbo.PackageDimension  JOIN CHANGETABLE(VERSION dbo.PackageDimension, ([P"& _ 
            "ackageDimensionId]), (@PackageDimensionId)) CT  ON CT.[PackageDimensionId] = dbo"& _ 
            ".PackageDimension.[PackageDimensionId] WHERE (@sync_force_write = 1 OR CT.SYS_CH"& _ 
            "ANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR ("& _ 
            "CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_bi"& _ 
            "nary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(ob"& _ 
            "ject_id(N'dbo.PackageDimension')) > @sync_last_received_anchor RAISERROR (N'SQL "& _ 
            "Server Change Tracking has cleaned up tracking information for table ''%s''. To "& _ 
            "recover from this error, the client must reinitialize its local database and try"& _ 
            " again',16,3,N'dbo.PackageDimension') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ShipmentId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DrainingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CratingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackagingId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Length", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Width", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Height", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackageDimensionId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'PackageDimensionSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[PackageDimensionId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM"& _ 
            " CHANGETABLE(CHANGES dbo.PackageDimension, @sync_last_received_anchor) CT WHERE "& _ 
            "(CT.[PackageDimensionId] = @PackageDimensionId AND CT.SYS_CHANGE_OPERATION = 'D'"& _ 
            ")"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackageDimensionId", System.Data.SqlDbType.UniqueIdentifier))
        'PackageDimensionSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.PackageDimension.[PackageDimensionId], [ShipmentId], [DrainingId], [Cr"& _ 
            "atingId], [PackagingId], [Length], [Width], [Height], [CreatedBy], [CreatedDate]"& _ 
            ", [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CONTEXT, CT.SYS_CH"& _ 
            "ANGE_VERSION FROM dbo.PackageDimension JOIN CHANGETABLE(VERSION dbo.PackageDimen"& _ 
            "sion, ([PackageDimensionId]), (@PackageDimensionId)) CT  ON CT.[PackageDimension"& _ 
            "Id] = dbo.PackageDimension.[PackageDimensionId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PackageDimensionId", System.Data.SqlDbType.UniqueIdentifier))
        'PackageDimensionSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.PackageDimension.[PackageDimensionId], [Shipm"& _ 
            "entId], [DrainingId], [CratingId], [PackagingId], [Length], [Width], [Height], ["& _ 
            "CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo"& _ 
            ".PackageDimension LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.PackageDimension, @syn"& _ 
            "c_last_received_anchor) CT ON CT.[PackageDimensionId] = dbo.PackageDimension.[Pa"& _ 
            "ckageDimensionId] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT "& _ 
            "<> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.PackageDimension.[PackageDimen"& _ 
            "sionId], [ShipmentId], [DrainingId], [CratingId], [PackagingId], [Length], [Widt"& _ 
            "h], [Height], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordS"& _ 
            "tatus] FROM dbo.PackageDimension JOIN CHANGETABLE(CHANGES dbo.PackageDimension, "& _ 
            "@sync_last_received_anchor) CT ON CT.[PackageDimensionId] = dbo.PackageDimension"& _ 
            ".[PackageDimensionId] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CRE"& _ 
            "ATION_VERSION  <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL O"& _ 
            "R CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALI"& _ 
            "D_VERSION(object_id(N'dbo.PackageDimension')) > @sync_last_received_anchor RAISE"& _ 
            "RROR (N'SQL Server Change Tracking has cleaned up tracking information for table"& _ 
            " ''%s''. To recover from this error, the client must reinitialize its local data"& _ 
            "base and try again',16,3,N'dbo.PackageDimension')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'PackageDimensionSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[PackageDimensionId] FROM CHANGETABLE(C"& _ 
            "HANGES dbo.PackageDimension, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE"& _ 
            "_OPERATION = 'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT."& _ 
            "SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary));"& _ 
            " IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.PackageDimension')) > @syn"& _ 
            "c_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tr"& _ 
            "acking information for table ''%s''. To recover from this error, the client must"& _ 
            " reinitialize its local database and try again',16,3,N'dbo.PackageDimension')  E"& _ 
            "ND "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'PackageDimensionSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.PackageDimension.[PackageDimensionId],"& _ 
            " [ShipmentId], [DrainingId], [CratingId], [PackagingId], [Length], [Width], [Hei"& _ 
            "ght], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] F"& _ 
            "ROM dbo.PackageDimension JOIN CHANGETABLE(CHANGES dbo.PackageDimension, @sync_la"& _ 
            "st_received_anchor) CT ON CT.[PackageDimensionId] = dbo.PackageDimension.[Packag"& _ 
            "eDimensionId] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= "& _ 
            "@sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CO"& _ 
            "NTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_i"& _ 
            "d(N'dbo.PackageDimension')) > @sync_last_received_anchor RAISERROR (N'SQL Server"& _ 
            " Change Tracking has cleaned up tracking information for table ''%s''. To recove"& _ 
            "r from this error, the client must reinitialize its local database and try again"& _ 
            "',16,3,N'dbo.PackageDimension')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "PackageDimension"
    End Sub
End Class

Partial Public Class ClientSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'ClientSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Client ([C"& _ 
            "lientId], [AccountNo], [FirstName], [LastName], [ContactNo], [Mobile], [Fax], [E"& _ 
            "mail], [Address1], [Address2], [Barangay], [Street], [CityId], [AreaId], [ZipCod"& _ 
            "e], [Title], [Department], [Remarks], [CompanyId], [CreatedBy], [CreatedDate], ["& _ 
            "ModifiedBy], [ModifiedDate], [RecordStatus]) VALUES (@ClientId, @AccountNo, @Fir"& _ 
            "stName, @LastName, @ContactNo, @Mobile, @Fax, @Email, @Address1, @Address2, @Bar"& _ 
            "angay, @Street, @CityId, @AreaId, @ZipCode, @Title, @Department, @Remarks, @Comp"& _ 
            "anyId, @CreatedBy, @CreatedDate, @ModifiedBy, @ModifiedDate, @RecordStatus) SET "& _ 
            "@sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'd"& _ 
            "bo.Client')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Trackin"& _ 
            "g has cleaned up tracking information for table ''%s''. To recover from this err"& _ 
            "or, the client must reinitialize its local database and try again',16,3,N'dbo.Cl"& _ 
            "ient') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ClientId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AccountNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FirstName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastName", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactNo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Mobile", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Fax", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Email", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Address1", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Address2", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Barangay", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Street", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AreaId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ZipCode", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Title", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Department", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CompanyId", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'ClientSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Client FROM dbo"& _ 
            ".Client JOIN CHANGETABLE(VERSION dbo.Client, ([ClientId]), (@ClientId)) CT  ON C"& _ 
            "T.[ClientId] = dbo.Client.[ClientId] WHERE (@sync_force_write = 1 OR CT.SYS_CHAN"& _ 
            "GE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT"& _ 
            ".SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_bina"& _ 
            "ry)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(obje"& _ 
            "ct_id(N'dbo.Client')) > @sync_last_received_anchor RAISERROR (N'SQL Server Chang"& _ 
            "e Tracking has cleaned up tracking information for table ''%s''. To recover from"& _ 
            " this error, the client must reinitialize its local database and try again',16,3"& _ 
            ",N'dbo.Client') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ClientId", System.Data.SqlDbType.UniqueIdentifier))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'ClientSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Client SET [Acc"& _ 
            "ountNo] = @AccountNo, [FirstName] = @FirstName, [LastName] = @LastName, [Contact"& _ 
            "No] = @ContactNo, [Mobile] = @Mobile, [Fax] = @Fax, [Email] = @Email, [Address1]"& _ 
            " = @Address1, [Address2] = @Address2, [Barangay] = @Barangay, [Street] = @Street"& _ 
            ", [CityId] = @CityId, [AreaId] = @AreaId, [ZipCode] = @ZipCode, [Title] = @Title"& _ 
            ", [Department] = @Department, [Remarks] = @Remarks, [CompanyId] = @CompanyId, [C"& _ 
            "reatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [ModifiedBy] = @ModifiedBy"& _ 
            ", [ModifiedDate] = @ModifiedDate, [RecordStatus] = @RecordStatus FROM dbo.Client"& _ 
            "  JOIN CHANGETABLE(VERSION dbo.Client, ([ClientId]), (@ClientId)) CT  ON CT.[Cli"& _ 
            "entId] = dbo.Client.[ClientId] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VER"& _ 
            "SION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_C"& _ 
            "HANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) S"& _ 
            "ET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id("& _ 
            "N'dbo.Client')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Trac"& _ 
            "king has cleaned up tracking information for table ''%s''. To recover from this "& _ 
            "error, the client must reinitialize its local database and try again',16,3,N'dbo"& _ 
            ".Client') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AccountNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FirstName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastName", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ContactNo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Mobile", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Fax", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Email", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Address1", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Address2", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Barangay", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Street", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CityId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AreaId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ZipCode", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Title", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Department", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CompanyId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreatedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedBy", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ModifiedDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RecordStatus", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ClientId", System.Data.SqlDbType.UniqueIdentifier))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'ClientSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[ClientId], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETAB"& _ 
            "LE(CHANGES dbo.Client, @sync_last_received_anchor) CT WHERE (CT.[ClientId] = @Cl"& _ 
            "ientId AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ClientId", System.Data.SqlDbType.UniqueIdentifier))
        'ClientSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.Client.[ClientId], [AccountNo], [FirstName], [LastName], [ContactNo], "& _ 
            "[Mobile], [Fax], [Email], [Address1], [Address2], [Barangay], [Street], [CityId]"& _ 
            ", [AreaId], [ZipCode], [Title], [Department], [Remarks], [CompanyId], [CreatedBy"& _ 
            "], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus], CT.SYS_CHANGE_CO"& _ 
            "NTEXT, CT.SYS_CHANGE_VERSION FROM dbo.Client JOIN CHANGETABLE(VERSION dbo.Client"& _ 
            ", ([ClientId]), (@ClientId)) CT  ON CT.[ClientId] = dbo.Client.[ClientId]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ClientId", System.Data.SqlDbType.UniqueIdentifier))
        'ClientSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.Client.[ClientId], [AccountNo], [FirstName], "& _ 
            "[LastName], [ContactNo], [Mobile], [Fax], [Email], [Address1], [Address2], [Bara"& _ 
            "ngay], [Street], [CityId], [AreaId], [ZipCode], [Title], [Department], [Remarks]"& _ 
            ", [CompanyId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [Record"& _ 
            "Status] FROM dbo.Client LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.Client, @sync_la"& _ 
            "st_received_anchor) CT ON CT.[ClientId] = dbo.Client.[ClientId] WHERE (CT.SYS_CH"& _ 
            "ANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  B"& _ 
            "EGIN SELECT dbo.Client.[ClientId], [AccountNo], [FirstName], [LastName], [Contac"& _ 
            "tNo], [Mobile], [Fax], [Email], [Address1], [Address2], [Barangay], [Street], [C"& _ 
            "ityId], [AreaId], [ZipCode], [Title], [Department], [Remarks], [CompanyId], [Cre"& _ 
            "atedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [RecordStatus] FROM dbo.Cl"& _ 
            "ient JOIN CHANGETABLE(CHANGES dbo.Client, @sync_last_received_anchor) CT ON CT.["& _ 
            "ClientId] = dbo.Client.[ClientId] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SY"& _ 
            "S_CHANGE_CREATION_VERSION  <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTE"& _ 
            "XT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACK"& _ 
            "ING_MIN_VALID_VERSION(object_id(N'dbo.Client')) > @sync_last_received_anchor RAI"& _ 
            "SERROR (N'SQL Server Change Tracking has cleaned up tracking information for tab"& _ 
            "le ''%s''. To recover from this error, the client must reinitialize its local da"& _ 
            "tabase and try again',16,3,N'dbo.Client')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'ClientSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[ClientId] FROM CHANGETABLE(CHANGES dbo"& _ 
            ".Client, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D' AND"& _ 
            " CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT I"& _ 
            "S NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_"& _ 
            "MIN_VALID_VERSION(object_id(N'dbo.Client')) > @sync_last_received_anchor RAISERR"& _ 
            "OR (N'SQL Server Change Tracking has cleaned up tracking information for table '"& _ 
            "'%s''. To recover from this error, the client must reinitialize its local databa"& _ 
            "se and try again',16,3,N'dbo.Client')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'ClientSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.Client.[ClientId], [AccountNo], [First"& _ 
            "Name], [LastName], [ContactNo], [Mobile], [Fax], [Email], [Address1], [Address2]"& _ 
            ", [Barangay], [Street], [CityId], [AreaId], [ZipCode], [Title], [Department], [R"& _ 
            "emarks], [CompanyId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], "& _ 
            "[RecordStatus] FROM dbo.Client JOIN CHANGETABLE(CHANGES dbo.Client, @sync_last_r"& _ 
            "eceived_anchor) CT ON CT.[ClientId] = dbo.Client.[ClientId] WHERE (CT.SYS_CHANGE"& _ 
            "_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT."& _ 
            "SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary));"& _ 
            " IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Client')) > @sync_last_rec"& _ 
            "eived_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking inf"& _ 
            "ormation for table ''%s''. To recover from this error, the client must reinitial"& _ 
            "ize its local database and try again',16,3,N'dbo.Client')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Client"
    End Sub
End Class

Partial Public Class DatabaseServerSyncProvider
    Inherits Microsoft.Synchronization.Data.Server.DbServerSyncProvider
    
    Private _groupSyncAdapter As GroupSyncAdapter
    
    Private _userSyncAdapter As UserSyncAdapter
    
    Private _applicableRateSyncAdapter As ApplicableRateSyncAdapter
    
    Private _applicationSettingSyncAdapter As ApplicationSettingSyncAdapter
    
    Private _billingPeriodSyncAdapter As BillingPeriodSyncAdapter
    
    Private _bookingRemarkSyncAdapter As BookingRemarkSyncAdapter
    
    Private _bookingStatusSyncAdapter As BookingStatusSyncAdapter
    
    Private _branchCorpOfficeSyncAdapter As BranchCorpOfficeSyncAdapter
    
    Private _businessTypeSyncAdapter As BusinessTypeSyncAdapter
    
    Private _citySyncAdapter As CitySyncAdapter
    
    Private _clusterSyncAdapter As ClusterSyncAdapter
    
    Private _commoditySyncAdapter As CommoditySyncAdapter
    
    Private _commodityTypeSyncAdapter As CommodityTypeSyncAdapter
    
    Private _companySyncAdapter As CompanySyncAdapter
    
    Private _cratingSyncAdapter As CratingSyncAdapter
    
    Private _deliveredPackageSyncAdapter As DeliveredPackageSyncAdapter
    
    Private _deliverySyncAdapter As DeliverySyncAdapter
    
    Private _deliveryReceiptSyncAdapter As DeliveryReceiptSyncAdapter
    
    Private _deliveryRemarkSyncAdapter As DeliveryRemarkSyncAdapter
    
    Private _deliveryStatusSyncAdapter As DeliveryStatusSyncAdapter
    
    Private _departmentSyncAdapter As DepartmentSyncAdapter
    
    Private _distributionSyncAdapter As DistributionSyncAdapter
    
    Private _employeeSyncAdapter As EmployeeSyncAdapter
    
    Private _expressRateSyncAdapter As ExpressRateSyncAdapter
    
    Private _fuelSurchargeSyncAdapter As FuelSurchargeSyncAdapter
    
    Private _goodsDescriptionSyncAdapter As GoodsDescriptionSyncAdapter
    
    Private _packageNumberSyncAdapter As PackageNumberSyncAdapter
    
    Private _packagingSyncAdapter As PackagingSyncAdapter
    
    Private _paymentSyncAdapter As PaymentSyncAdapter
    
    Private _paymentModeSyncAdapter As PaymentModeSyncAdapter
    
    Private _paymentTermSyncAdapter As PaymentTermSyncAdapter
    
    Private _paymentTypeSyncAdapter As PaymentTypeSyncAdapter
    
    Private _positionSyncAdapter As PositionSyncAdapter
    
    Private _provinceSyncAdapter As ProvinceSyncAdapter
    
    Private _rateMatrixSyncAdapter As RateMatrixSyncAdapter
    
    Private _regionSyncAdapter As RegionSyncAdapter
    
    Private _revenueUnitSyncAdapter As RevenueUnitSyncAdapter
    
    Private _revenueUnitTypeSyncAdapter As RevenueUnitTypeSyncAdapter
    
    Private _roleSyncAdapter As RoleSyncAdapter
    
    Private _roleUserSyncAdapter As RoleUserSyncAdapter
    
    Private _serviceModeSyncAdapter As ServiceModeSyncAdapter
    
    Private _serviceTypeSyncAdapter As ServiceTypeSyncAdapter
    
    Private _shipmentSyncAdapter As ShipmentSyncAdapter
    
    Private _shipmentBasicFeeSyncAdapter As ShipmentBasicFeeSyncAdapter
    
    Private _shipmentStatusSyncAdapter As ShipmentStatusSyncAdapter
    
    Private _shipModeSyncAdapter As ShipModeSyncAdapter
    
    Private _statementOfAccountSyncAdapter As StatementOfAccountSyncAdapter
    
    Private _statementOfAccountNumberSyncAdapter As StatementOfAccountNumberSyncAdapter
    
    Private _statementOfAccountPaymentSyncAdapter As StatementOfAccountPaymentSyncAdapter
    
    Private _transShipmentLegSyncAdapter As TransShipmentLegSyncAdapter
    
    Private _transShipmentRouteSyncAdapter As TransShipmentRouteSyncAdapter
    
    Private _bookingSyncAdapter As BookingSyncAdapter
    
    Private _packageDimensionSyncAdapter As PackageDimensionSyncAdapter
    
    Private _clientSyncAdapter As ClientSyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Dim connectionString As String = Global.Synchronization.My.MySettings.Default.Servercms2_Beta4ConnectionString
        Me.InitializeConnection(connectionString)
        Me.InitializeSyncAdapters
        Me.InitializeNewAnchorCommand
        Me.OnInitialized
    End Sub
    
    Public Sub New(ByVal connectionString As String)
        MyBase.New
        Me.InitializeConnection(connectionString)
        Me.InitializeSyncAdapters
        Me.InitializeNewAnchorCommand
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property GroupSyncAdapter() As GroupSyncAdapter
        Get
            Return Me._groupSyncAdapter
        End Get
        Set
            Me._groupSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property UserSyncAdapter() As UserSyncAdapter
        Get
            Return Me._userSyncAdapter
        End Get
        Set
            Me._userSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property ApplicableRateSyncAdapter() As ApplicableRateSyncAdapter
        Get
            Return Me._applicableRateSyncAdapter
        End Get
        Set
            Me._applicableRateSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property ApplicationSettingSyncAdapter() As ApplicationSettingSyncAdapter
        Get
            Return Me._applicationSettingSyncAdapter
        End Get
        Set
            Me._applicationSettingSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property BillingPeriodSyncAdapter() As BillingPeriodSyncAdapter
        Get
            Return Me._billingPeriodSyncAdapter
        End Get
        Set
            Me._billingPeriodSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property BookingRemarkSyncAdapter() As BookingRemarkSyncAdapter
        Get
            Return Me._bookingRemarkSyncAdapter
        End Get
        Set
            Me._bookingRemarkSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property BookingStatusSyncAdapter() As BookingStatusSyncAdapter
        Get
            Return Me._bookingStatusSyncAdapter
        End Get
        Set
            Me._bookingStatusSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property BranchCorpOfficeSyncAdapter() As BranchCorpOfficeSyncAdapter
        Get
            Return Me._branchCorpOfficeSyncAdapter
        End Get
        Set
            Me._branchCorpOfficeSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property BusinessTypeSyncAdapter() As BusinessTypeSyncAdapter
        Get
            Return Me._businessTypeSyncAdapter
        End Get
        Set
            Me._businessTypeSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property CitySyncAdapter() As CitySyncAdapter
        Get
            Return Me._citySyncAdapter
        End Get
        Set
            Me._citySyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property ClusterSyncAdapter() As ClusterSyncAdapter
        Get
            Return Me._clusterSyncAdapter
        End Get
        Set
            Me._clusterSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property CommoditySyncAdapter() As CommoditySyncAdapter
        Get
            Return Me._commoditySyncAdapter
        End Get
        Set
            Me._commoditySyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property CommodityTypeSyncAdapter() As CommodityTypeSyncAdapter
        Get
            Return Me._commodityTypeSyncAdapter
        End Get
        Set
            Me._commodityTypeSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property CompanySyncAdapter() As CompanySyncAdapter
        Get
            Return Me._companySyncAdapter
        End Get
        Set
            Me._companySyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property CratingSyncAdapter() As CratingSyncAdapter
        Get
            Return Me._cratingSyncAdapter
        End Get
        Set
            Me._cratingSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property DeliveredPackageSyncAdapter() As DeliveredPackageSyncAdapter
        Get
            Return Me._deliveredPackageSyncAdapter
        End Get
        Set
            Me._deliveredPackageSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property DeliverySyncAdapter() As DeliverySyncAdapter
        Get
            Return Me._deliverySyncAdapter
        End Get
        Set
            Me._deliverySyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property DeliveryReceiptSyncAdapter() As DeliveryReceiptSyncAdapter
        Get
            Return Me._deliveryReceiptSyncAdapter
        End Get
        Set
            Me._deliveryReceiptSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property DeliveryRemarkSyncAdapter() As DeliveryRemarkSyncAdapter
        Get
            Return Me._deliveryRemarkSyncAdapter
        End Get
        Set
            Me._deliveryRemarkSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property DeliveryStatusSyncAdapter() As DeliveryStatusSyncAdapter
        Get
            Return Me._deliveryStatusSyncAdapter
        End Get
        Set
            Me._deliveryStatusSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property DepartmentSyncAdapter() As DepartmentSyncAdapter
        Get
            Return Me._departmentSyncAdapter
        End Get
        Set
            Me._departmentSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property DistributionSyncAdapter() As DistributionSyncAdapter
        Get
            Return Me._distributionSyncAdapter
        End Get
        Set
            Me._distributionSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property EmployeeSyncAdapter() As EmployeeSyncAdapter
        Get
            Return Me._employeeSyncAdapter
        End Get
        Set
            Me._employeeSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property ExpressRateSyncAdapter() As ExpressRateSyncAdapter
        Get
            Return Me._expressRateSyncAdapter
        End Get
        Set
            Me._expressRateSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property FuelSurchargeSyncAdapter() As FuelSurchargeSyncAdapter
        Get
            Return Me._fuelSurchargeSyncAdapter
        End Get
        Set
            Me._fuelSurchargeSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property GoodsDescriptionSyncAdapter() As GoodsDescriptionSyncAdapter
        Get
            Return Me._goodsDescriptionSyncAdapter
        End Get
        Set
            Me._goodsDescriptionSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property PackageNumberSyncAdapter() As PackageNumberSyncAdapter
        Get
            Return Me._packageNumberSyncAdapter
        End Get
        Set
            Me._packageNumberSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property PackagingSyncAdapter() As PackagingSyncAdapter
        Get
            Return Me._packagingSyncAdapter
        End Get
        Set
            Me._packagingSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property PaymentSyncAdapter() As PaymentSyncAdapter
        Get
            Return Me._paymentSyncAdapter
        End Get
        Set
            Me._paymentSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property PaymentModeSyncAdapter() As PaymentModeSyncAdapter
        Get
            Return Me._paymentModeSyncAdapter
        End Get
        Set
            Me._paymentModeSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property PaymentTermSyncAdapter() As PaymentTermSyncAdapter
        Get
            Return Me._paymentTermSyncAdapter
        End Get
        Set
            Me._paymentTermSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property PaymentTypeSyncAdapter() As PaymentTypeSyncAdapter
        Get
            Return Me._paymentTypeSyncAdapter
        End Get
        Set
            Me._paymentTypeSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property PositionSyncAdapter() As PositionSyncAdapter
        Get
            Return Me._positionSyncAdapter
        End Get
        Set
            Me._positionSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property ProvinceSyncAdapter() As ProvinceSyncAdapter
        Get
            Return Me._provinceSyncAdapter
        End Get
        Set
            Me._provinceSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property RateMatrixSyncAdapter() As RateMatrixSyncAdapter
        Get
            Return Me._rateMatrixSyncAdapter
        End Get
        Set
            Me._rateMatrixSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property RegionSyncAdapter() As RegionSyncAdapter
        Get
            Return Me._regionSyncAdapter
        End Get
        Set
            Me._regionSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property RevenueUnitSyncAdapter() As RevenueUnitSyncAdapter
        Get
            Return Me._revenueUnitSyncAdapter
        End Get
        Set
            Me._revenueUnitSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property RevenueUnitTypeSyncAdapter() As RevenueUnitTypeSyncAdapter
        Get
            Return Me._revenueUnitTypeSyncAdapter
        End Get
        Set
            Me._revenueUnitTypeSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property RoleSyncAdapter() As RoleSyncAdapter
        Get
            Return Me._roleSyncAdapter
        End Get
        Set
            Me._roleSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property RoleUserSyncAdapter() As RoleUserSyncAdapter
        Get
            Return Me._roleUserSyncAdapter
        End Get
        Set
            Me._roleUserSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property ServiceModeSyncAdapter() As ServiceModeSyncAdapter
        Get
            Return Me._serviceModeSyncAdapter
        End Get
        Set
            Me._serviceModeSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property ServiceTypeSyncAdapter() As ServiceTypeSyncAdapter
        Get
            Return Me._serviceTypeSyncAdapter
        End Get
        Set
            Me._serviceTypeSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property ShipmentSyncAdapter() As ShipmentSyncAdapter
        Get
            Return Me._shipmentSyncAdapter
        End Get
        Set
            Me._shipmentSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property ShipmentBasicFeeSyncAdapter() As ShipmentBasicFeeSyncAdapter
        Get
            Return Me._shipmentBasicFeeSyncAdapter
        End Get
        Set
            Me._shipmentBasicFeeSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property ShipmentStatusSyncAdapter() As ShipmentStatusSyncAdapter
        Get
            Return Me._shipmentStatusSyncAdapter
        End Get
        Set
            Me._shipmentStatusSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property ShipModeSyncAdapter() As ShipModeSyncAdapter
        Get
            Return Me._shipModeSyncAdapter
        End Get
        Set
            Me._shipModeSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property StatementOfAccountSyncAdapter() As StatementOfAccountSyncAdapter
        Get
            Return Me._statementOfAccountSyncAdapter
        End Get
        Set
            Me._statementOfAccountSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property StatementOfAccountNumberSyncAdapter() As StatementOfAccountNumberSyncAdapter
        Get
            Return Me._statementOfAccountNumberSyncAdapter
        End Get
        Set
            Me._statementOfAccountNumberSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property StatementOfAccountPaymentSyncAdapter() As StatementOfAccountPaymentSyncAdapter
        Get
            Return Me._statementOfAccountPaymentSyncAdapter
        End Get
        Set
            Me._statementOfAccountPaymentSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property TransShipmentLegSyncAdapter() As TransShipmentLegSyncAdapter
        Get
            Return Me._transShipmentLegSyncAdapter
        End Get
        Set
            Me._transShipmentLegSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property TransShipmentRouteSyncAdapter() As TransShipmentRouteSyncAdapter
        Get
            Return Me._transShipmentRouteSyncAdapter
        End Get
        Set
            Me._transShipmentRouteSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property BookingSyncAdapter() As BookingSyncAdapter
        Get
            Return Me._bookingSyncAdapter
        End Get
        Set
            Me._bookingSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property PackageDimensionSyncAdapter() As PackageDimensionSyncAdapter
        Get
            Return Me._packageDimensionSyncAdapter
        End Get
        Set
            Me._packageDimensionSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property ClientSyncAdapter() As ClientSyncAdapter
        Get
            Return Me._clientSyncAdapter
        End Get
        Set
            Me._clientSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeConnection(ByVal connectionString As String)
        Me.Connection = New System.Data.SqlClient.SqlConnection(connectionString)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeSyncAdapters()
        'Create SyncAdapters.
        Me._groupSyncAdapter = New GroupSyncAdapter
        Me.SyncAdapters.Add(Me._groupSyncAdapter)
        Me._userSyncAdapter = New UserSyncAdapter
        Me.SyncAdapters.Add(Me._userSyncAdapter)
        Me._applicableRateSyncAdapter = New ApplicableRateSyncAdapter
        Me.SyncAdapters.Add(Me._applicableRateSyncAdapter)
        Me._applicationSettingSyncAdapter = New ApplicationSettingSyncAdapter
        Me.SyncAdapters.Add(Me._applicationSettingSyncAdapter)
        Me._billingPeriodSyncAdapter = New BillingPeriodSyncAdapter
        Me.SyncAdapters.Add(Me._billingPeriodSyncAdapter)
        Me._bookingRemarkSyncAdapter = New BookingRemarkSyncAdapter
        Me.SyncAdapters.Add(Me._bookingRemarkSyncAdapter)
        Me._bookingStatusSyncAdapter = New BookingStatusSyncAdapter
        Me.SyncAdapters.Add(Me._bookingStatusSyncAdapter)
        Me._branchCorpOfficeSyncAdapter = New BranchCorpOfficeSyncAdapter
        Me.SyncAdapters.Add(Me._branchCorpOfficeSyncAdapter)
        Me._businessTypeSyncAdapter = New BusinessTypeSyncAdapter
        Me.SyncAdapters.Add(Me._businessTypeSyncAdapter)
        Me._citySyncAdapter = New CitySyncAdapter
        Me.SyncAdapters.Add(Me._citySyncAdapter)
        Me._clusterSyncAdapter = New ClusterSyncAdapter
        Me.SyncAdapters.Add(Me._clusterSyncAdapter)
        Me._commoditySyncAdapter = New CommoditySyncAdapter
        Me.SyncAdapters.Add(Me._commoditySyncAdapter)
        Me._commodityTypeSyncAdapter = New CommodityTypeSyncAdapter
        Me.SyncAdapters.Add(Me._commodityTypeSyncAdapter)
        Me._companySyncAdapter = New CompanySyncAdapter
        Me.SyncAdapters.Add(Me._companySyncAdapter)
        Me._cratingSyncAdapter = New CratingSyncAdapter
        Me.SyncAdapters.Add(Me._cratingSyncAdapter)
        Me._deliveredPackageSyncAdapter = New DeliveredPackageSyncAdapter
        Me.SyncAdapters.Add(Me._deliveredPackageSyncAdapter)
        Me._deliverySyncAdapter = New DeliverySyncAdapter
        Me.SyncAdapters.Add(Me._deliverySyncAdapter)
        Me._deliveryReceiptSyncAdapter = New DeliveryReceiptSyncAdapter
        Me.SyncAdapters.Add(Me._deliveryReceiptSyncAdapter)
        Me._deliveryRemarkSyncAdapter = New DeliveryRemarkSyncAdapter
        Me.SyncAdapters.Add(Me._deliveryRemarkSyncAdapter)
        Me._deliveryStatusSyncAdapter = New DeliveryStatusSyncAdapter
        Me.SyncAdapters.Add(Me._deliveryStatusSyncAdapter)
        Me._departmentSyncAdapter = New DepartmentSyncAdapter
        Me.SyncAdapters.Add(Me._departmentSyncAdapter)
        Me._distributionSyncAdapter = New DistributionSyncAdapter
        Me.SyncAdapters.Add(Me._distributionSyncAdapter)
        Me._employeeSyncAdapter = New EmployeeSyncAdapter
        Me.SyncAdapters.Add(Me._employeeSyncAdapter)
        Me._expressRateSyncAdapter = New ExpressRateSyncAdapter
        Me.SyncAdapters.Add(Me._expressRateSyncAdapter)
        Me._fuelSurchargeSyncAdapter = New FuelSurchargeSyncAdapter
        Me.SyncAdapters.Add(Me._fuelSurchargeSyncAdapter)
        Me._goodsDescriptionSyncAdapter = New GoodsDescriptionSyncAdapter
        Me.SyncAdapters.Add(Me._goodsDescriptionSyncAdapter)
        Me._packageNumberSyncAdapter = New PackageNumberSyncAdapter
        Me.SyncAdapters.Add(Me._packageNumberSyncAdapter)
        Me._packagingSyncAdapter = New PackagingSyncAdapter
        Me.SyncAdapters.Add(Me._packagingSyncAdapter)
        Me._paymentSyncAdapter = New PaymentSyncAdapter
        Me.SyncAdapters.Add(Me._paymentSyncAdapter)
        Me._paymentModeSyncAdapter = New PaymentModeSyncAdapter
        Me.SyncAdapters.Add(Me._paymentModeSyncAdapter)
        Me._paymentTermSyncAdapter = New PaymentTermSyncAdapter
        Me.SyncAdapters.Add(Me._paymentTermSyncAdapter)
        Me._paymentTypeSyncAdapter = New PaymentTypeSyncAdapter
        Me.SyncAdapters.Add(Me._paymentTypeSyncAdapter)
        Me._positionSyncAdapter = New PositionSyncAdapter
        Me.SyncAdapters.Add(Me._positionSyncAdapter)
        Me._provinceSyncAdapter = New ProvinceSyncAdapter
        Me.SyncAdapters.Add(Me._provinceSyncAdapter)
        Me._rateMatrixSyncAdapter = New RateMatrixSyncAdapter
        Me.SyncAdapters.Add(Me._rateMatrixSyncAdapter)
        Me._regionSyncAdapter = New RegionSyncAdapter
        Me.SyncAdapters.Add(Me._regionSyncAdapter)
        Me._revenueUnitSyncAdapter = New RevenueUnitSyncAdapter
        Me.SyncAdapters.Add(Me._revenueUnitSyncAdapter)
        Me._revenueUnitTypeSyncAdapter = New RevenueUnitTypeSyncAdapter
        Me.SyncAdapters.Add(Me._revenueUnitTypeSyncAdapter)
        Me._roleSyncAdapter = New RoleSyncAdapter
        Me.SyncAdapters.Add(Me._roleSyncAdapter)
        Me._roleUserSyncAdapter = New RoleUserSyncAdapter
        Me.SyncAdapters.Add(Me._roleUserSyncAdapter)
        Me._serviceModeSyncAdapter = New ServiceModeSyncAdapter
        Me.SyncAdapters.Add(Me._serviceModeSyncAdapter)
        Me._serviceTypeSyncAdapter = New ServiceTypeSyncAdapter
        Me.SyncAdapters.Add(Me._serviceTypeSyncAdapter)
        Me._shipmentSyncAdapter = New ShipmentSyncAdapter
        Me.SyncAdapters.Add(Me._shipmentSyncAdapter)
        Me._shipmentBasicFeeSyncAdapter = New ShipmentBasicFeeSyncAdapter
        Me.SyncAdapters.Add(Me._shipmentBasicFeeSyncAdapter)
        Me._shipmentStatusSyncAdapter = New ShipmentStatusSyncAdapter
        Me.SyncAdapters.Add(Me._shipmentStatusSyncAdapter)
        Me._shipModeSyncAdapter = New ShipModeSyncAdapter
        Me.SyncAdapters.Add(Me._shipModeSyncAdapter)
        Me._statementOfAccountSyncAdapter = New StatementOfAccountSyncAdapter
        Me.SyncAdapters.Add(Me._statementOfAccountSyncAdapter)
        Me._statementOfAccountNumberSyncAdapter = New StatementOfAccountNumberSyncAdapter
        Me.SyncAdapters.Add(Me._statementOfAccountNumberSyncAdapter)
        Me._statementOfAccountPaymentSyncAdapter = New StatementOfAccountPaymentSyncAdapter
        Me.SyncAdapters.Add(Me._statementOfAccountPaymentSyncAdapter)
        Me._transShipmentLegSyncAdapter = New TransShipmentLegSyncAdapter
        Me.SyncAdapters.Add(Me._transShipmentLegSyncAdapter)
        Me._transShipmentRouteSyncAdapter = New TransShipmentRouteSyncAdapter
        Me.SyncAdapters.Add(Me._transShipmentRouteSyncAdapter)
        Me._bookingSyncAdapter = New BookingSyncAdapter
        Me.SyncAdapters.Add(Me._bookingSyncAdapter)
        Me._packageDimensionSyncAdapter = New PackageDimensionSyncAdapter
        Me.SyncAdapters.Add(Me._packageDimensionSyncAdapter)
        Me._clientSyncAdapter = New ClientSyncAdapter
        Me.SyncAdapters.Add(Me._clientSyncAdapter)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeNewAnchorCommand()
        'selectNewAnchorCmd command.
        Me.SelectNewAnchorCommand = New System.Data.SqlClient.SqlCommand
        Me.SelectNewAnchorCommand.CommandText = "Select @sync_new_received_anchor = CHANGE_TRACKING_CURRENT_VERSION()"
        Me.SelectNewAnchorCommand.CommandType = System.Data.CommandType.Text
        Dim selectnewanchorcommand_sync_new_received_anchorParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt)
        selectnewanchorcommand_sync_new_received_anchorParameter.Direction = System.Data.ParameterDirection.Output
        Me.SelectNewAnchorCommand.Parameters.Add(selectnewanchorcommand_sync_new_received_anchorParameter)

    End Sub
End Class
